[
  {
    "Repo": "sjstoelting/talks",
    "SQL": "SELECT a.\"ArtistId\" AS artist_id\n\t\t\t, a.\"Title\" AS album_title\n\t\t\t, array_agg(t.\"Name\") AS album_tracks\n\t\tFROM mysql_album AS a\n\t\t\tINNER JOIN \"Track\" AS t\n\t\t\t\tON a.\"AlbumId\" = t.\"AlbumId\"\n\t\tGROUP BY a.\"ArtistId\"\n\t\t\t, a.\"Title\"",
    "cte_name": "albums",
    "file_name": "One-Database-To-Rule-Em-All.sql",
    "file_path": "https://github.com/sjstoelting/talks/blob/654251873e754e44ce615a6a0b83a508ef48e852/one-database-to-rule-em-all.froscon/One-Database-To-Rule-Em-All.sql",
    "file_size": 7571,
    "num_branches": 1,
    "num_commits": 93,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 2,
    "repo_path": "https://github.com/sjstoelting/talks",
    "repo_releases": 0,
    "repo_size": 57304,
    "repo_stars": 14,
    "schema": [
      "Chinook"
    ],
    "summary": "This SQL code is grouping albums by artist and title, and aggregating the names of all tracks on each album into an array for each album.",
    "phrase_similarity": 0.45261698961257935,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_AlbumTracks`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.3274203836917877,
    "Curated-score": 8,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"albums\" for the CTE is somewhat descriptive as it indicates that the result set contains information about albums. However, it does not specify that the result set includes the artist ID, album title, and a list of tracks. A more comprehensive name could be \"album_details\" or \"album_info\", which would better reflect the purpose of the C",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"albums\" as a score of 4.\n\nThe name \"albums\" is somewhat related to the CTE's purpose, as it is a common term used in the context of music and databases. However, it does not provide a clear indication of what the CTE is trying to produce, which is a list of albums with their corresponding tracks. A more descriptive name, such as \"album_info\" or \"artist_albums\", would be more accurate and helpful in understanding the purpose of the CTE.",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 3\n\nThe proposed name \"albums\" is very generic and does not reflect the specific purpose of the CTE, which is to aggregate album tracks by artist and album title. A more descriptive name would include the aggregation of tracks, such as \"album_tracks_per_artist_title\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"albums\" as follows:\n\nName: albums\nExpected score: 6\n\nThe reason is that the name \"albums\" does not clearly reflect the purpose of the CTE, which is to aggregate tracks by artist",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "amantiwari8861/mysql-tutorial",
    "SQL": "SELECT department_id, AVG(salary) AS avg_salary\n    FROM employees\n    GROUP BY department_id",
    "cte_name": "AvgSalaries",
    "file_name": "MySqlCheatSheet.sql",
    "file_path": "https://github.com/amantiwari8861/mysql-tutorial/blob/a6e65a537a6a935dc60cbf846190afe89dc85497/MySqlCheatSheet.sql",
    "file_size": 44754,
    "num_branches": 1,
    "num_commits": 41,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/amantiwari8861/mysql-tutorial",
    "repo_releases": 0,
    "repo_size": 20541,
    "repo_stars": 6,
    "schema": [
      "ClassicModels"
    ],
    "summary": "This SQL code is calculating the average salary for each department from the 'employees' table.",
    "phrase_similarity": 0.03692159429192543,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_AVG_SALARY_BY_DEPARTMENT`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.6055552363395691,
    "Curated-score": 9,
    "gpt-4o-name-evaluation": "8",
    "gpt-4-turbo-name-evaluation": "8",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"AvgSalaries\" for the CTE is quite descriptive and accurately reflects the purpose of the SQL statement, which is to calculate the average salary for each department. I would give it a score of 9 out of 10. The only reason it's not a perfect 10 is because it doesn't explicitly mention the grouping by department_id, but that information is still implicitly understood from the SQL statement itself.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"AvgSalaries\" as a score of 8.\n\nThe name \"AvgSalaries\" is descriptive and accurately reflects the purpose of the CTE, which is to calculate the average salary for each department. It clearly conveys the type of data being calculated and the scope of the calculation. However, it could be slightly more specific and descriptive, such as \"DepartmentAverageSalaries\" or \"AvgSalaryByDepartment\", which would earn a higher score. Nevertheless, \"AvgSalaries\" is a clear and concise name that effectively communicates the purpose of the CTE.",
    "Phi-3.5-mini-instruct-name-evaluation": "5\n\nThe name \"AvgSalaries\" indicates that the CTE calculates average salaries but lacks specificity about the grouping (by department_id). A more descriptive name could be \"AverageSalaryByDepartment\", which would better reflect the purpose of the CTE. Therefore, a score of 5 is given, indicating that the name is somewhat descriptive but could be improved for clarity.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"AvgSalaries\" as follows:\n\nName: AvgSalaries\nExpected score: 6\n\nThe reason for this low score is that the name does not clearly reflect the purpose of the CTE. The name",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "8 \n"
  },
  {
    "Repo": "ewerthonk/sql-challenges-beecrowd",
    "SQL": "SELECT \n\t\t'Average' as name,\n\t\tCAST(AVG(customers_number) AS integer) as customers_number,\n\t\t2 AS order_filter\n\tFROM lawyers",
    "cte_name": "average_customers",
    "file_name": "solutions-sql-problems_beecrowd.sql",
    "file_path": "https://github.com/ewerthonk/sql-challenges-beecrowd/blob/19f815eb464ef6a47625ddcce9172c54100b18e2/solutions-sql-problems_beecrowd.sql",
    "file_size": 27229,
    "num_branches": 1,
    "num_commits": 15,
    "num_prs": 1,
    "repo_contributors": 2,
    "repo_description": "Solution of SQL problems from URI/Beecrowd. My 1st Database (SQL) Exercises. ",
    "repo_forks": 3,
    "repo_path": "https://github.com/ewerthonk/sql-challenges-beecrowd",
    "repo_releases": 0,
    "repo_size": 447,
    "repo_stars": 3,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is generating an average of the 'customers_number' for all records in the 'lawyers' table, labeling it as 'Average' for the 'name' column, and setting the 'order_filter' to a fixed value of 2.",
    "phrase_similarity": 0.503471314907074,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Avg_Lawyers_Count`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.48117202520370483,
    "Curated-score": 4,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"average_customers\" for the SQL statement is quite descriptive and accurately reflects the purpose of the CTE, which is calculating the average number of customers. I would give it a score of 9. It could potentially be a 10 if the context is clear enough, but adding \"per\" or \"in\" might make it even clearer. However, a score of 9 is still very good.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"average_customers\" as a score of 8.\n\nThe name accurately reflects the purpose of the CTE, which is to calculate the average number of customers. It is descriptive and easy to understand, making it a clear and concise name. However, it could be slightly more specific, such as \"average_lawyers_customers\" to make it even more accurate and descriptive.",
    "Phi-3.5-mini-instruct-name-evaluation": "9\n\nThe name \"average_customers\" is quite descriptive, indicating that the CTE calculates the average of a certain metric (customers_number) and relates it to the context of customers. It loses a point because it doesn't mention the fixed value '2' used for the order_filter, which could be relevant for understanding the scope or limitation of the average calculation. However, overall, it's a strong name that clearly reflects the purpose of the CTE.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"average_customers\" as follows:\n\nScore: 6\n\nThe reason is that the name does not clearly reflect the purpose of the CTE, which is to calculate the average number of customers for each lawyer.",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "8 \n"
  },
  {
    "Repo": "kiranskmr/workflows_automation",
    "SQL": "select\n        s.supplier_account_balance,\n        s.supplier_name,\n        s.supplier_nation_key,\n        s.supplier_region_key,\n        s.supplier_nation_name,\n        s.supplier_region_name,\n        s.part_key,\n        s.part_manufacturer_name,\n        s.part_size,\n        s.part_type_name,\n        s.supplier_cost_amount,\n        s.supplier_address,\n        s.supplier_phone_number,\n        rank() over(partition by s.supplier_region_key, s.part_key order by s.supplier_cost_amount) as supplier_cost_rank,\n        row_number() over(partition by s.supplier_region_key, s.part_key, s.supplier_cost_amount order by s.supplier_account_balance desc) as supplier_rank\n    from\n        {{ ref(\"dim_part_supplier_xrf\") }} s",
    "cte_name": "parts_suppliers",
    "file_name": "rpt_minimum_cost_suppliers.sql",
    "file_path": "https://github.com/kiranskmr/workflows_automation/blob/5fae8f352a1bf5c2103636c055daca3ef0ad5dc8/models/wh/rpt_minimum_cost_suppliers.sql",
    "file_size": 1024,
    "num_branches": 3,
    "num_commits": 40,
    "num_prs": 32,
    "repo_contributors": 1,
    "repo_description": "Automation of Databricks workflows",
    "repo_forks": 6,
    "repo_path": "https://github.com/kiranskmr/workflows_automation",
    "repo_releases": 0,
    "repo_size": 2591,
    "repo_stars": 7,
    "schema": [
      "TPC-H"
    ],
    "summary": "This SQL code is selecting various details about suppliers, parts, and their costs, and also calculating two rankings for each supplier-part combination: a rank based on the supplier's cost amount (within the same region and part), and a rank based on the supplier's account balance (within the same region, part, and cost amount). The results are fetched from the \"dim_part_supplier_xrf\" table.",
    "phrase_similarity": 0.49354103207588196,
    "Mistral-7B-Instruct-v0.3-cte-name": "'CTE_PartSupplierRankByRegion'",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.29576751589775085,
    "Curated-score": 5,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"parts_suppliers\" for the CTE is somewhat descriptive as it indicates that the result set contains information about parts",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"parts_suppliers\" as a score of 6.\n\nThe name \"parts_suppliers\" is descriptive and accurately reflects the fact that the CTE is combining data from the \"dim_part_supplier_xrf\" table, which is a dimension table that contains information about parts and suppliers. However, the name does not provide a clear indication of what specific information the CTE is trying to convey or what the purpose of the CTE is.\n\nA more descriptive name might be something like \"supplier_part_info\" or \"part_supplier_data\", which would provide a clearer indication of what the CTE is trying to accomplish.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"parts_suppliers\" is quite generic and does not fully capture the specifics of the CTE, such as the calculations (rank and row number), the partitioning and ordering criteria, or the attributes being selected. A more descriptive name would include elements of these aspects, such as \"SupplierCostRankingByRegionAndPartKey\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"parts_suppliers\" as follows:\n\nScore: 6\n\nThe reason is that the name does not clearly reflect the purpose of the CTE, which appears to be ranking suppliers by their cost and then ordering them",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "wenima/codewars",
    "SQL": "select f.title, c.name, count(r.rental_id) as cnt,\ndense_rank() OVER (PARTITION BY c.name ORDER BY count(r.rental_id) DESC) as rnk\nfrom film_category fc\nJOIN category c ON fc.category_id = c.category_id\nJOIN film f ON fc.film_id = f.film_id\nJOIN inventory i ON f.film_id = i.film_id\nJOIN rental r ON i.inventory_id = r.inventory_id\nGROUP BY f.title, c.name",
    "cte_name": "film_categories",
    "file_name": "top_n_per_group_window.sql",
    "file_path": "https://github.com/wenima/codewars/blob/fc508af7ec2ad1b55eeba4e52b94b41f61cd75ae/kyu5/sql/src/top_n_per_group_window.sql",
    "file_size": 1008,
    "num_branches": 21,
    "num_commits": 482,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "contains all code katas completed on www.codewars.com kyu5 or higher",
    "repo_forks": 3,
    "repo_path": "https://github.com/wenima/codewars",
    "repo_releases": 0,
    "repo_size": 473,
    "repo_stars": 20,
    "schema": [
      "DVD Rental"
    ],
    "summary": "This SQL code is retrieving the title of each film, the name of the category it belongs to, the count of rentals for each film, and a ranking for each film within its category based on the number of rentals, grouped by film title and category name.",
    "phrase_similarity": 0.5880423188209534,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_MOST_RENTED_FILMS_BY_CATEGORY`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.4388829469680786,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "3",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"film_categories\" for the CTE is somewhat descriptive as it suggests that the result set contains information about films and their categories. However, it does not explicitly indicate that the count of rentals for each film-category combination is also included. A more comprehensive name could be \"film_category_rental_counts\" or \"film_rental_counts_by_category\", which would score higher on the scale, around 8 or 9. The current name scores around 6 or 7.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"film_categories\" as a score of 4.\n\nThe name \"film_categories\" is somewhat related to the CTE's purpose, as it mentions the two tables involved (film_category and category). However, it does not accurately reflect the result set, which is a ranking of films by their rental count per category. The name does not convey the idea of ranking or the aggregation of rental counts, which are key aspects of the CTE's purpose.",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 3\n\nExplanation: The proposed name \"film_categories\" is quite generic and does not reflect the specific purpose of the CTE, which involves counting rentals, grouping by film title and category name, and ranking these groups. A more descriptive name would include elements of the aggregation and ranking, such as \"RentalCountsByFilmAndCategoryRanked\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"film_categories\" as follows:\n\nScore: 6\n\nThe reason is that the name does not clearly reflect the purpose of the CTE, which is to group films by category and count rentals for each category.",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "aliang1994/INFO6210-DatabaseDesign",
    "SQL": "SELECT CategoryID, CategoryName,\r\n           (SELECT AVG(P.unitprice) FROM Products p WHERE p.CategoryID = C.CategoryID) AS CatAvgPrice\r\n    FROM categories C",
    "cte_name": "Cat",
    "file_name": "W6-11CTE Exercise 1 Solution.sql",
    "file_path": "https://github.com/aliang1994/INFO6210-DatabaseDesign/blob/07dc65c1a325e87ede4abc06d1716ba9d4663011/lecture/week06/W6-11CTE%20Exercise%201%20Solution.sql",
    "file_size": 1733,
    "num_branches": 1,
    "num_commits": 2,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Database Management and Design, Relational Database",
    "repo_forks": 4,
    "repo_path": "https://github.com/aliang1994/INFO6210-DatabaseDesign",
    "repo_releases": 0,
    "repo_size": 78664,
    "repo_stars": 5,
    "schema": [
      "Northwind"
    ],
    "summary": "This SQL code is retrieving the CategoryID, CategoryName, and the average price of products within each category from the 'categories' and 'products' tables.",
    "phrase_similarity": 0.026778291910886765,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_CategoryAvgPrice`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.35356423258781433,
    "Curated-score": 3,
    "gpt-4o-name-evaluation": "2",
    "gpt-4-turbo-name-evaluation": "2",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"Cat\" is not descriptive enough to reflect the purpose of the CTE. It would be more appropriate to use a name that clearly indicates the calculation of the average price of products within a category, such as \"CategoryAveragePrice\" or \"CatAvgPriceCTE\". I would give a score of 3 for this name.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"Cat\" as a score of 2. The name \"Cat\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not reflect the fact that the CTE is calculating the average unit price for each category, nor does it provide any hint about the columns or data being processed. A more descriptive name would be something like \"CategoryAveragePrices\" or \"CatAvgPrices\", which would score much higher.",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 2\n\nThe proposed name \"Cat\" is highly vague and does not accurately reflect the purpose of the CTE, which calculates the average price of products within each category. A more descriptive name would be \"CategoryAveragePrice\" or \"AvgPricePerCategory\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"Cat\" as a score of 2 out of 10.\n\nThe reason is that the name \"Cat\" does not clearly reflect the purpose of the CTE, which is to calculate the average price of products",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "ewerthonk/sql-challenges-beecrowd",
    "SQL": "SELECT\n\t\tamount,\n\t\tCOUNT(amount) AS frequency_count\n\tFROM value_table\n\tGROUP BY amount",
    "cte_name": "amount_frequency",
    "file_name": "solutions-sql-problems_beecrowd.sql",
    "file_path": "https://github.com/ewerthonk/sql-challenges-beecrowd/blob/19f815eb464ef6a47625ddcce9172c54100b18e2/solutions-sql-problems_beecrowd.sql",
    "file_size": 27229,
    "num_branches": 1,
    "num_commits": 15,
    "num_prs": 1,
    "repo_contributors": 2,
    "repo_description": "Solution of SQL problems from URI/Beecrowd. My 1st Database (SQL) Exercises. ",
    "repo_forks": 3,
    "repo_path": "https://github.com/ewerthonk/sql-challenges-beecrowd",
    "repo_releases": 0,
    "repo_size": 447,
    "repo_stars": 3,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is counting the number of occurrences (frequency) for each unique amount value in the 'value_table'.",
    "phrase_similarity": 0.5647453665733337,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_ValueFrequency`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.35083287954330444,
    "Curated-score": 10,
    "gpt-4o-name-evaluation": "9",
    "gpt-4-turbo-name-evaluation": "8",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"amount_frequency\" as a score of 9. The name accurately reflects the purpose of the CTE, which is to group the values in the \"amount\" column and count the frequency of each amount. The name is descriptive and clearly indicates what the CTE is trying to achieve.",
    "Phi-3.5-mini-instruct-name-evaluation": "8\n\nThe name \"amount_frequency\" is descriptive but could be more specific about what it represents. It indicates that there is a frequency count associated with amounts, which is accurate, but it doesn't explicitly state that it's a count of occurrences. A slightly more descriptive name could be \"amount_frequency_count\" to clarify that it's a count of how often each amount appears in the table. However, it's still a good name and warrants a high score.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"amount_frequency\" as follows:\n\nThe name is vague and does not clearly reflect the purpose of the CTE. It suggests that the CTE will be used to count the frequency of amounts, but it does not",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "8 \n"
  },
  {
    "Repo": "smnorris/bcfishpass",
    "SQL": "select\n    hk.segmented_stream_id\n  from bcfishpass.streams_habitat_known_vw hk\n  left outer join bcfishpass.streams s\n  on hk.segmented_stream_id = s.segmented_stream_id\n  where rearing_ch is true\n  and s.watershed_group_code = :'wsg'\n)\nINSERT INTO bcfishpass.habitat_linear_ch (\n  segmented_stream_id,\n  rearing",
    "cte_name": "observed_rearing",
    "file_name": "load_habitat_linear_ch.sql",
    "file_path": "https://github.com/smnorris/bcfishpass/blob/03d8a41e086b83c7bf7ecb32351ad88814dcf55b/model/02_habitat_linear/sql/load_habitat_linear_ch.sql",
    "file_size": 13495,
    "num_branches": 10,
    "num_commits": 1481,
    "num_prs": 140,
    "repo_contributors": 11,
    "repo_description": "Model and monitor aquatic habitat connectivity in BC. Tools to plan and prioritize the assessment and remediation of barriers.",
    "repo_forks": 13,
    "repo_path": "https://github.com/smnorris/bcfishpass",
    "repo_releases": 0,
    "repo_size": 32299,
    "repo_stars": 8,
    "schema": [
      "Chinook"
    ],
    "summary": "This SQL code is retrieving the `segmented_stream_id` of known habitat streams where `rearing_ch` is true and the watershed group code matches a provided value (`:wsg`), and then it inserts these `segmented_stream_id` values into the `habitat_linear_ch` table.",
    "phrase_similarity": 0.2317502200603485,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_StreamsWithRearingCh_Wsg`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.48430028557777405,
    "Curated-score": 4,
    "gpt-4o-name-evaluation": "6",
    "gpt-4-turbo-name-evaluation": "7",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"observed_rearing\" for the CTE is descriptive and relevant to the purpose of the CTE, which is to select the segmented stream IDs of streams where rearing_ch is true. However, it could be more specific to",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"observed_rearing\" as a score of 8.\n\nThe name \"observed_rearing\" is descriptive and accurately reflects the purpose of the CTE, which is to identify the segmented stream IDs where rearing is observed. The name clearly conveys the focus on rearing and the fact that it's based on observed data. However, it doesn't explicitly mention the join with the \"streams\" table or the filtering by watershed group code, which might make it slightly less comprehensive than a name that includes those details. Nevertheless, the name is still very informative and easy to understand, which is why I would give it a score of 8.",
    "Phi-3.5-mini-instruct-name-evaluation": "7\n\nThe name \"observed_rearing\" is somewhat descriptive, indicating that the CTE is related to rearing conditions observed in streams. However, it lacks specificity about the context (e.g., which streams, under what conditions, etc.). A more descriptive name could include the watershed group code or other relevant details. Therefore, it receives a score of 7, as it's better than generic placeholder names but still not fully descriptive of the CTE's purpose.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"observed_rearing\" as a score of 6 out of 10.\n\nThe reason for this score is that while the name clearly conveys the purpose of the CTE, it does not provide any specific",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "tableau/query-graphs",
    "SQL": "select\n\t\tl_suppkey as supplier_no,\n\t\tsum(l_extendedprice * (1 - l_discount)) as total_revenue\n\tfrom\n\t\tlineitem\n\twhere\n\t\tl_shipdate >= date '1996-01-01'\n\t\tand l_shipdate < date '1996-04-01'\n\tgroup by\n\t\tl_suppkey",
    "cte_name": "revenue",
    "file_name": "tpch-q15-analyze.sql",
    "file_path": "https://github.com/tableau/query-graphs/blob/1794f92179da21a3e5db45b3c41c92eac2408034/plan-dumper/queries/tpch/tpch-q15-analyze.sql",
    "file_size": 550,
    "num_branches": 4,
    "num_commits": 334,
    "num_prs": 96,
    "repo_contributors": 8,
    "repo_description": "A visualizer for queries - Hyper, Postgres, Tableau",
    "repo_forks": 27,
    "repo_path": "https://github.com/tableau/query-graphs",
    "repo_releases": 0,
    "repo_size": 15464,
    "repo_stars": 84,
    "schema": [
      "TPC-H"
    ],
    "summary": "This SQL code is calcululating the total revenue for each supplier between January 1, 1996 and March 31, 1996 from the 'lineitem' table, and grouping the results by supplier number.",
    "phrase_similarity": 0.4174789488315582,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Q1_1996_SupplierRevenue`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.5440214276313782,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"revenue\" for the CTE is somewhat descriptive as it indicates the calculation of a financial value. However, it does not specify the time period or the relationship with the supplier. A more comprehensive name could be \"Q1_1996_supplier_revenue\" or \"1996_Q1_supplier_sales\", which would score higher on the scale. So, I would give the name \"revenue\" a score of 5. It's not vague, but it could be more descriptive.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"revenue\" as a score of 6.\n\nThe name \"revenue\" is somewhat descriptive, as it refers to the total revenue generated by each supplier. However, it does not explicitly convey the fact that the CTE is grouping the data by supplier, or that the calculation is based on the lineitem table. A more descriptive name might include the supplier information, such as \"SupplierRevenue\" or \"TotalRevenueBySupplier\".",
    "Phi-3.5-mini-instruct-name-evaluation": "5\n\nThe name \"revenue\" is somewhat descriptive as it indicates the financial outcome of the query, but it lacks specificity regarding the time frame (1996-01-01 to 1996-03-31) and the calculation method (sum of extended price minus discount). A more descriptive name could include these details, such as \"Q1_1996_supplier_revenue_calculation\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"revenue\" as follows:\n\nScore: 6\n\nThe reason is that the name \"revenue\" is quite vague and doesn't clearly reflect the purpose of the CTE. The word \"revenue\"",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "4 \n"
  },
  {
    "Repo": "awslabs/amazon-redshift-utils",
    "SQL": "select\n\t\t\tl_suppkey as supplier_no,\n\t\t\tsum(l_extendedprice * (1-l_discount)) as total_revenue\n\t\tfrom\n\t\t\tlineitem\n\t\twhere\n\t\t\tl_shipdate >= date '1993-07-01'\n\t\t\tand l_shipdate < dateadd(month, 3, cast('1993-07-01' as date)) \n\t\tgroup by\n\t\t\tl_suppkey",
    "cte_name": "revenue",
    "file_name": "query_4.sql",
    "file_path": "https://github.com/awslabs/amazon-redshift-utils/blob/1b655986d3fee2aa3eb8d34241de76725942aed6/src/CloudDataWarehouseBenchmark/Cloud-DWB-Derived-from-TPCH/30TB/queries/query_4.sql",
    "file_size": 11762,
    "num_branches": 27,
    "num_commits": 1459,
    "num_prs": 474,
    "repo_contributors": 124,
    "repo_description": "Amazon Redshift Utils contains utilities, scripts and view which are useful in a Redshift environment",
    "repo_forks": 1243,
    "repo_path": "https://github.com/awslabs/amazon-redshift-utils",
    "repo_releases": 0,
    "repo_size": 65817,
    "repo_stars": 2748,
    "schema": [
      "TPC-H"
    ],
    "summary": "This SQL code is calcululating the total revenue for each supplier between July 1, 1993 and September 30, 1993 from the 'lineitem' table, and grouping the results by supplier number (l_suppkey).",
    "phrase_similarity": 0.4386676847934723,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Q3_1993_SupplierRevenue`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.5442032814025879,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"revenue\" for the CTE is somewhat descriptive as it indicates the calculation of a financial value. However, it does not specify the time period or the relationship to the supplier. A more comprehensive name could be \"Q3_1993_supplier_revenue\" or \"supplier_sales_for_Q3_1993\", which would score higher on the scale. So, I would give the",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"revenue\" as a score of 6.\n\nThe name \"revenue\" is somewhat descriptive, as it refers to the total amount of money earned by the suppliers. However, it does not fully convey the context of the query, which is to calculate the total revenue for each supplier within a specific time period. A more descriptive name might include details about the time period, such as \"supplier_revenue_1993_q2\" or \"quarterly_revenue_by_supplier\".",
    "Phi-3.5-mini-instruct-name-evaluation": "4\n\nThe name \"revenue\" is somewhat descriptive but lacks specificity regarding the context (supplier_no) and the time frame (1993-07-01 to 1993-09-01). A more descriptive name would include these details, such as \"SupplierRevenue_July1993toSeptember1993\". Therefore, it receives a score of 4, indicating it's somewhat descriptive but not fully comprehensive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"revenue\" as follows:\n\nScore: 6\n\nThe reason is that the name \"revenue\" is quite vague and doesn't clearly reflect the purpose of the CTE. The name suggests a general concept",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "4 \n"
  },
  {
    "Repo": "binbjz/tpcds_pg",
    "SQL": "select c_last_name\n               , c_first_name\n               , s_store_name\n               , ca_state\n               , s_state\n               , i_color\n               , i_current_price\n               , i_manager_id\n               , i_units\n               , i_size\n               , sum(ss_net_profit) netpaid\n          from store_sales\n             , store_returns\n             , store\n             , item\n             , customer\n             , customer_address\n          where ss_ticket_number = sr_ticket_number\n            and ss_item_sk = sr_item_sk\n            and ss_customer_sk = c_customer_sk\n            and ss_item_sk = i_item_sk\n            and ss_store_sk = s_store_sk\n            and c_current_addr_sk = ca_address_sk\n            and c_birth_country <> upper(ca_country)\n            and s_zip = ca_zip\n            and s_market_id = 10\n          group by c_last_name\n                 , c_first_name\n                 , s_store_name\n                 , ca_state\n                 , s_state\n                 , i_color\n                 , i_current_price\n                 , i_manager_id\n                 , i_units\n                 , i_size",
    "cte_name": "ssales",
    "file_name": "query_0.sql",
    "file_path": "https://github.com/binbjz/tpcds_pg/blob/3d9f524686744f4fef01b996214ef7e85c7735c7/tpcds_query/query_0.sql",
    "file_size": 198317,
    "num_branches": 1,
    "num_commits": 32,
    "num_prs": 1,
    "repo_contributors": 1,
    "repo_description": "TPC-DS for PostgreSQL",
    "repo_forks": 0,
    "repo_path": "https://github.com/binbjz/tpcds_pg",
    "repo_releases": 0,
    "repo_size": 29219,
    "repo_stars": 194,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is retrieving the last name, first name, store name, state, item color, current price, manager ID, units, size, and the sum of net profit for each item sold in store with market ID 10, while joining store_sales, store_returns, store, item, customer, and customer_address tables. It also filters customers whose birth country is different from the country of their current address, and groups the results by the specified columns.",
    "phrase_similarity": 0.08736742287874222,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_MultiJoinSalesData`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.2694631516933441,
    "Curated-score": 4,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "3",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"ssales\" is quite vague and does not clearly reflect the purpose of the CTE. It does not indicate that the result set includes customer, store, item, and address information, nor does it suggest that it includes net profit or other specific calculations. Therefore, I would give it a score of 2. A more descriptive name could be something like \"multi_join_store_sales_with_customer_address_and_net_profit\".",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"ssales\" as a score of 2. The name is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not reflect the columns included, the grouping, or the filtering conditions. A more descriptive name would be something like \"customer_sales_by_store\" or \"sales_data_by_customer\", which would provide a clear indication of what the CTE is intended to produce.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"ssales\" is very vague and does not provide any insight into what the CTE is specifically calculating or grouping by. It lacks detail about the columns involved, the conditions applied, or the purpose of the aggregation. A more descriptive name would include key elements such as the aggregation function (SUM), the specific columns being grouped by, and potentially the context of the data (e.g., net profit, customer demographics). Therefore, it receives a low score for comprehensiveness.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"ssales\" as follows:\n\nName: sales\nExpected score: 6\n\nReasoning:\nThe name \"sales\" is vague and does not clearly reflect the purpose of the CTE. It only mentions a",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "muratukel/Northwind-Traders-Capstone-Project",
    "SQL": "select \n\tc.category_name,\n\tcount(od.order_id) as order_count,\n\tround(sum(od.unit_price*od.quantity*od.discount)::numeric,2) as total_discount,\n\tround(avg(od.unit_price)::numeric,2) as avg_unit_price,\n\tround(sum(od.unit_price * od.quantity * (1 - od.discount))::numeric,2) as total_revenue,\n\tround(sum(o.freight)::numeric,2) as total_freight_price\nfrom categories as c\nleft join products as p \n\ton p.category_id=c.category_id\nleft join order_details as od\n\ton od.product_id=p.product_id\nleft join orders as o\n\ton o.order_id=od.order_id\ngroup by 1\norder by 5 desc",
    "cte_name": "category_price",
    "file_name": "sql_capstone_project.sql",
    "file_path": "https://github.com/muratukel/Northwind-Traders-Capstone-Project/blob/7dcdb0191bd4277d3011c555b54449458fdf762f/sql_capstone_project.sql",
    "file_size": 10526,
    "num_branches": 1,
    "num_commits": 65,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/muratukel/Northwind-Traders-Capstone-Project",
    "repo_releases": 0,
    "repo_size": 4531,
    "repo_stars": 3,
    "schema": [
      "Northwind"
    ],
    "summary": "This SQL code is aggregating the total count of orders, total discount, average unit price, total revenue, total freight price for each category, by joining tables for categories, products, order details, and orders, and then grouping the results by category name, while also sorting the results in descending order by total revenue.",
    "phrase_similarity": 0.3132113814353943,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_SalesByCategory_TotalRevenue`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.36090704798698425,
    "Curated-score": 5,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"category_price\" for the SQL statement is somewhat descriptive, but it does not fully capture",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"category_price\" as a score of 4.\n\nThe name \"category_price\" is somewhat related to the CTE's purpose, as it mentions \"price\", which is one of the columns being calculated. However, it does not accurately reflect the entire purpose of the CTE, which is to provide various metrics for each category, including order count, total discount, average unit price, total revenue, and total freight price. The name does not convey the scope of the CTE's calculations or the multiple metrics being produced.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"category_price\" is somewhat indicative of the CTE's purpose, which involves categories and prices. However, it lacks specificity regarding the calculations or aggregations performed (e.g., order count, total discount, average unit price, total revenue, total freight price). A more descriptive name would include these aspects, such as \"CategoryOrderMetrics\" or \"CategoryFinancialSummary\". Therefore, it receives a score of 3 for being somewhat related but not highly descriptive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the name \"category_price\" as a score of 6 out of 10.\n\nThe reason is that while the name clearly indicates what column in the table is being used (category_name), it does not provide any information about the",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "SQL": "SELECT f.title,\n                         c.name AS category,\n                         f.rental_duration\n                  FROM film f\n                  JOIN film_category fc\n                  ON f.film_id = fc.film_id\n                  JOIN category c\n                  ON fc.category_id = c.category_id AND c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')",
    "cte_name": "family_movies",
    "file_name": "245-divide-family-movies-into-4-levels-based-on-rental-duration.sql",
    "file_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree/blob/82d89424fbc6b86d9b0e57becef4950988d80d9d/2.%20Introduction%20to%20SQL/Project%20-%20Investigate%20a%20Relational%20Database/245-divide-family-movies-into-4-levels-based-on-rental-duration.sql",
    "file_size": 4782,
    "num_branches": 1,
    "num_commits": 415,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Certified Nanodegree",
    "repo_forks": 6,
    "repo_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "repo_releases": 0,
    "repo_size": 37861,
    "repo_stars": 4,
    "schema": [
      "DVD Rental"
    ],
    "summary": "This SQL code is retrieving the film title, category, and rental duration for films that belong to the specified categories (Animation, Children, Classics, Comedy, Family, Music) by joining the 'film', 'film_category', and 'category' tables based on their respective IDs.",
    "phrase_similarity": 0.4161180853843689,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_PopularCategories`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.20344218611717224,
    "Curated-score": 8,
    "gpt-4o-name-evaluation": "5",
    "gpt-4-turbo-name-evaluation": "3",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"family_movies\" for the SQL statement is quite descriptive and accurately reflects the CTE's purpose. It clearly indicates that the result set contains information about films categorized as Family movies. I would give it a score of 9 out of 10. The only reason it's not a perfect 10 is because it doesn't explicitly mention the joined tables (film, film_category, and category), but that information is implicit in the context of",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"family_movies\" as a score of 8.\n\nThe name \"family_movies\" accurately reflects the purpose of the CTE, which is to select films that belong to specific categories such as 'Animation', 'Children', 'Classics', 'Comedy', 'Family', and 'Music'. The name clearly indicates that the CTE is focused on films that are suitable for families, which is a specific and relevant aspect of the data. However, the name does not explicitly state that it is a CTE, which might make it slightly less descriptive than a name that includes the term \"CTE\" or \"temporary result set\". Nevertheless, the name is still highly descriptive and accurate, which is why I would give it a score of 8.",
    "Phi-3.5-mini-instruct-name-evaluation": "7\n\nThe name \"family_movies\" somewhat reflects the purpose of the CTE, which filters films by categories that are likely to be family-friendly (Animation, Children, Family, Music). However, it is not fully descriptive as it does not mention the rental duration or the fact that it involves a join with the film_category table. A more descriptive name could include these elements, such as \"FamilyMoviesRentalDuration\", to better reflect the result set of the CTE. Therefore, a score of 7 is given, indicating that the name is somewhat descriptive but could be improved.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"family_movies\" as follows:\n\nName: family_movies\nExpected score: 6\n\nThe reason for this low score is that the name does not clearly reflect the purpose of the CTE, which appears to be",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "4 \n"
  },
  {
    "Repo": "vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "SQL": "SELECT r.rental_id,\n         f.title,\n         r.rental_date,\n         CASE WHEN EXTRACT(DOW FROM r.rental_date) = 0 THEN 'sunday'\n              WHEN EXTRACT(DOW FROM r.rental_date) = 1 THEN 'monday'\n              WHEN EXTRACT(DOW FROM r.rental_date) = 2 THEN 'tuesday'\n              WHEN EXTRACT(DOW FROM r.rental_date) = 3 THEN 'wednesday'\n              WHEN EXTRACT(DOW FROM r.rental_date) = 4 THEN 'thursday'\n              WHEN EXTRACT(DOW FROM r.rental_date) = 5 THEN 'friday'\n              WHEN EXTRACT(DOW FROM r.rental_date) = 6 THEN 'saturday'\n              ELSE 'undefined' /* TO identify NULLs and anomaly*/\n              END AS dow\n  FROM rental r\n  JOIN inventory i\n  ON r.inventory_id = i.inventory_id\n  JOIN film f\n  ON i.film_id = f.film_id",
    "cte_name": "rental_day",
    "file_name": "258-rentals-based-on-day-of-the-week.sql",
    "file_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree/blob/82d89424fbc6b86d9b0e57becef4950988d80d9d/2.%20Introduction%20to%20SQL/Project%20-%20Investigate%20a%20Relational%20Database/258-rentals-based-on-day-of-the-week.sql",
    "file_size": 1259,
    "num_branches": 1,
    "num_commits": 415,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Certified Nanodegree",
    "repo_forks": 6,
    "repo_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "repo_releases": 0,
    "repo_size": 37861,
    "repo_stars": 4,
    "schema": [
      "DVD Rental"
    ],
    "summary": "This SQL code is retrieving the rental ID, film title, rental date, and the day of the week (dow) of each rental, joining data from the rental, inventory, and film tables, and assigning a string value for each day of the week. If the EXTRACT function returns a value outside the range of 0-6, it will label the day as 'undefined'.",
    "phrase_similarity": 0.5031033754348755,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_RentalDaysOfWeek`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.4434724450111389,
    "Curated-score": 8,
    "gpt-4o-name-evaluation": "7",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"rental_day\" for the CTE is quite descriptive and accurately reflects the purpose of the CTE, which is to return the rental date along with the day of the week for each rental. However, it could be more specific to include the fact that it also calculates the day of the week, so a score of 8 seems appropriate.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would give the name \"rental_day\" a score of 8 out of 10. The name is descriptive and accurately reflects the purpose of the CTE, which is to extract the day of the week from the rental date. The name is concise and easy to understand, making it a good choice for a CTE name. The only reason I wouldn't give it a perfect score is that it's not extremely specific, as it doesn't mention the fact that it's extracting the day of the week from the rental date. However, it's still a clear and accurate name that effectively conveys the purpose of the CTE.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"rental_day\" is somewhat indicative of the CTE's purpose, which involves determining the day of the week for rental dates. However, it lacks specificity regarding the transformation or categorization of the days, such as mapping them to their respective names (e.g., 'sunday', 'monday'). A more descriptive name would include this aspect, such as \"rental_day_names\" or \"rental_dates_with_day_names\". Therefore, it receives a score of 3 for being somewhat related but not fully descriptive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the name \"rental_day\" as a score of 2 out of 10.\n\nThe reason is that this name does not clearly reflect the purpose of the CTE, which appears to be grouping rentals by day. The name",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "EnterpriseDB/hdfs_fdw",
    "SQL": "SELECT * FROM dept",
    "cte_name": "with_qry",
    "file_name": "external.sql",
    "file_path": "https://github.com/EnterpriseDB/hdfs_fdw/blob/a9798569ccc31f96a601315b8350a67b4826fab7/sql/external.sql",
    "file_size": 5608,
    "num_branches": 4,
    "num_commits": 261,
    "num_prs": 28,
    "repo_contributors": 10,
    "repo_description": "PostgreSQL foreign data wrapper for HDFS",
    "repo_forks": 37,
    "repo_path": "https://github.com/EnterpriseDB/hdfs_fdw",
    "repo_releases": 14,
    "repo_size": 7173,
    "repo_stars": 134,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is retrieving all columns and rows from the 'dept' table.",
    "phrase_similarity": 0.1376211792230606,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_DEPT_SELECT_ALL`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.5126259922981262,
    "Curated-score": 1,
    "gpt-4o-name-evaluation": "2",
    "gpt-4-turbo-name-evaluation": "2",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "3. The proposed name \"with_qry\" is not descriptive of the result set being produced. A more descriptive name like \"department_data\" or \"departments\" would be more appropriate, reflecting the purpose of the SQL statement. So, the score would be 3.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"with_qry\" as a score of 2. The name is a placeholder name that does not provide any information about the purpose or content of the CTE. It simply describes the fact that it is a CTE, but does not give any hint about what it is querying or what it is used for.",
    "Phi-3.5-mini-instruct-name-evaluation": "2\n\nThe name \"with_qry\" is very vague and does not provide any information about what the CTE is intended to represent or what kind of data it contains. It lacks specificity and does not reflect the purpose of the CTE, which is simply to select all columns from the \"dept\" table. A more descriptive name would be \"department_details\" or \"all_department_data\" to indicate that it contains all the data from the \"dept\" table.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"with_qry\" as follows:\n\nName: with_qry\nExpected score: 2\n\nThe reason for this low score is that the name does not clearly indicate what type of query or operation is being performed",
    "qwen2.5-coder-3b-instruct-name-evaluation": "3",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "awslabs/amazon-redshift-utils",
    "SQL": "select\n\t\t\tl_suppkey as supplier_no,\n\t\t\tsum(l_extendedprice * (1-l_discount)) as total_revenue\n\t\tfrom\n\t\t\tlineitem\n\t\twhere\n\t\t\tl_shipdate >= date '1996-06-01'\n\t\t\tand l_shipdate < dateadd(month, 3, cast('1996-06-01' as date)) \n\t\tgroup by\n\t\t\tl_suppkey",
    "cte_name": "revenue",
    "file_name": "query_7.sql",
    "file_path": "https://github.com/awslabs/amazon-redshift-utils/blob/1b655986d3fee2aa3eb8d34241de76725942aed6/src/CloudDataWarehouseBenchmark/Cloud-DWB-Derived-from-TPCH/30TB/queries/query_7.sql",
    "file_size": 11765,
    "num_branches": 27,
    "num_commits": 1459,
    "num_prs": 474,
    "repo_contributors": 124,
    "repo_description": "Amazon Redshift Utils contains utilities, scripts and view which are useful in a Redshift environment",
    "repo_forks": 1243,
    "repo_path": "https://github.com/awslabs/amazon-redshift-utils",
    "repo_releases": 0,
    "repo_size": 65817,
    "repo_stars": 2748,
    "schema": [
      "TPC-H"
    ],
    "summary": "This SQL code is calculating the total revenue for each supplier between June 1, 1996, and August 31, 1996, from the 'lineitem' table, and it groups the results by supplier number (l_suppkey).",
    "phrase_similarity": 0.4530509412288666,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Q2_1996_SupplierRevenue`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.5015795230865479,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"revenue\" for the CTE is somewhat descriptive as it indicates the calculation of financial values. However, it does not specify the time period or the relationship with the supplier. A more comprehensive name could be \"Q2_1996_supplier_revenue\" or \"supplier_revenue_for_Q2_1996\" to better reflect the purpose of the CTE. Score: 5.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"revenue\" as a score of 6.\n\nThe name \"revenue\" is somewhat descriptive, as it refers to the total revenue generated by each supplier. However, it does not fully convey the context of the query, which is to calculate the total revenue for each supplier within a specific time period. A more descriptive name might include additional information, such as \"supplier_revenue_1996_q2\" to indicate the time period and the supplier.",
    "Phi-3.5-mini-instruct-name-evaluation": "4\n\nThe name \"revenue\" is somewhat descriptive but lacks specificity regarding the context (supplier_no) and the time frame (1996-06-01 to 1996-08-01). A more descriptive name would include these details, such as \"supplier_revenue_June1996_to_July1996\". Therefore, it receives a score of 4, indicating it's somewhat descriptive but not fully comprehensive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"revenue\" as a score of 6 out of 10.\n\nThe reason is that while the name \"revenue\" accurately reflects the purpose of the CTE, it's not very descriptive. The term",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "4 \n"
  },
  {
    "Repo": "vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "SQL": "SELECT r.rental_id,\n         f.title,\n         c.name AS category,\n         r.rental_date,\n         CASE WHEN EXTRACT(DOW FROM r.rental_date) = 0 THEN 'sunday'\n              WHEN EXTRACT(DOW FROM r.rental_date) = 1 THEN 'monday'\n              WHEN EXTRACT(DOW FROM r.rental_date) = 2 THEN 'tuesday'\n              WHEN EXTRACT(DOW FROM r.rental_date) = 3 THEN 'wednesday'\n              WHEN EXTRACT(DOW FROM r.rental_date) = 4 THEN 'thursday'\n              WHEN EXTRACT(DOW FROM r.rental_date) = 5 THEN 'friday'\n              WHEN EXTRACT(DOW FROM r.rental_date) = 6 THEN 'saturday'\n              ELSE 'undefined' /* TO identify NULLs and anomaly*/\n              END AS dow\n  FROM rental r\n  JOIN inventory i\n  ON r.inventory_id = i.inventory_id\n  JOIN film f\n  ON i.film_id = f.film_id\n  JOIN film_category fc\n  ON f.film_id = fc.film_id\n  JOIN category c\n  ON fc.category_id = c.category_id AND c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')",
    "cte_name": "rental_day",
    "file_name": "259-rentals-of-family-films-based-on-day-of-the-week.sql",
    "file_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree/blob/82d89424fbc6b86d9b0e57becef4950988d80d9d/2.%20Introduction%20to%20SQL/Project%20-%20Investigate%20a%20Relational%20Database/259-rentals-of-family-films-based-on-day-of-the-week.sql",
    "file_size": 1608,
    "num_branches": 1,
    "num_commits": 415,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Certified Nanodegree",
    "repo_forks": 6,
    "repo_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "repo_releases": 0,
    "repo_size": 37861,
    "repo_stars": 4,
    "schema": [
      "DVD Rental"
    ],
    "summary": "This SQL code is retrieving the rental ID, film title, category, rental date, and day of the week (dow) for rentals of films categorized as Animation, Children, Classics, Comedy, Family, or Music. It also includes a case statement to identify the day of the week and handle any potential NULL or anomalous values.",
    "phrase_similarity": 0.5253030061721802,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_RentalDaysByCategory`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.5480027198791504,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "6",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"rental_day\" for the CTE is somewhat descriptive as it suggests that the result set contains rental information along with the day of the rental. However, it does not explicitly indicate the join conditions or the filtering of categories. Therefore, I would give it a score of 5. A more descriptive",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"rental_day\" as a score of 6.\n\nThe name \"rental_day\" is somewhat descriptive, as it references the rental_date column and the day of the week. However, it does not fully convey the purpose of the CTE, which appears to be filtering films by category and extracting the day of the week from the rental date. The name does not mention the film or category filters, which are important aspects of the query. Therefore, while the name is somewhat descriptive, it could be more comprehensive and accurate.",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 3\n\nThe proposed name \"rental_day\" is quite vague and does not fully describe the purpose of the CTE. It does not indicate that the CTE is grouping by the day of the week or that it is categorizing rental dates. A more descriptive name could include the day of the week or the specific operation being performed, such as \"rental_day_of_week\" or \"rental_dates_categorized_by_day\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the name \"rental_day\" as a score of 2 out of 10.\n\nThe reason is that this name does not clearly reflect the purpose of the CTE, which appears to be grouping rentals by day. The name",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "manaswikamila05/RSVP-Movies",
    "SQL": "SELECT movie_id\n         FROM   genre\n         GROUP  BY movie_id\n         HAVING Count(DISTINCT genre) = 1",
    "cte_name": "movies_with_one_genre",
    "file_name": "IMDB+question.sql",
    "file_path": "https://github.com/manaswikamila05/RSVP-Movies/blob/40c82f8a2106f258158a8e8d4de7c27fa973cde7/IMDB%2Bquestion.sql",
    "file_size": 40641,
    "num_branches": 1,
    "num_commits": 8,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "SQL queries performed on IMDb database to provide recommendations to RSVP Movies based on insights.",
    "repo_forks": 9,
    "repo_path": "https://github.com/manaswikamila05/RSVP-Movies",
    "repo_releases": 0,
    "repo_size": 3771,
    "repo_stars": 7,
    "schema": [
      "IMDB"
    ],
    "summary": "This SQL code is retrieving unique movie_id's that belong to movies which are assigned to exactly one genre.",
    "phrase_similarity": 0.5603723526000977,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_SingleGenreMovies`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.21103741228580475,
    "Curated-score": 10,
    "gpt-4o-name-evaluation": "9",
    "gpt-4-turbo-name-evaluation": "10",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"movies_with_one_genre\" for the SQL statement is quite descriptive and accurately reflects the CTE's purpose. It clearly indicates that the result set contains movie_ids that belong to movies with only one genre. Therefore, I would give it a score of 9.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"movies_with_one_genre\" as a score of 9. The name accurately reflects the purpose of the CTE, which is to identify movies that have only one genre. The name is descriptive, concise, and clearly conveys the intent of the query.",
    "Phi-3.5-mini-instruct-name-evaluation": "9\n\nThe name \"movies_with_one_genre\" is quite descriptive, indicating that the CTE will contain movies that are associated with only one genre. It conveys the purpose of the CTE well, although it could be slightly more explicit about the aggregation (e.g., \"movies_with_exactly_one_genre\"). However, it is still a strong candidate for a high score.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"movies_with_one_genre\" as follows:\n\nName: movies_with_one_genre\nExpected score: 2\n\nThe reason for this low score is that the name does not clearly reflect the purpose of the CTE.",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "9 \n"
  },
  {
    "Repo": "TonyTroeff/Training-IT-Career",
    "SQL": "select distinct manager_id\n\tfrom employees\n\twhere manager_id is not null",
    "cte_name": "manager_ids",
    "file_name": "07.2. Correlated Subqueries.sql",
    "file_path": "https://github.com/TonyTroeff/Training-IT-Career/blob/e1fba043189dc38ccf2b7840b9375fc686dddc06/Databases/07.2.%20Correlated%20Subqueries.sql",
    "file_size": 2519,
    "num_branches": 1,
    "num_commits": 89,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Repository containing the solution of all exercises from the National program \"Training for IT Career\" ",
    "repo_forks": 0,
    "repo_path": "https://github.com/TonyTroeff/Training-IT-Career",
    "repo_releases": 0,
    "repo_size": 1221,
    "repo_stars": 7,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is retrieving unique manager IDs from the 'employees' table where the manager ID is not null, implying it's selecting IDs of managers who have at least one employee reporting to them.",
    "phrase_similarity": 0.6053955554962158,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_UniqueManagers`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.46463412046432495,
    "Curated-score": 10,
    "gpt-4o-name-evaluation": "8",
    "gpt-4-turbo-name-evaluation": "8",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"manager_ids\" for the CTE is somewhat descriptive as it indicates that the result set contains unique manager IDs. However, it does not clearly convey the purpose of the CTE, which is to select distinct manager IDs from the employees table where manager_id is not null. A more descriptive name could be \"distinct_non_null_manager_ids\" or \"non_null_manager_ids\". I would give the proposed name a score of 5, as it is somewhat descriptive but could be more clear.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"manager_ids\" as a score of 8.\n\nThe name \"manager_ids\" is descriptive and accurately reflects the purpose of the CTE, which is to retrieve distinct manager IDs from the employees table where the manager ID is not null. The name is concise and clearly conveys the intent of the query, making it easy to understand and maintain. However, it could be slightly more descriptive by including the fact that it's a list of distinct IDs, but overall, it's a good name.",
    "Phi-3.5-mini-instruct-name-evaluation": "8\n\nThe name \"manager_ids\" is fairly descriptive, indicating that the CTE is selecting distinct manager IDs from a table. However, it could be more informative by specifying that these IDs are from a particular table or that they are distinct. Therefore, it's not a perfect score but still quite comprehensive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"manager_ids\" as follows:\n\nScore: 2\n\nThe reason is that the name does not clearly reflect the purpose of the CTE, which is to retrieve distinct manager IDs. The name suggests a different table",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "8 \n"
  },
  {
    "Repo": "marinfotache/Baze-de-date-I",
    "SQL": "SELECT album.albumid, title as album_title, artist.name as artist_name,\n\t\tROW_NUMBER() OVER (PARTITION BY title ORDER BY trackid) AS track_no,\n\t\ttrack.name AS track_name\n\tFROM artist\n\t\tNATURAL JOIN album\n\t\tINNER JOIN track ON album.albumid = track.albumid\n\tORDER BY 2, 4",
    "cte_name": "track_numbering",
    "file_name": "chinook_12_sql_recursivitate.sql",
    "file_path": "https://github.com/marinfotache/Baze-de-date-I/blob/fca74dcdb2f0cc1598391f26a76320d74f26ec1c/chinook%20-%20studiu%20de%20caz%20(SQL%20&%20tidyverse)/chinook_12_sql_recursivitate.sql",
    "file_size": 12889,
    "num_branches": 1,
    "num_commits": 361,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Resurse necesare cursului Baze de date I (Univ. Al.I.Cuza Iasi, FEAA, specializarile Informatica Economica, Statistica si CIG)",
    "repo_forks": 17,
    "repo_path": "https://github.com/marinfotache/Baze-de-date-I",
    "repo_releases": 0,
    "repo_size": 82254,
    "repo_stars": 15,
    "schema": [
      "Chinook"
    ],
    "summary": "This SQL code is selecting the album ID, album title, artist name, track number (within the same album title, ordered by track ID), and track name from the 'artist', 'album', and 'track' tables, and it is ordering the results by album title and track number within the same album title.",
    "phrase_similarity": 0.388811320066452,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_AlbumTracks_ByTitle_TrackID`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.4037542939186096,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "5",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"track_numbering\" for the CTE is quite descriptive and accurately reflects the purpose of the SQL statement, which is to assign a row number to each track within each album. I would give it a score of 9 out of 10. The only reason it's not a perfect 10 is because it doesn't explicitly mention the albums, but the use of the word \"track\" implies that it's related to a collection of songs (an album).",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"track_numbering\" as a score of 8.\n\nThe name \"track_numbering\" accurately reflects the purpose of the CTE, which is to assign a track number to each track within an album. The name is descriptive and clearly indicates what the CTE is doing, making it easy for others to understand the purpose of the query. However, it's not a perfect score because it doesn't explicitly mention the album or artist, which are also important components of the query.",
    "Phi-3.5-mini-instruct-name-evaluation": "4\n\nThe name \"track_numbering\" somewhat reflects the purpose of the CTE, which is to assign a row number to each track within the same album based on the track ID. However, it lacks specificity regarding the ordering (by track ID) and the partitioning by album title. A more descriptive name could be \"album_track_numbering_by_id\" or \"album_track_ordering_by_trackid,\" which would provide a clearer understanding of the CTE's functionality. Therefore, a score of 4 is given, indicating that the name is somewhat descriptive but not fully comprehensive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"track_numbering\" as follows:\n\nScore: 6\n\nThe reason is that this name does not clearly reflect the purpose of the CTE, which is to assign a unique number to each track within an album",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "5 \n"
  },
  {
    "Repo": "folio-org/mod-inventory-storage",
    "SQL": "SELECT inst.id AS instanceId,\n                                    (strToTimestamp(inst.jsonb -> 'metadata' ->> 'updatedDate')) AS maxDate\n                             FROM ${myuniversity}_${mymodule}.instance inst\n                             WHERE ($6 IS NULL OR inst.jsonb ->> 'source' = $6)\n                             AND (strToTimestamp(inst.jsonb -> 'metadata' ->> 'updatedDate')) BETWEEN dateOrMin($1) AND dateOrMax($2)\n\n                             UNION ALL\n                             SELECT instanceid, MAX(maxdate) as maxdate\n                               FROM (\n                                     SELECT instanceid,(strToTimestamp(hr.jsonb -> 'metadata' ->> 'updatedDate')) as maxdate\n                                       FROM ${myuniversity}_${mymodule}.holdings_record hr\n                                      WHERE ((strToTimestamp(hr.jsonb -> 'metadata' ->> 'updatedDate')) BETWEEN dateOrMin($1) AND dateOrMax($2)\n                                        AND NOT EXISTS (SELECT NULL WHERE $5))\n                                     UNION\n                                     SELECT instanceid, (strToTimestamp(item.jsonb -> 'metadata' ->> 'updatedDate')) AS maxDate\n                                       FROM ${myuniversity}_${mymodule}.holdings_record hr\n                                              INNER JOIN ${myuniversity}_${mymodule}.item item ON item.holdingsrecordid = hr.id\n                                      WHERE (strToTimestamp(item.jsonb -> 'metadata' ->> 'updatedDate')) BETWEEN dateOrMin($1) AND dateOrMax($2)\n                                        AND NOT EXISTS (SELECT NULL WHERE $5)\n                                    ) AS related_hr_items\n                                    GROUP BY instanceid\n                             UNION ALL\n                             SELECT (audit_holdings_record.jsonb #>> '{record,instanceId}')::uuid,\n                                    greatest((strToTimestamp(audit_item.jsonb -> 'record' ->> 'updatedDate')),\n                                             (strToTimestamp(audit_holdings_record.jsonb -> 'record' ->> 'updatedDate'))) AS maxDate\n                             FROM ${myuniversity}_${mymodule}.audit_holdings_record audit_holdings_record\n                                      JOIN ${myuniversity}_${mymodule}.audit_item audit_item\n                                           ON (audit_item.jsonb ->> '{record,holdingsRecordId}')::uuid =\n                                              audit_holdings_record.id\n                             WHERE ((strToTimestamp(audit_holdings_record.jsonb -> 'record' ->> 'updatedDate')) BETWEEN dateOrMin($1) AND dateOrMax($2) OR\n                                    (strToTimestamp(audit_item.jsonb #>> '{record,updatedDate}')) BETWEEN dateOrMin($1) AND dateOrMax($2))\n                                    AND NOT EXISTS (SELECT NULL WHERE $5)",
    "cte_name": "instanceIdsInRange",
    "file_name": "updateRecordsViewFunctionToSupportSource.sql",
    "file_path": "https://github.com/folio-org/mod-inventory-storage/blob/61c31851475a0106ab724e5d395d4a2cbe877213/src/main/resources/templates/db_scripts/inventory-hierarchy/updateRecordsViewFunctionToSupportSource.sql",
    "file_size": 5296,
    "num_branches": 28,
    "num_commits": 3987,
    "num_prs": 1082,
    "repo_contributors": 89,
    "repo_description": null,
    "repo_forks": 20,
    "repo_path": "https://github.com/folio-org/mod-inventory-storage",
    "repo_releases": 122,
    "repo_size": 7782,
    "repo_stars": 9,
    "schema": [
      "HR"
    ],
    "summary": "This SQL code is retrieving the instance ID and the latest update date from instances, holdings_records, and related items, as well as audit records, where the update date falls between the provided date range, and where a specific condition ($5) is not met. It also finds the maximum update date across related items and audit records for each instance. The results are combined using UNION ALL.",
    "phrase_similarity": 0.24600663781166077,
    "Mistral-7B-Instruct-v0.3-cte-name": "'CTE_MultiSourceInstanceUpdates'",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.3261936902999878,
    "Curated-score": 4,
    "gpt-4o-name-evaluation": "5",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"instanceIdsInRange\" for the CTE is quite descriptive and accurately reflects the purpose of the CTE, which is to select instance IDs within a specified date range. I would give it a score",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"instanceIdsInRange\" as a score of 6.\n\nThe name is somewhat descriptive, as it mentions \"instanceIds\" which is a column in the result set, and \"InRange\" which suggests that the query is filtering instances based on a date range. However, the name does not fully convey the complexity of the query, which involves multiple unions and joins to retrieve the maximum updated date for each instance. A more descriptive name might include details about the date range filtering, the multiple sources of data, or the aggregation of the maximum updated date.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"instanceIdsInRange\" is somewhat generic and does not fully convey the complexity or the specific operations being performed in the CTE. It indicates that there are instance IDs and a range involved but does not mention the aggregation, the conversion of dates, the UNION ALL operations, or the exclusion criteria based on the NOT EXISTS subquery. A more descriptive name would include these elements to better reflect the CTE's purpose.",
    "llama-3.2-1b-instruct-name-evaluation": "I'll evaluate the proposed name \"instanceIdsInRange\" based on my understanding of database query names and their comprehensiveness.\n\nThe proposed name suggests that it's searching for instances (i.e., records) within a certain date range. However,",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "aliang1994/INFO6210-DatabaseDesign",
    "SQL": "SELECT SalesOrderID, COUNT(ProductID) [Line Item Count]\r\n\t FROM Sales.SalesOrderDetail\r\n\t GROUP BY SalesOrderid\r\n\t HAVING COUNT(ProductID) > 4",
    "cte_name": "OrdDet",
    "file_name": "W6-10SQL CTE.sql",
    "file_path": "https://github.com/aliang1994/INFO6210-DatabaseDesign/blob/07dc65c1a325e87ede4abc06d1716ba9d4663011/lecture/week06/W6-10SQL%20CTE.sql",
    "file_size": 1570,
    "num_branches": 1,
    "num_commits": 2,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Database Management and Design, Relational Database",
    "repo_forks": 4,
    "repo_path": "https://github.com/aliang1994/INFO6210-DatabaseDesign",
    "repo_releases": 0,
    "repo_size": 78664,
    "repo_stars": 5,
    "schema": [
      "AdventureWorks"
    ],
    "summary": "This SQL code is grouping sales order details by SalesOrderID and returning the SalesOrderID along with the count of unique ProductIDs for each group, only for those groups where the count of ProductIDs is more than 4.",
    "phrase_similarity": 0.04511914402246475,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_MultiLineItemOrders`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.09274327754974365,
    "Curated-score": 4,
    "gpt-4o-name-evaluation": "2",
    "gpt-4-turbo-name-evaluation": "2",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"OrdDet\" is not very descriptive. It does not clearly indicate the purpose of the CTE, which is to group sales order details by sales order ID and count the number of line items (products) per order, filtering out orders with less than 5 line items. A more descriptive name could be \"SalesOrderLineItemCounts\" or \"SalesOrderDetailGroupedByOrderIDWithLineItemCountGreaterThanFour\", which would score higher on the comprehensiveness scale. I would give \"OrdDet\" a score of 3.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"OrdDet\" as a score of 2. The name \"OrdDet\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not reflect the fact that the CTE is counting line items in sales orders, nor does it indicate that the result set is related to sales orders or product details. A more descriptive name would be something like \"SalesOrderLineItems\" or \"OrderItemCounts\", which would score much higher.",
    "Phi-3.5-mini-instruct-name-evaluation": "2\n\nThe proposed name \"OrdDet\" is very vague and does not provide any information about what the CTE is calculating or its purpose. A more descriptive name could be \"SalesOrderDetailLineItemCounts\" or \"OrderLineItemCountsWithFilter\", which would clearly indicate that it counts the number of line items per sales order and applies a filter for orders with more than 4 line items.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"OrdDet\" as follows:\n\nName: OrdDet\nExpected score: 2\n\nThe reason for this low score is that the name does not clearly reflect the purpose of the CTE. The word \"Ord",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "gonsalomon/soda",
    "SQL": "select\n        fpc.category_key,\n        sum(fis.order_quantity) as category_sales_count,\n        sum(fis.sales_amount) as category_sales_total\n    from {{ source('adventureworks', 'fact_internet_sales') }} fis\n        left join {{ ref('fact_product_category') }} fpc on fis.product_key = fpc.product_key\n    group by fpc.category_key\n    order by fpc.category_key",
    "cte_name": "category_sales",
    "file_name": "report_category_sales.sql",
    "file_path": "https://github.com/gonsalomon/soda/blob/f62687727255628a66dcf730cb46efde90ee9cf5/dbt/partner_cert/models/report/report_category_sales.sql",
    "file_size": 807,
    "num_branches": 2,
    "num_commits": 28,
    "num_prs": 2,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/gonsalomon/soda",
    "repo_releases": 0,
    "repo_size": 136656,
    "repo_stars": 3,
    "schema": [
      "AdventureWorks"
    ],
    "summary": "This SQL code is summing the sales quantity and total sales amount for each product category from the AdventureWorks fact_internet_sales table, joining it with the fact_product_category table, and then grouping and ordering the results by category key.",
    "phrase_similarity": 0.5477450489997864,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_SalesByCategory`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.3668961524963379,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "8",
    "gpt-4-turbo-name-evaluation": "7",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"category_sales\" for the CTE is somewhat descriptive as it suggests that the result set contains sales-related data grouped by categories. However, it does not clearly indicate whether the data includes the count or total of sales, or both. A more comprehensive name could be \"category_sales_count_and_total\" to reflect that the CTE includes both the count and total of sales for each category. Score: 6.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"category_sales\" as a score of 8.\n\nThe name \"category_sales\" is descriptive and accurately reflects the purpose of the CTE, which is to group sales data by category key and calculate the total sales amount and sales count for each category. The name is concise and easy to understand, making it a clear and effective choice. However, it could be slightly more specific, such as \"category_sales_summary\" or \"category_sales_data\", which would bring the score up to a 9 or 10. Nevertheless, the name \"category_sales\" is still a good choice and provides a clear understanding of what the CTE is intended to do.",
    "Phi-3.5-mini-instruct-name-evaluation": "5\n\nThe proposed name \"category_sales\" is somewhat descriptive, indicating that it involves sales data categorized by some key. However, it lacks specificity regarding the nature of the data (count or total), and it doesn't mention the aggregation functions used (SUM). A more descriptive name could include these details, such as \"category_sales_count\" or \"category_sales_total,\" which would provide a clearer understanding of the CTE's purpose. Therefore, a score of 5 is given, indicating that the name is somewhat descriptive but not fully comprehensive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"category_sales\" as a score of 6 out of 10.\n\nThe reason is that while the name clearly conveys the purpose of the CTE, it does not provide any specific information about what data or",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "sjstoelting/talks",
    "SQL": "SELECT \"ArtistId\"\n\t\t\t, array_agg(\"Title\") AS album_titles\n\t\tFROM \"Album\"\n\t\tGROUP BY \"ArtistId\"",
    "cte_name": "album",
    "file_name": "PostgreSQL-As-Data-Integration-Tool.sql",
    "file_path": "https://github.com/sjstoelting/talks/blob/654251873e754e44ce615a6a0b83a508ef48e852/postgresql-as-data-integration-tool-pgday-amsterdam-2018/PostgreSQL-As-Data-Integration-Tool.sql",
    "file_size": 4715,
    "num_branches": 1,
    "num_commits": 93,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 2,
    "repo_path": "https://github.com/sjstoelting/talks",
    "repo_releases": 0,
    "repo_size": 57304,
    "repo_stars": 14,
    "schema": [
      "Chinook"
    ],
    "summary": "This SQL code is grouping albums by their respective artists and aggregating the titles of those albums for each artist into an array, with the result being a list of tuples, each containing an artist's ID and an array of their album titles.",
    "phrase_similarity": 0.34421586990356445,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Grouped_Albums_By_ArtistId`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.583088755607605,
    "Curated-score": 4,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "3",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"album\" for the CTE is somewhat descriptive as it relates to the data being aggregated, which are album titles. However, it does not clearly indicate that the result set is an aggregation of album titles grouped by artist ID. A more comprehensive name could be \"ArtistGroupedAlbumTitles\" or \"GroupedAlbumTitlesByArtist\", which would score higher on the scale. I would give the proposed name a score of 5, as it is somewhat descriptive but could be more explicit.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"album\" for this SQL statement as a score of 2.\n\nThe name \"album\" is a placeholder name that does not accurately reflect the purpose of the CTE, which is to group album titles by artist ID. A more descriptive name would be something like \"artist_albums\" or \"album_titles_by_artist\", which would clearly convey the purpose of the CTE.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name 'album' is very generic and does not reflect the specific operation or result set of the CTE, which aggregates album titles by artist. A more descriptive name would include the aggregation aspect, such as 'album_titles_per_artist'.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"album\" as a score of 2 out of 10.\n\nThe reason is that the name \"album\" does not clearly reflect the purpose of the CTE. It's too vague and doesn't specify what",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "SQL": "SELECT a.first_name || ' ' || a.last_name AS actor,\n         p.amount\n  FROM actor a\n  JOIN film_actor fa\n  ON a.actor_id = fa.actor_id\n  JOIN film f\n  ON fa.film_id = f.film_id\n  JOIN inventory i\n  ON f.film_id = i.film_id\n  JOIN rental r\n  ON i.inventory_id = r.inventory_id\n  JOIN payment p\n  ON r.rental_id = p.rental_id",
    "cte_name": "actors",
    "file_name": "257-most-popular-actors-based-on-rentals-and-income-generated.sql",
    "file_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree/blob/82d89424fbc6b86d9b0e57becef4950988d80d9d/2.%20Introduction%20to%20SQL/Project%20-%20Investigate%20a%20Relational%20Database/257-most-popular-actors-based-on-rentals-and-income-generated.sql",
    "file_size": 1355,
    "num_branches": 1,
    "num_commits": 415,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Certified Nanodegree",
    "repo_forks": 6,
    "repo_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "repo_releases": 0,
    "repo_size": 37861,
    "repo_stars": 4,
    "schema": [
      "Sakila"
    ],
    "summary": "This SQL code is creating a table with a column named \"actor\" (which is the first name concatenated with a space and the last name of the actor) and a column named \"amount\", by joining five tables (actor, film_actor, film, inventory, rental, and payment) based on their respective ID relationships, and displaying the actor's name and the total amount paid for their rentals.",
    "phrase_similarity": 0.31607893109321594,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_FILM_ACTOR_PAYMENT_RENTAL_INVENTORY`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.45283547043800354,
    "Curated-score": 5,
    "gpt-4o-name-evaluation": "2",
    "gpt-4-turbo-name-evaluation": "3",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"actors\" for the CTE is somewhat descriptive as it refers to the table containing actor data. However, it does not specify the join operations or the related data (film, rental, payment) that are included. A more comprehensive name could be \"actors_with_rental_and_payment_data\" or \"actors_with_film_rental_and_payment_info\", which would score higher on the scale. So, I would give the proposed name a score of 5, as it is somewhat descriptive but could be more comprehensive.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"actors\" as a score of 6.\n\nThe name \"actors\" is somewhat descriptive, as it refers to the table or set of data being queried. However, it does not fully convey the purpose of the query, which appears to be retrieving information about actors and their corresponding payments. A more descriptive name might include words like \"actor_payments\" or \"payment_info_by_actor\", which would provide a clearer understanding of the query's purpose.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"actors\" is somewhat generic and does not fully describe the result set of the CTE, which includes both the concatenated full names of the actors and the amount associated with their rentals. A more descriptive name could be \"actor_rental_amounts\" or \"full_names_with_rental_payments,\" which would better reflect the contents of the CTE. Therefore, a score of 3 is given as it indicates a basic understanding of the table's contents but lacks specificity.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"actors\" as a score of 8 out of 10.\n\nThe reason is that the name \"actors\" clearly and accurately reflects the purpose of the CTE, which is to join actor tables with other related",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "wgong/py4kids",
    "SQL": "SELECT customerid,\n       firstname,\n       lastname,\n       CASE country \n           WHEN 'USA' \n               THEN 'Domestic' \n           ELSE 'Foreign' \n       END CustomerGroup\nFROM \n    customers\nORDER BY \n    LastName,\n    FirstName",
    "cte_name": "cust",
    "file_name": "sqlite-tutorials.sql",
    "file_path": "https://github.com/wgong/py4kids/blob/75a127ba06e49209c229ac230cec51178ab6bc36/lesson-14.1-db/sqlite/sqlite-tutorials.sql",
    "file_size": 11936,
    "num_branches": 3,
    "num_commits": 844,
    "num_prs": 24,
    "repo_contributors": 2,
    "repo_description": "help kids learn python",
    "repo_forks": 14,
    "repo_path": "https://github.com/wgong/py4kids",
    "repo_releases": 0,
    "repo_size": 1226861,
    "repo_stars": 23,
    "schema": [
      "Chinook"
    ],
    "summary": "This SQL code is selecting the customer ID, first name, last name, and categorizing the country as either 'Domestic' (if it's USA) or 'Foreign' (for all other countries) for each customer, and then sorting the results by last name and first name.",
    "phrase_similarity": 0.02915884181857109,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_CustomerGroup_By_Country`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.47036251425743103,
    "Curated-score": 4,
    "gpt-4o-name-evaluation": "2",
    "gpt-4-turbo-name-evaluation": "2",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"cust\" is quite vague and does not clearly reflect the purpose of the SQL statement. It could refer to many things in the context of a database. A more descriptive name would be something like \"CustomersByCountryGroup\" or \"DomesticAndForeignCustomers\" to better indicate the result set. So, I would give a score of 3 for this name.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"cust\" as a score of 2. The name \"cust\" is a placeholder name that does not provide any information about the content or purpose of the CTE. It does not reflect the fact that it is grouping customers by country or the fact that it is creating a new column called \"CustomerGroup\". A more descriptive name would be something like \"customer_classification\" or \"customer_groups\", which would score higher.",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 2\n\nThe proposed name \"cust\" is very vague and does not provide any information about what the CTE is doing or what the result set contains. A more descriptive name would include references to the key elements of the query, such as \"CustomerGroupingByCountry\" or \"CustomerDetailsWithCountryGroup\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"cust\" as a score of 2 out of 10.\n\nThe reason is that the name \"cust\" does not clearly reflect the purpose or content of the CTE. It simply refers to the table \"",
    "qwen2.5-coder-3b-instruct-name-evaluation": "3",
    "gemma-2-2b-it-name-evaluation": "1 \n"
  },
  {
    "Repo": "muratukel/Northwind-Traders-Capstone-Project",
    "SQL": "select \n\tc.category_id,\n\tc.category_name,\n\tproduct_name,\n\tsum(od.quantity) as top_selling_product,\n\trank() over (partition by c.category_name order by sum(od.quantity) desc ) as rank \nfrom categories as c\t\n\tleft join products as p\n\t\ton p.category_id=c.category_id\n\tleft join order_details as od\n\t\ton od.product_id=p.product_id\ngroup by 1,2,3",
    "cte_name": "top_selling_category",
    "file_name": "sql_capstone_project.sql",
    "file_path": "https://github.com/muratukel/Northwind-Traders-Capstone-Project/blob/7dcdb0191bd4277d3011c555b54449458fdf762f/sql_capstone_project.sql",
    "file_size": 10526,
    "num_branches": 1,
    "num_commits": 65,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/muratukel/Northwind-Traders-Capstone-Project",
    "repo_releases": 0,
    "repo_size": 4531,
    "repo_stars": 3,
    "schema": [
      "Northwind"
    ],
    "summary": "This SQL code is retrieving the category ID, category name, product name, total quantity sold (top_selling_product), and rank within its category (based on total quantity sold, from highest to lowest) for each product, by joining the categories, products, and order_details tables, and grouping the results by category ID, category name, and product name.",
    "phrase_similarity": 0.5197261571884155,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_TOP_SELLING_PRODUCTS_BY_CATEGORY`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.48437321186065674,
    "Curated-score": 8,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"top_selling_category\" for the SQL statement is quite descriptive and accurately reflects the purpose of the CTE. It clearly indicates that the result set contains the IDs and names of the top-selling categories, along with the quantity of the top-selling product in each category. Therefore, I would give it a score of 9 out of 10. A score of 10 would be reserved for names that also include the specific metric used for ranking, such as \"top_selling_category_by_quantity\".",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"top_selling_category\" as a score of 8.\n\nThe name accurately reflects the purpose of the CTE, which is to identify the top-selling products within each category. The name is descriptive and clearly conveys the intent of the query. However, it could be slightly improved by adding more context, such as \"top_selling_products_by_category\", to make it even more clear what the CTE is trying to achieve.",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 4\n\nExplanation: The proposed name \"top_selling_category\" is somewhat descriptive as it hints at the ranking of products within categories based on sales (quantity). However, it does not fully capture the essence of the CTE, which includes both the ranking of products and the aggregation of quantities. A more descriptive name could be \"TopSellingProductsRankedByCategory\" or \"CategoryProductSalesRanking,\" which would better reflect the CTE's purpose of ranking products within each category by their total sales quantity.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"top_selling_category\" as follows:\n\nScore: 6\n\nThe reason is that this name does not clearly reflect the purpose of the CTE. The name suggests that it will be used to find the category",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "vamshi-krishna-prime/Business_Analytics_Nanodegree",
    "SQL": "SELECT\n  CASE\n    WHEN Company IS NULL\n    THEN 1\n    ELSE 0\n  END AS domestic_customer,\n  CASE\n    WHEN Company IS NULL\n    THEN 0\n    ELSE 1\n  END AS business_customer\nFROM Customer",
    "cte_name": "customer_type",
    "file_name": "query-5-whether-customers-from-domestic-or-business-domain.sql",
    "file_path": "https://github.com/vamshi-krishna-prime/Business_Analytics_Nanodegree/blob/c6115988eefc97923d9bb218e609d5130de079da/Query%20a%20Digital%20Music%20Store%20Database/sql-queries/query-5-whether-customers-from-domestic-or-business-domain.sql",
    "file_size": 1042,
    "num_branches": 1,
    "num_commits": 432,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Certified Nanodegree",
    "repo_forks": 17,
    "repo_path": "https://github.com/vamshi-krishna-prime/Business_Analytics_Nanodegree",
    "repo_releases": 0,
    "repo_size": 8366,
    "repo_stars": 5,
    "schema": [
      "Chinook"
    ],
    "summary": "This SQL code is creating two new columns (domestic_customer and business_customer) in the Customer table. If the Company field is NULL, the corresponding customer is considered a domestic customer for the first column and a business customer for the second column. If the Company field is not NULL, the customer is considered a business customer for the first column and a domestic customer for the second column.",
    "phrase_similarity": 0.4742203950881958,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Domestic_Business_Customer_Classification`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.4678369164466858,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "8",
    "gpt-4-turbo-name-evaluation": "7",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"customer_type\" for the given SQL statement is quite descriptive and accurately reflects the purpose of the CTE, which is to classify customers as either domestic or business based on the presence or absence of a company. I would give it a score of 9 out of 10. A score of 10 would be reserved for names that are even more specific, such as \"domestic_customer_classification\" or \"business_customer_indicator\". However, \"customer_type\" is a clear and concise name that effectively communicates the purpose of the CTE.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"customer_type\" as a score of 8.\n\nThe name \"customer_type\" is descriptive and accurately reflects the purpose of the CTE, which is to categorize customers as either domestic or business. The name is concise and easy to understand, making it clear what the CTE is intended to produce. However, it could be slightly more specific, such as \"customer_classification\" or \"customer_segmentation\", which would bump the score up to a 9 or 10. Nevertheless, \"customer_type\" is a clear and accurate name that effectively conveys the purpose of the CTE.",
    "Phi-3.5-mini-instruct-name-evaluation": "7\n\nThe name \"customer_type\" is somewhat descriptive, indicating that the CTE differentiates customers based on some criteria (in this case, whether they are domestic or business customers). However, it could be more specific about what the criteria are (e.g., domestic vs. business), which would make it more comprehensive. Therefore, a score of 7 is given, reflecting that the name is better than generic placeholder names but still leaves some room for improvement in terms of specificity.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"customer_type\" as follows:\n\nName: customer_type\nExpected score: 2\n\nThe reason for this low score is that the name does not clearly reflect the purpose of the CTE. The name suggests a",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "SQL": "SELECT f.film_id,\n                         f.title AS film_title,\n                         c.name AS category_name\n                  FROM film AS f\n                  JOIN film_category AS fc\n                  ON f.film_id = fc.film_id\n                  JOIN category AS c\n                  ON c.category_id = fc.category_id\n                  WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')",
    "cte_name": "fam_film",
    "file_name": "244-categorize-family-movies-and-find-no-of-times-each-movie-rented-out.sql",
    "file_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree/blob/82d89424fbc6b86d9b0e57becef4950988d80d9d/2.%20Introduction%20to%20SQL/Project%20-%20Investigate%20a%20Relational%20Database/244-categorize-family-movies-and-find-no-of-times-each-movie-rented-out.sql",
    "file_size": 5001,
    "num_branches": 1,
    "num_commits": 415,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Certified Nanodegree",
    "repo_forks": 6,
    "repo_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "repo_releases": 0,
    "repo_size": 37861,
    "repo_stars": 4,
    "schema": [
      "DVD Rental"
    ],
    "summary": "This SQL code is retrieving the film_id, film_title, and category_name for films that belong to the specified categories (Animation, Children, Classics, Comedy, Family, Music). It does this by joining the 'film', 'film_category', and 'category' tables on their respective IDs.",
    "phrase_similarity": 0.3335222899913788,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_PopularCategories`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.22078882157802582,
    "Curated-score": 6,
    "gpt-4o-name-evaluation": "5",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"fam_film\" is somewhat vague and does not clearly reflect the purpose of the SQL statement. It seems to be a combination of \"Family\" (as the films are from the 'Family' category) and \"film\". A more descriptive name could be \"FamilyFilmData\" or \"FamilyMovieList\", which would score around 7 or 8. However, the given name scores a 4, as it is not very descriptive.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"fam_film\" as a score of 6.\n\nThe name \"fam_film\" is somewhat descriptive, as it suggests that the CTE is related to films and possibly family-oriented films. However, it does not explicitly convey the fact that the CTE is filtering films by specific categories (Animation, Children, Classics, Comedy, Family, Music). A more descriptive name might include the categories or the filtering criteria, such as \"family_films_by_category\" or \"filtered_film_list\".",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 4\n\nThe proposed name \"fam_film\" is somewhat indicative of the query's purpose, suggesting that it filters films by family-friendly categories. However, it lacks specificity about the categories involved ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music') and does not mention the structure of the result set (film_id, film_title, category_name). A more descriptive name could be \"FamilyFriendlyFilms_Details\" or \"FilmsByFamilyCategories\", which would better reflect the CTE's purpose and the result set structure.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"fam_film\" as follows:\n\nName: fam_film\nExpected score: 6\n\nThe reason for this low score is that the name does not clearly reflect the purpose of the CTE. The",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "SQL": "SELECT r.rental_id,\n         f.title,\n         f.rating,\n         p.amount\n  FROM film f\n  JOIN inventory i\n  ON f.film_id = i.film_id\n  JOIN rental r\n  ON i.inventory_id = r.inventory_id\n  JOIN payment p\n  ON r.rental_id = p.rental_id\n  ORDER BY 3, 2, 1",
    "cte_name": "categories",
    "file_name": "253-income-generated-based-on-film-ratings.sql",
    "file_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree/blob/82d89424fbc6b86d9b0e57becef4950988d80d9d/2.%20Introduction%20to%20SQL/Project%20-%20Investigate%20a%20Relational%20Database/253-income-generated-based-on-film-ratings.sql",
    "file_size": 681,
    "num_branches": 1,
    "num_commits": 415,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Certified Nanodegree",
    "repo_forks": 6,
    "repo_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "repo_releases": 0,
    "repo_size": 37861,
    "repo_stars": 4,
    "schema": [
      "DVD Rental"
    ],
    "summary": "This SQL code is retrieving the rental ID, film title, film rating, and payment amount for each rental, joining data from the film, inventory, rental, and payment tables, and ordering the results by film rating and title, then by rental ID.",
    "phrase_similarity": 0.1403704136610031,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_RatedFilmRentals_Sorted`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.2856023609638214,
    "Curated-score": 2,
    "gpt-4o-name-evaluation": "2",
    "gpt-4-turbo-name-evaluation": "1",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"categories\" is not an accurate reflection of the SQL statement's purpose. A more descriptive name would be something like \"film_rating_and_payment_amount_by_rental\". Score: 2.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"categories\" as a score of 2. The name \"categories\" does not accurately reflect the purpose of the CTE, which appears to be joining multiple tables to retrieve information about film rentals and payments. The name does not provide any insight into what the CTE is trying to accomplish or what data it is producing.",
    "Phi-3.5-mini-instruct-name-evaluation": "2\n\nThe proposed name \"categories\" is vague and does not reflect the specific purpose of the CTE, which involves retrieving rental information along with film titles, ratings, and payment amounts. A more descriptive name could be \"FilmRentalPayments\" or \"RentalDetails\" to better convey the data being selected and joined in the query.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"categories\" as a score of 6 out of 10.\n\nThe reason is that while \"categories\" clearly conveys the purpose of the CTE (i.e., grouping films by their category), it doesn",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "marinfotache/Baze-de-date-I",
    "SQL": "select title as album_title, artist.name as artist_name,\n\t\tcount(*) as n_of_tracks\n\tfrom track\n\t\tinner join album on track.albumid = album.albumid\n\t\tinner join artist on album.artistid = artist.artistid\n\twhere artist.name = 'U2'\n\tgroup by title, artist.name",
    "cte_name": "n_of_tracks_u2",
    "file_name": "chinook_10_sql_expresii_tabele_totaluri.sql",
    "file_path": "https://github.com/marinfotache/Baze-de-date-I/blob/fca74dcdb2f0cc1598391f26a76320d74f26ec1c/chinook%20-%20studiu%20de%20caz%20(SQL%20&%20tidyverse)/chinook_10_sql_expresii_tabele_totaluri.sql",
    "file_size": 16463,
    "num_branches": 1,
    "num_commits": 361,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Resurse necesare cursului Baze de date I (Univ. Al.I.Cuza Iasi, FEAA, specializarile Informatica Economica, Statistica si CIG)",
    "repo_forks": 17,
    "repo_path": "https://github.com/marinfotache/Baze-de-date-I",
    "repo_releases": 0,
    "repo_size": 82254,
    "repo_stars": 15,
    "schema": [
      "Chinook"
    ],
    "summary": "This SQL code is retrieving the album title, artist name, and the number of tracks for each album by U2, by joining the 'track', 'album', and 'artist' tables based on their respective IDs, and then grouping the results by album title and artist name.",
    "phrase_similarity": 0.42478981614112854,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_U2_AlbumTracks`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.38556039333343506,
    "Curated-score": 10,
    "gpt-4o-name-evaluation": "7",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"n_of_tracks_u2\" for the CTE is quite descriptive as it clearly indicates the count of tracks and the artist (U2) involved. However, it could be more comprehensive by including the word \"album\" to make it clear that the result set represents the number of tracks on each album by U2. So, I would give it a score of 7. A more comprehensive name could be \"u2_album_track_count\".",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"n_of_tracks_u2\" as a score of 6.\n\nThe name is descriptive and accurately reflects the purpose of the CTE, which is to count the number of tracks for U2. However, it is not highly descriptive, as it does not convey the fact that it is an album-level aggregation. A more comprehensive name might include the word \"album\" or \"artist\", such as \"U2_album_tracks\" or \"artist_tracks_u2\".",
    "Phi-3.5-mini-instruct-name-evaluation": "7\n\nThe proposed name \"n_of_tracks_u2\" is somewhat descriptive, indicating the count of tracks for the artist 'U2'. However, it could be more comprehensive by including the context of the data, such as the album title. A more descriptive name could be \"n_of_tracks_per_album_u2\", which would provide a clearer understanding of the CTE's purpose. Therefore, a score of 7 is given, as it is somewhat descriptive but not fully comprehensive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"n_of_tracks_u2\" as follows:\n\nScore: 6\n\nThe reason for this low score is that the name does not clearly indicate what column or expression in the SQL statement it refers to. The name",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "8 \n"
  },
  {
    "Repo": "tobiolad/Sql-Queries",
    "SQL": "select\r\n orderdate,\r\n TotalDue,\r\n ordermonth = DATEFROMPARTS(year(orderdate),month(orderdate),1),\r\n orderrank = ROW_NUMBER() over(partition by DATEFROMPARTS(year(orderdate),month(orderdate),1) order by totaldue desc)\r\nfrom AdventureWorks2019.Sales.SalesOrderHeader",
    "cte_name": "STEP1",
    "file_name": "CTE_s.sql",
    "file_path": "https://github.com/tobiolad/Sql-Queries/blob/389a010db6bc6f3be938c843fad763b214f60402/CTE_s.sql",
    "file_size": 1224,
    "num_branches": 1,
    "num_commits": 1,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Using SQL advanced queries like OVER,PARTITION_BY,RANK,DENSE_RANK e.t.c",
    "repo_forks": 1,
    "repo_path": "https://github.com/tobiolad/Sql-Queries",
    "repo_releases": 0,
    "repo_size": 4,
    "repo_stars": 3,
    "schema": [
      "AdventureWorks"
    ],
    "summary": "This SQL code is selecting the order date, total due, and a new column 'ordermonth' which is the first day of the month of the order date, as well as an 'orderrank' column that ranks orders by total due within each month (from the AdventureWorks2019 database, SalesOrderHeader table), starting from 1 for the highest total due.",
    "phrase_similarity": 0.15488702058792114,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_MonthlyOrderRank`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.4538832902908325,
    "Curated-score": 1,
    "gpt-4o-name-evaluation": "1",
    "gpt-4-turbo-name-evaluation": "1",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"STEP1\" is not descriptive of the result set produced by the SQL statement. A more descriptive name would be something like \"TopOrdersByMonthAndYear\" or \"MonthlyOrderRankingByTotalDue\". I would give it a score of 2.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"STEP1\" as a score of 2. The name \"STEP1\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not describe what the CTE is trying to achieve or what data it is producing. A more descriptive name would be something like \"MonthlyOrderRanking\" or \"OrderSummaryByMonth\", which would provide a clear understanding of the CTE's purpose.",
    "Phi-3.5-mini-instruct-name-evaluation": "2\n\nThe proposed name \"STEP1\" is highly vague and does not provide any information about what the CTE is doing or what data it contains. It does not reflect the purpose of the CTE, which involves selecting order dates, total due amounts, and ranking orders within each month by total due amount. A more descriptive name would include elements like \"monthly_order_rankings\" or \"monthly_sales_order_rankings_by_total_due\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"STEP1\" as follows:\n\nThe name \"STEP1\" is vague and does not clearly reflect the purpose of the CTE. It suggests that the CTE will be used in a step-by-step process,",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "marinfotache/Baze-de-date-I",
    "SQL": "select artist.name as artist_name,\n\t\textract (year from invoicedate) as year,\n    \tsum(quantity * invoiceline.unitprice) as sales\n\tfrom invoice\n\t\tinner join invoiceline on invoice.invoiceid = invoiceline.invoiceid\n\t\tinner join track on invoiceline.trackid = track.trackid\n\t\tinner join album on track.albumid = album.albumid\n\t\tinner join artist on album.artistid = artist.artistid\n\twhere extract (year from invoicedate) between 2011 and 2013\n\tgroup by artist.name, extract (year from invoicedate)",
    "cte_name": "sales_artists_years",
    "file_name": "chinook_10_sql_expresii_tabele_totaluri.sql",
    "file_path": "https://github.com/marinfotache/Baze-de-date-I/blob/fca74dcdb2f0cc1598391f26a76320d74f26ec1c/chinook%20-%20studiu%20de%20caz%20(SQL%20&%20tidyverse)/chinook_10_sql_expresii_tabele_totaluri.sql",
    "file_size": 16463,
    "num_branches": 1,
    "num_commits": 361,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Resurse necesare cursului Baze de date I (Univ. Al.I.Cuza Iasi, FEAA, specializarile Informatica Economica, Statistica si CIG)",
    "repo_forks": 17,
    "repo_path": "https://github.com/marinfotache/Baze-de-date-I",
    "repo_releases": 0,
    "repo_size": 82254,
    "repo_stars": 15,
    "schema": [
      "Chinook"
    ],
    "summary": "This SQL code is calcululating the total sales for each artist between the years 2011 and 2013 by joining multiple tables (invoice, invoiceline, track, album, artist) and grouping the results by artist name and year extracted from the invoice date.",
    "phrase_similarity": 0.5327627062797546,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_ArtistSalesByYear_2011_2013`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.3836917281150818,
    "Curated-score": 8,
    "gpt-4o-name-evaluation": "7",
    "gpt-4-turbo-name-evaluation": "8",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"sales_artists_years\" for the CTE is quite descriptive and accurately reflects the result set, which is the sales data grouped by artist and year. I would give it a score of 9 out of 10. A score of 10 would be more appropriate if the name also included the \"invoicedate\" or \"sum(quantity * invoiceline.unitprice)\" to make it even more explicit about the specific calculations involved. However, considering the context, the given name is still very clear and informative.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"sales_artists_years\" as a score of 8.\n\nThe name is descriptive and accurately reflects the purpose of the CTE, which is to calculate the sales of artists by year. It clearly indicates that the CTE is grouping the data by artist and year, and that the result set will contain sales information. The name is concise and easy to understand, making it a good choice for a CTE name. However, it could be slightly more specific, such as \"artist_yearly_sales\" or \"sales_by_artist_and_year\", which would earn a higher score.",
    "Phi-3.5-mini-instruct-name-evaluation": "7\n\nThe proposed name \"sales_artists_years\" captures the essence of the CTE's purpose, which involves sales data aggregated by artist and year. However, it could be more descriptive by including the specific metric being summed (e.g., \"sales_by_artist_and_year\") to provide a clearer understanding of the result set. A score of 7 reflects that the name is somewhat descriptive but leaves room for improvement in specificity.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"sales_artists_years\" as follows:\n\nScore: 6\n\nReasoning:\n- The name is descriptive, but it doesn't clearly indicate what column(s) are being summed or aggregated.\n- It mentions \"",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "abhishekde94/rsvp_movies",
    "SQL": "SELECT movie_id, \n\t\t\tCOUNT(genre) AS number_of_movies\n\tFROM genre\n\tGROUP BY movie_id\n\tHAVING number_of_movies=1",
    "cte_name": "ct_genre",
    "file_name": "IMDB+question.sql",
    "file_path": "https://github.com/abhishekde94/rsvp_movies/blob/e9044d5ec653e1d6557b803b82d1e1568bdca995/IMDB%2Bquestion.sql",
    "file_size": 28931,
    "num_branches": 1,
    "num_commits": 4,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "RSVP Movies is an Indian film production company which has produced many super-hit movies. They have usually released movies for the Indian audience but for their next project, they are planning to release a movie for the global audience in 2022.",
    "repo_forks": 5,
    "repo_path": "https://github.com/abhishekde94/rsvp_movies",
    "repo_releases": 0,
    "repo_size": 5125,
    "repo_stars": 5,
    "schema": [
      "IMDB"
    ],
    "summary": "This SQL code is counting the number of unique movies that belong to exactly one genre, grouped by movie_id.",
    "phrase_similarity": 0.290645033121109,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_SingleGenreMovies`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.18949934840202332,
    "Curated-score": 6,
    "gpt-4o-name-evaluation": "2",
    "gpt-4-turbo-name-evaluation": "3",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"ct_genre\" for the given SQL statement is somewhat descriptive, but it could be more specific. A more comprehensive name would reflect the purpose of the CTE, which is to find movies that belong to only one genre. A suggested",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"ct_genre\" as a score of 2. The name is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not reflect the fact that the CTE is counting the number of movies per genre, nor does it indicate that the result set is filtered to only include movies with a single genre. A more descriptive name would be something like \"movies_with_single_genre\" or \"genre_counts\", which would score higher.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe name \"ct_genre\" is somewhat indicative of a CTE but does not provide specific information about what the CTE does. It mentions \"CT\" (common table expression) but lacks detail on the purpose or the result set. A more descriptive name would include what is being counted or grouped by, such as \"unique_movie_genres\" or \"movies_with_single_genre\". Therefore, it receives a score of 3 for being slightly better than a placeholder name but still not fully descriptive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"ct_genre\" as follows:\n\nName: genre\nExpected score: 2\n\nReasoning:\nThe name \"genre\" is vague and does not clearly reflect the purpose of the CTE. It only mentions one",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "40tude/Data_Essentials_Stage_Oct_2023",
    "SQL": "SELECT * FROM `dataset_imdb.movies` \nJOIN `dataset_imdb.main_actors`  USING(actor_1_id)\nWHERE actor_1_name = \"Johnny Depp\"",
    "cte_name": "movie_with_johnny_depp",
    "file_name": "04-extract-european-soccer.sql",
    "file_path": "https://github.com/40tude/Data_Essentials_Stage_Oct_2023/blob/bf7016340ef285112bc2d9e94320ada6b3f74615/01-SQL-J2/04-extract-european-soccer.sql",
    "file_size": 935,
    "num_branches": 1,
    "num_commits": 50,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/40tude/Data_Essentials_Stage_Oct_2023",
    "repo_releases": 0,
    "repo_size": 292467,
    "repo_stars": 3,
    "schema": [
      "IMDB"
    ],
    "summary": "This SQL code is retrieving all columns from the \"movies\" table in the \"dataset_imdb\" database, joining it with the \"main_actors\" table using the common \"actor_1_id\", and filtering the results to only include rows where the name of the main actor 1 is \"Johnny Depp\".",
    "phrase_similarity": 0.39820781350135803,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Johnny_Depp_Movies`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.44084396958351135,
    "Curated-score": 10,
    "gpt-4o-name-evaluation": "8",
    "gpt-4-turbo-name-evaluation": "7",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "9",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"movie_with_johnny_depp\" as a score of 8.\n\nThe name accurately reflects the purpose of the CTE, which is to retrieve movies that feature Johnny Depp as an actor. The name is descriptive and provides a clear idea of what the CTE is intended to produce. However, it could be slightly more comprehensive by including additional information, such as the type of role Johnny Depp played in the movie or the year the movie was released. Nevertheless, the name is still quite accurate and provides a good understanding of the CTE's purpose.",
    "Phi-3.5-mini-instruct-name-evaluation": "6\n\nThe name \"movie_with_johnny_depp\" is somewhat descriptive, indicating that the result set includes movies associated with Johnny Depp. However, it lacks specificity about the nature of the join or the exact criteria used to filter the results. A more descriptive name could include the table names and the filtering condition, such as \"movies_joined_with_main_actors_where_actor_name_is_johnny_depp\". This would provide a clearer understanding of the CTE's purpose and thus merit a higher score.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"movie_with_johnny_depp\" as follows:\n\nScore: 6\n\nThe reason for this low score is that the name does not clearly reflect the purpose of the CTE. The name suggests a relationship",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "8 \n"
  },
  {
    "Repo": "wenima/codewars",
    "SQL": "select c.id as category_id, c.category, p.title,\np.views as views, p.id as post_id,\nrank() OVER (PARTITION BY p.category_id ORDER BY p.views DESC, p.id) as rnk\nfrom categories c\nLEFT JOIN posts p ON c.id = p.category_id\nGROUP BY c.id, c.category, p.title, p.id",
    "cte_name": "posts_per_category",
    "file_name": "top_n_per_group_window.sql",
    "file_path": "https://github.com/wenima/codewars/blob/fc508af7ec2ad1b55eeba4e52b94b41f61cd75ae/kyu5/sql/src/top_n_per_group_window.sql",
    "file_size": 1008,
    "num_branches": 21,
    "num_commits": 482,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "contains all code katas completed on www.codewars.com kyu5 or higher",
    "repo_forks": 3,
    "repo_path": "https://github.com/wenima/codewars",
    "repo_releases": 0,
    "repo_size": 473,
    "repo_stars": 20,
    "schema": [
      "DVD Rental"
    ],
    "summary": "This SQL code is selecting the category ID, category name, post title, views, and post ID for each post, along with a ranking (rnk) for each post within its respective category, ordered by views in descending order and then by post ID, from the categories and posts tables, with left joins to include categories even if they have no posts.",
    "phrase_similarity": 0.4666602909564972,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Ranked_Posts_By_Category_Views`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.4685613512992859,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"posts_per_category\" for the SQL statement is quite descriptive and accurately reflects the purpose of the CTE. It clearly indicates that the result set contains posts grouped by their respective categories. I would give it a score of 9 out of 10. A score of 10 would be reserved for names that also include the ranking function and the sorting criteria, such as \"top_posts_per_category_ranked_by_views_desc_and_id\". However, the current name is still very clear and concise.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"posts_per_category\" as a score of 8.\n\nThe name is descriptive and accurately reflects the purpose of the CTE, which is to group posts by category and provide additional information about each post. The name is clear and concise, making it easy to understand what the CTE is intended to produce. However, it could be slightly more specific, as it doesn't explicitly mention the ranking aspect of the CTE. Nevertheless, it is still a good name that effectively conveys the purpose of the CTE.",
    "Phi-3.5-mini-instruct-name-evaluation": "7\n\nThe name \"posts_per_category\" is somewhat descriptive as it indicates that the CTE is related to posts and categories. However, it doesn't fully convey the additional details such as the ranking of posts by views within each category or the inclusion of post IDs and titles. A more descriptive name might include these elements, such as \"RankedPostsPerCategoryWithViewsAndIDs\". Therefore, it receives a score of 7, indicating it's fairly descriptive but not fully comprehensive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"posts_per_category\" as follows:\n\nScore: 6\n\nThe reason is that this name does not clearly reflect the purpose of the CTE, which is to rank categories by their post views. The name suggests",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "vamshi-krishna-prime/Business_Analytics_Nanodegree",
    "SQL": "SELECT\n  ar.ArtistId,\n  ar.Name AS artist_name,\n  SUM(il.UnitPrice * il.Quantity) AS earned\nFROM Artist ar\nJOIN Album al\n  ON ar.ArtistId = al.ArtistId\nJOIN Track t\n  ON al.AlbumId = t.AlbumId\nJOIN InvoiceLine il\n  ON t.TrackId = il.TrackId\nGROUP BY 1,\n         2\nORDER BY 3 DESC\nLIMIT 1",
    "cte_name": "most_earned_artist",
    "file_name": "query-4-most-popular-artist-and-genre-to-organize-concert.sql",
    "file_path": "https://github.com/vamshi-krishna-prime/Business_Analytics_Nanodegree/blob/c6115988eefc97923d9bb218e609d5130de079da/Query%20a%20Digital%20Music%20Store%20Database/sql-queries/query-4-most-popular-artist-and-genre-to-organize-concert.sql",
    "file_size": 1311,
    "num_branches": 1,
    "num_commits": 432,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Certified Nanodegree",
    "repo_forks": 17,
    "repo_path": "https://github.com/vamshi-krishna-prime/Business_Analytics_Nanodegree",
    "repo_releases": 0,
    "repo_size": 8366,
    "repo_stars": 5,
    "schema": [
      "Chinook"
    ],
    "summary": "This SQL code is summing the total earnings for each artist by adding up the unit price multiplied by the quantity for each track sold, joining multiple tables (Artist, Album, Track, InvoiceLine), and then sorting the results in descending order by total earnings, while only showing the top artist with the highest earnings (limited to 1 result).",
    "phrase_similarity": 0.42375585436820984,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_ArtistEarnings`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.2685965895652771,
    "Curated-score": 10,
    "gpt-4o-name-evaluation": "9",
    "gpt-4-turbo-name-evaluation": "10",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"most_earned_artist\" for the SQL statement is quite descriptive and accurately reflects the purpose of the CTE. It clearly indicates that the result set contains the ArtistId, ArtistName, and the total amount earned by that artist. Therefore, I would give it a score of 9 out of 10. A score of 10 would be reserved for names that are even more specific, such as \"highest_earning_artist_with_total_revenue_from_album_sales\". However, the proposed name is already quite clear and concise, so a score of 9 seems appropriate.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"most_earned_artist\" as a score of 9.\n\nThe name accurately reflects the purpose of the CTE, which is to identify the artist who has earned the most money. The name is descriptive, concise, and clearly indicates the result set being produced. The only reason it's not a perfect 10 is that it's a bit generic and doesn't provide additional context about what the CTE is doing, but it's still a very good name.",
    "Phi-3.5-mini-instruct-name-evaluation": "7\n\nThe name \"most_earned_artist\" is somewhat descriptive, indicating that the CTE is likely focused on identifying the artist who has earned the most from sales. However, it lacks specificity about the calculation method (SUM of earnings) and the grouping (by ArtistId). A more descriptive name could include these details, such as \"TopEarningArtistByTotalRevenue\". The score of 7 reflects that while the name conveys a general idea, it could be improved for clarity.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"most_earned_artist\" as follows:\n\nScore: 7\n\nThe reason is that this name does not clearly reflect the purpose of the CTE. The name suggests that it will return the artist with the highest",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "8 \n"
  },
  {
    "Repo": "jorgeluis500/SQL-challenges-and-projects",
    "SQL": "SELECT \n\t\t*,\n\t\tAVG(nps) OVER () AS avg_nps,\n\t\tstddev_samp(nps) OVER () AS stdev_nps\n\tFROM t_nps",
    "cte_name": "t_avg_stddev",
    "file_name": "pd2021w23.sql",
    "file_path": "https://github.com/jorgeluis500/SQL-challenges-and-projects/blob/14f7c28e94c2acf8c3903ba1f2a11078813d2f9e/Preppin%20Data/PD%20-%202021%20Week%2023/pd2021w23.sql",
    "file_size": 2594,
    "num_branches": 2,
    "num_commits": 96,
    "num_prs": 2,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 2,
    "repo_path": "https://github.com/jorgeluis500/SQL-challenges-and-projects",
    "repo_releases": 0,
    "repo_size": 39053,
    "repo_stars": 9,
    "schema": [
      "Airline"
    ],
    "summary": "This SQL code is calculating the average and standard deviation of the 'nps' column across the entire table 't_nps'. The results include all columns from the table, along with the calculated average (avg_nps) and standard deviation (stdev_nps) of the 'nps' values.",
    "phrase_similarity": 0.13930761814117432,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_NPS_STATS`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.5150988101959229,
    "Curated-score": 5,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "7",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"t_avg_stddev\" for the CTE is somewhat descriptive as it indicates that the result set contains the average and standard deviation of a column named \"nps\". However, it does not clearly specify the table or the context of the data. A more comprehensive name could be \"nps_average_and_standard_deviation\" or \"avg_stddev_nps_data\", which would score around 8 or 9. The current name scores a 6, as it provides some information about the data, but lacks clarity about the table and context.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"t_avg_stddev\" as a score of 6.\n\nThe name does mention the two calculations being performed (AVG and stddev_samp), but it doesn't provide much context about what these calculations are being performed on or what the purpose of the CTE is. It's a descriptive name, but it's not very specific or informative.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"t_avg_stddev\" is somewhat descriptive, indicating that it involves average (AVG) and standard deviation (STDEV) calculations, but it lacks specificity about what is being averaged or the context (e.g., NPS scores). A more descriptive name could include the column name or the specific metric being analyzed. For example, \"t_nps_avg_stddev\" would be more informative. Therefore, a score of 3 is given as it indicates some level of understanding but is not fully descriptive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"t_avg_stddev\" as follows:\n\nScore: 6\n\nThe reason is that this name does not clearly reflect the purpose of the CTE. The name suggests a calculation involving averages and standard deviations, but",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "airbytehq/airbyte-dbt-models",
    "SQL": "SELECT\n        apr.customer_id AS account_id,\n        ag_ad.segments_date AS date_day,\n        ag.campaign_id AS campaign_id,\n        ag_ad.ad_group_id AS ad_group_id,\n        -- keyword_ad_group_criterion is not present in the Airbyte schema\n        apr.segments_ad_network_type AS ad_network_type,\n        ag_ad.ad_group_ad_ad_device_preference AS device,\n        ag_ad.ad_group_ad_ad_id AS ad_id,\n        COALESCE(apr.metrics_clicks, 0) AS clicks,\n        COALESCE(apr.metrics_cost_micros, 0) / 1000000.0 AS spend,\n        COALESCE(apr.metrics_impressions, 0) AS impressions,\n        COALESCE(apr.metrics_conversions, 0) AS conversions,\n        COALESCE(apr.metrics_conversions_value, 0) AS conversions_value,\n        COALESCE(apr.metrics_view_through_conversions, 0) AS view_through_conversions\n    FROM\n        {{ source('source_google_ads', 'account_performance_report') }} apr,\n        {{ source('source_google_ads', 'ad_group_ad') }} ag_ad,\n        {{ source('source_google_ads', 'ad_group') }} ag\n    WHERE\n        ag_ad.ad_group_id = ag.ad_group_id -- Ensure proper linking between ad_group_ad and ad_group",
    "cte_name": "TMP",
    "file_name": "ad_stats.sql",
    "file_path": "https://github.com/airbytehq/airbyte-dbt-models/blob/4b94f98c58aae5f5709bb009ae38d5e4f5374b00/connectors/source_google_ads/models/fivetran_converter/ad_stats.sql",
    "file_size": 3521,
    "num_branches": 6,
    "num_commits": 201,
    "num_prs": 33,
    "repo_contributors": 12,
    "repo_description": "Models to be used to leverage Airbyte output connector data.",
    "repo_forks": 14,
    "repo_path": "https://github.com/airbytehq/airbyte-dbt-models",
    "repo_releases": 0,
    "repo_size": 1783,
    "repo_stars": 4,
    "schema": [
      "HR"
    ],
    "summary": "This SQL code is retrieving the account ID, date, campaign ID, ad group ID, ad network type, device preference, ad ID, click count, spend, impression count, conversion count, conversion value, view-through conversion count from Google Ads performance report, ad group, and ad group ad tables, and linking them together based on the ad group ID, while also handling cases where some metrics might be null by using COALESCE function.",
    "phrase_similarity": 0.10110284388065338,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_GA_AdsPerformanceAndGroupData`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.43161576986312866,
    "Curated-score": 1,
    "gpt-4o-name-evaluation": "1",
    "gpt-4-turbo-name-evaluation": "1",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"TMP\" is a placeholder name that says nothing about the CTE's purpose. It would receive a score of 1. A more descriptive name could be something like \"GoogleAdsCampaignPerformanceData\" or \"GoogleAdsAdGroupAdPerformance\" to better reflect the data being queried.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"TMP\" as a score of 1. The name \"TMP\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not reflect what result set the SQL is trying to produce, making it a vague and unrelated name.",
    "Phi-3.5-mini-instruct-name-evaluation": "1",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"TMP\" as follows:\n\nScore: 2\n\nReasoning:\n\n* The name \"TMP\" is vague and does not clearly reflect the purpose of the CTE. It's a placeholder name that doesn't indicate",
    "qwen2.5-coder-3b-instruct-name-evaluation": "3",
    "gemma-2-2b-it-name-evaluation": "1 \n"
  },
  {
    "Repo": "binbjz/tpcds_pg",
    "SQL": "select ws1.ws_order_number, ws1.ws_warehouse_sk wh1, ws2.ws_warehouse_sk wh2\n          from web_sales ws1,\n               web_sales ws2\n          where ws1.ws_order_number = ws2.ws_order_number\n            and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk",
    "cte_name": "ws_wh",
    "file_name": "query_0.sql",
    "file_path": "https://github.com/binbjz/tpcds_pg/blob/3d9f524686744f4fef01b996214ef7e85c7735c7/tpcds_query/query_0.sql",
    "file_size": 198317,
    "num_branches": 1,
    "num_commits": 32,
    "num_prs": 1,
    "repo_contributors": 1,
    "repo_description": "TPC-DS for PostgreSQL",
    "repo_forks": 0,
    "repo_path": "https://github.com/binbjz/tpcds_pg",
    "repo_releases": 0,
    "repo_size": 29219,
    "repo_stars": 194,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is retrieving the order number and two warehouse SKs (stock keeping units) for orders that have been shipped from different warehouses within the same web sales order.",
    "phrase_similarity": 0.12290766090154648,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_MultiWarehouseOrders`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.23834414780139923,
    "Curated-score": 2,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "3",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"ws_wh\" is quite vague and does not clearly reflect the purpose of the SQL statement. It does not indicate that the result set contains order numbers and warehouse SKs from two different warehouses for the same order number. I would give it a score of 2. A more descriptive name could be \"different_warehouse_orders\" or \"multi_warehouse_order_numbers\".",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"ws_wh\" as a score of 4.\n\nThe name \"ws_wh\" is somewhat descriptive, as it references the \"ws\" prefix from the table names and the \"wh\" suffix from the column names. However, it is still quite vague and does not clearly convey the purpose of the CTE, which appears to be identifying orders with multiple warehouses. A more descriptive name would be something like \"orders_with_multiple_warehouses\" or \"ws_orders_with_cross_warehouses\", which would score higher.",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 3\n\nExplanation: The proposed name \"ws_wh\" is very vague and does not clearly reflect the purpose of the CTE. It only combines parts of the column names without indicating the relationship between the two warehouse sku values or the nature of the comparison (different warehouse skus for the same order number). A more descriptive name could be \"OrdersWithDifferentWarehouses\" or \"OrderWarehouseDiscrepancies\" to better convey the intent of the query.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"ws_wh\" as follows:\n\nName: ws_wh\nExpected score: 2\n\nThe reason for this low score is that the name does not clearly reflect the purpose of the CTE. The name suggests a",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "huanminwu/LeetCode",
    "SQL": "SELECT \n        subordinate_id = employee_id,\n        subordinate_name = employee_name,\n        salary,\n        hierarchy_level = 0\n    FROM Employees\n    WHERE  manager_id IS NULL\n    UNION ALL\n    SELECT \n        subordinate_id = B.employee_id,\n        subordinate_name = B.employee_name,\n        B.salary,\n        hierarchy_level = A.hierarchy_level + 1\n    FROM\n        Recursion AS A\n    INNER JOIN \n        Employees AS B\n    ON\n        A.subordinate_id = B.manager_id",
    "cte_name": "Recursion",
    "file_name": "LeetCode3236.sql",
    "file_path": "https://github.com/huanminwu/LeetCode/blob/66b33c0a853e2eaef9f04d5668bc20be569e4355/SQL/LeetCode3236.sql",
    "file_size": 4665,
    "num_branches": 1,
    "num_commits": 432,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "LeetCode C++ solution",
    "repo_forks": 76,
    "repo_path": "https://github.com/huanminwu/LeetCode",
    "repo_releases": 0,
    "repo_size": 378840,
    "repo_stars": 184,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is creating a flat list of employees in a hierarchy, starting from the top-level (no manager) employees, and then recursively including subordinates, assigning each employee a hierarchy level. The hierarchy level increases by 1 for each subordinate.",
    "phrase_similarity": 0.17874421179294586,
    "Mistral-7B-Instruct-v0.3-cte-name": "'CTE_EmpHierarchy'",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.366460919380188,
    "Curated-score": 4,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"Recursion\" is somewhat descriptive as it suggests a recursive query, but it does not clearly indicate the purpose of the CTE or the result set it produces. A more descriptive name could be \"EmployeeHierarchy\" or \"EmployeeRecursiveStructure\" to better reflect the hierarchical structure of employees in the CTE. Score: 5.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"Recursion\" as a score of 6.\n\nThe name \"Recursion\" is somewhat descriptive, as it refers to the recursive nature of the query. However, it does not fully convey the purpose of the CTE, which is to generate a hierarchical representation of employees based on their manager-subordinate relationships. A more descriptive name might include words like \"EmployeeHierarchy\" or \"OrganizationChart\", which would provide a clearer understanding of the CTE's purpose.",
    "Phi-3.5-mini-instruct-name-evaluation": "5\n\nThe name \"Recursion\" indicates that the CTE is recursive, which is a correct aspect of the CTE's purpose. However, it does not fully describe what the CTE is doing with the data (i.e., building a hierarchy of employees). A more descriptive name could include the purpose of the recursion, such as \"EmployeeHierarchyCTE\" or \"EmployeeManagementCTE,\" which would provide a clearer understanding of the CTE's role in the query. Therefore, a score of 5 is given as it acknowledges the recursive nature but lacks full descriptiveness.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the name \"Recursion\" as a score of 2 out of 10.\n\nThe reason is that while the name clearly indicates what type of CTE (a recursive one), it doesn't provide any specific information about its purpose",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "jorgeluis500/SQL-challenges-and-projects",
    "SQL": "SELECT\n\t\t\t\"Airline\",\n\t\t\tCOUNT(*) AS number_of_responses,\n\t\t\tSUM(CASE WHEN response_type = 'Promoter' THEN 1 ELSE 0 END) AS promoters,\n\t\t\tSUM(CASE WHEN response_type = 'Detractor' THEN 1 ELSE 0 END) AS detractors,\n\t\t\tROUND(SUM(CASE WHEN response_type = 'Promoter' THEN 1 ELSE 0 END) * 100.0 / COUNT(*),2 ) AS percent_promoters,\n\t\t\tROUND(SUM(CASE WHEN response_type = 'Detractor' THEN 1 ELSE 0 END) * 100.0 / COUNT(*),2 ) AS percent_detractors\n\t\tFROM t_classified\n\t\tGROUP BY \n\t\t\t\"Airline\"",
    "cte_name": "t_percentages",
    "file_name": "pd2021w23.sql",
    "file_path": "https://github.com/jorgeluis500/SQL-challenges-and-projects/blob/14f7c28e94c2acf8c3903ba1f2a11078813d2f9e/Preppin%20Data/PD%20-%202021%20Week%2023/pd2021w23.sql",
    "file_size": 2594,
    "num_branches": 2,
    "num_commits": 96,
    "num_prs": 2,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 2,
    "repo_path": "https://github.com/jorgeluis500/SQL-challenges-and-projects",
    "repo_releases": 0,
    "repo_size": 39053,
    "repo_stars": 9,
    "schema": [
      "Airline"
    ],
    "summary": "This SQL code is counting the total responses, the number of promoters and detractors, and calculating the percentage of promoters and detractors for each unique \"Airline\" from the `t_classified` table.",
    "phrase_similarity": 0.35737723112106323,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_AirlineResponseAnalysis`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.2242562472820282,
    "Curated-score": 4,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"t_percentages\" for the CTE is somewhat descriptive as it indicates that the result set contains percentages. However, it does not clearly indicate what specific percentages are being calculated (promoters, detractors, or overall). A more descriptive name could be \"airline_customer_satisfaction_percentages\" or \"airline_response_type_percentages\" to better reflect the purpose of the CTE. I would give it a score of 5, as it is somewhat descriptive but could be more specific.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"t_percentages\" as a score of 6.\n\nThe name \"t_percentages\" is somewhat descriptive, as it mentions the type of data being calculated (percentages), but it does not provide a clear indication of what specific percentages are being calculated (e.g., promoter vs. detractor percentages). Additionally, the name does not mention the \"Airline\" grouping, which is a key aspect of the query. Overall, while the name is not completely vague, it could be more descriptive and accurate to reflect the purpose of the CTE.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"t_percentages\" is very vague and does not clearly reflect the purpose of the CTE. It does not specify what percentages are being calculated or for which categories. A more descriptive name would include the airline and the type of responses being analyzed, such as \"AirlineResponsePercentages\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the name \"t_percentages\" as follows:\n\nScore: 6\n\nThe reason is that this name does not clearly reflect the purpose of the CTE, which appears to be calculating percentages. The name suggests a focus on percentages",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "feluelle/great-data-building",
    "SQL": "select stg_netflix_titles__tv_shows.show_id as netflix_show_id,\n           stg_netflix_titles__tv_shows.title as netflix_title,\n           stg_netflix_titles__tv_shows.directors as netflix_directors,\n           stg_netflix_titles__tv_shows.actors as netflix_actors,\n           stg_netflix_titles__tv_shows.countries as netflix_countries,\n           stg_netflix_titles__tv_shows.date_added as netflix_date_added,\n           stg_netflix_titles__tv_shows.release_year as netflix_release_year,\n           stg_netflix_titles__tv_shows.rating as netflix_rating,\n           stg_netflix_titles__tv_shows.duration as netflix_seasons,\n           stg_netflix_titles__tv_shows.genres as netflix_genres,\n           stg_netflix_titles__tv_shows.description as netflix_description,\n           stg_prime_video_tv_shows.show_number as prime_video_show_number,\n           stg_prime_video_tv_shows.show_name as prime_video_show_name,\n           stg_prime_video_tv_shows.release_year as prime_video_release_year,\n           stg_prime_video_tv_shows.seasons as prime_video_seasons,\n           stg_prime_video_tv_shows.language as prime_video_language,\n           stg_prime_video_tv_shows.genres as prime_video_genres,\n           stg_prime_video_tv_shows.imdb_rating as imdb_rating,\n           stg_prime_video_tv_shows.viewers_age as prime_video_viewers_age\n    from {{ ref('stg_netflix_titles__tv_shows') }}\n    full join {{ ref('stg_prime_video_tv_shows') }}\n    on stg_netflix_titles__tv_shows.uid = stg_prime_video_tv_shows.uid",
    "cte_name": "tv_shows",
    "file_name": "tv_shows.sql",
    "file_path": "https://github.com/feluelle/great-data-building/blob/a2c938a01d28ba9835a85f8e97993a21eae6f4d9/streaming-platforms/models/marts/tv_shows.sql",
    "file_size": 1560,
    "num_branches": 1,
    "num_commits": 13,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Data Modelling with dbt \ud83c\udf89",
    "repo_forks": 0,
    "repo_path": "https://github.com/feluelle/great-data-building",
    "repo_releases": 0,
    "repo_size": 50,
    "repo_stars": 7,
    "schema": [
      "IMDB"
    ],
    "summary": "This SQL code is selecting and renaming columns from two tables, `stg_netflix_titles__tv_shows` and `stg_prime_video_tv_shows`, and performing a full join on them based on the `uid` column. The result is a combined table with columns renamed as `netflix_...` and `prime_video_...`, allowing for comparison of TV shows available on both Netflix and Prime Video.",
    "phrase_similarity": 0.3394530117511749,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_NetflixPrimeVideoTVShows`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.5517067909240723,
    "Curated-score": 8,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"tv_shows\" for the CTE is quite descriptive as it clearly indicates that the result set contains information about television shows. However, since the CTE is joining data from two different sources (Netflix and Prime Video), it might be more accurate to include both platforms in the name to better reflect the purpose of the CTE. A more descriptive name could be \"netflix_prime_video_tv_shows\" or \"combined_tv_shows\". I would give the proposed name a score of 7, as it is descriptive but could be more comprehensive.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"tv_shows\" as a score of 2.\n\nThe name \"tv_shows\" is a placeholder name that doesn't provide any information about the purpose or content of the CTE. It simply describes the type of data being selected, but doesn't give any insight into what the CTE is trying to achieve or what kind of results it will produce. A more descriptive name would be something like \"merged_tv_shows\" or \"combined_netflix_prime_video_shows\" to reflect the fact that it's combining data from two sources.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"tv_shows\" is very generic and does not reflect the specific details or the purpose of the CTE, which includes various attributes from both stg_netflix_titles__tv_shows and stg_prime_video_tv_shows tables. A more descriptive name would include aspects such as the source of the data (e.g., Netflix or Prime Video), the type of data being joined (e.g., TV shows), and possibly some key attributes being selected (e.g., show_id, release_year). Therefore, it receives a low score for comprehensiveness.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the name \"tv_shows\" as a score of 6 out of 10.\n\nThe reason is that while it accurately reflects the purpose of the CTE, it's not very descriptive. The word \"shows\" is quite",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "andrewcrotty/mgbench",
    "SQL": "SELECT dow,\n         hr,\n         device_name,\n         AVG(motions) AS in_use\n  FROM (\n    SELECT dt,\n           dow,\n           hr,\n           device_name,\n           COUNT(*) AS motions\n    FROM (\n      SELECT CAST(log_time AS DATE) AS dt,\n             EXTRACT(DOW FROM log_time) AS dow,\n             EXTRACT(HOUR FROM log_time) AS hr,\n             device_name\n      FROM logs\n      WHERE device_name LIKE 'room%'\n        AND event_type = 'motion_start'\n        AND log_time >= TIMESTAMP '2019-09-01 00:00:00'\n    ) AS r\n    WHERE dow IN (1,2,3,4,5)\n      AND hr BETWEEN 9 AND 16\n    GROUP BY dt,\n             dow,\n             hr,\n             device_name\n  ) AS s\n  GROUP BY dow,\n           hr,\n           device_name",
    "cte_name": "room_use",
    "file_name": "q3.sql",
    "file_path": "https://github.com/andrewcrotty/mgbench/blob/11ba2750372fdcae16338c31fbca1585ac6b46e0/bench3/q3/q3.sql",
    "file_size": 1039,
    "num_branches": 1,
    "num_commits": 126,
    "num_prs": 5,
    "repo_contributors": 4,
    "repo_description": null,
    "repo_forks": 5,
    "repo_path": "https://github.com/andrewcrotty/mgbench",
    "repo_releases": 0,
    "repo_size": 98,
    "repo_stars": 20,
    "schema": [
      "HR"
    ],
    "summary": "This SQL code is calculating the average number of motion events (in_use) per hour for devices with names starting with 'room' between Monday to Friday (9 AM to 4 PM) from September 1, 2019, and aggregating the results by day of the week and device name.",
    "phrase_similarity": 0.16591450572013855,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_InUseMotions_RoomDevices_WeekdayHours`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.32078316807746887,
    "Curated-score": 6,
    "gpt-4o-name-evaluation": "7",
    "gpt-4-turbo-name-evaluation": "7",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"room_use\" for the CTE is somewhat descriptive, but it could be more comprehensive to better reflect the specific operations",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"room_use\" as a score of 6.\n\nThe name \"room_use\" is somewhat descriptive, as it mentions the concept of \"use\" which is related to the average number of motions (i.e., devices being used) per hour and day. However, it does not explicitly convey the fact that the CTE is calculating the average number of devices in use per hour and day, nor does it mention the specific devices being considered (i.e., those with names starting with \"room\"). Therefore, it falls short of being a highly descriptive and accurate name.",
    "Phi-3.5-mini-instruct-name-evaluation": "6\n\nThe name \"room_use\" somewhat reflects the purpose of the CTE, which is to calculate the average number of motions (presumably indicating usage) for rooms on weekdays during working hours. However, it lacks specificity regarding the time frame (2019-09-01), the type of event (motion_start), and the grouping details (dow, hr). A more descriptive name could include these elements, such as \"AverageRoomMotionUsageWeekdays9to16201909\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"room_use\" as follows:\n\nScore: 6\n\nThe reason is that while the name \"room_use\" accurately reflects the purpose of the CTE, it lacks specificity and clarity. The name does not explicitly",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "binbjz/tpcds_pg",
    "SQL": "select w_warehouse_name\n               , w_warehouse_sk\n               , i_item_sk\n               , d_moy\n               , stdev\n               , mean\n               , case mean when 0 then null else stdev / mean end cov\n          from (select w_warehouse_name\n                     , w_warehouse_sk\n                     , i_item_sk\n                     , d_moy\n                     , stddev_samp(inv_quantity_on_hand) stdev\n                     , avg(inv_quantity_on_hand)         mean\n                from inventory\n                   , item\n                   , warehouse\n                   , date_dim\n                where inv_item_sk = i_item_sk\n                  and inv_warehouse_sk = w_warehouse_sk\n                  and inv_date_sk = d_date_sk\n                  and d_year = 2001\n                group by w_warehouse_name, w_warehouse_sk, i_item_sk, d_moy) foo\n          where case mean when 0 then 0 else stdev / mean end > 1",
    "cte_name": "inv",
    "file_name": "query_0.sql",
    "file_path": "https://github.com/binbjz/tpcds_pg/blob/3d9f524686744f4fef01b996214ef7e85c7735c7/tpcds_query/query_0.sql",
    "file_size": 198317,
    "num_branches": 1,
    "num_commits": 32,
    "num_prs": 1,
    "repo_contributors": 1,
    "repo_description": "TPC-DS for PostgreSQL",
    "repo_forks": 0,
    "repo_path": "https://github.com/binbjz/tpcds_pg",
    "repo_releases": 0,
    "repo_size": 29219,
    "repo_stars": 194,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is calculating the coefficient of variation (cov) for the average inventory on hand for each item in each warehouse on a daily basis for the year 2001, and then filtering the results to only include items where the coefficient of variation is greater than 1. The coefficient of variation is calculated as the standard deviation divided by the mean.",
    "phrase_similarity": 0.20467433333396912,
    "Mistral-7B-Instruct-v0.3-cte-name": "'CTE_InventoryVariance'",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.5212271809577942,
    "Curated-score": 4,
    "gpt-4o-name-evaluation": "2",
    "gpt-4-turbo-name-evaluation": "2",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"inv\" is quite vague and does not clearly reflect the purpose of the CTE. It could be short for various things such as inventory, input, or even invalid. Given that the CTE is calculating statistical measures like standard deviation, mean, and coefficient of variation for inventory items in a specific year, a more descriptive name would be more appropriate.\n\nI would give the proposed name a score of 2. A more descriptive name could be something like \"inv_statistics_2001\" or \"inv_yearly_stats_2001\" to better reflect the purpose of the CTE.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"inv\" as a score of 2. The name \"inv\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not reflect what result set the SQL is trying to produce, and it does not provide any hint about the data being processed.",
    "Phi-3.5-mini-instruct-name-evaluation": "2\n\nThe proposed name \"inv\" is highly vague and does not reflect the purpose or the specific calculations being performed in the CTE. It does not indicate what the data represents (e.g., inventory metrics), nor does it mention any of the key columns or calculations (e.g., standard deviation, mean). A more descriptive name would include elements of the calculations and the context, such as \"2001_warehouse_inventory_stats\" or \"inventory_variability_2001\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"inv\" as follows:\n\nThe name \"inv\" is vague and does not clearly reflect the purpose of the CTE. It seems to be an abbreviation for \"inventory\", but it doesn't convey any specific information",
    "qwen2.5-coder-3b-instruct-name-evaluation": "3",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "binbjz/tpcds_pg",
    "SQL": "SELECT d_year\n                        , i_brand_id\n                        , i_class_id\n                        , i_category_id\n                        , i_manufact_id\n                        , SUM(sales_cnt) AS sales_cnt\n                        , SUM(sales_amt) AS sales_amt\n                   FROM (SELECT d_year\n                              , i_brand_id\n                              , i_class_id\n                              , i_category_id\n                              , i_manufact_id\n                              , cs_quantity - COALESCE(cr_return_quantity, 0)        AS sales_cnt\n                              , cs_ext_sales_price - COALESCE(cr_return_amount, 0.0) AS sales_amt\n                         FROM catalog_sales\n                                  JOIN item ON i_item_sk = cs_item_sk\n                                  JOIN date_dim ON d_date_sk = cs_sold_date_sk\n                                  LEFT JOIN catalog_returns ON (cs_order_number = cr_order_number\n                             AND cs_item_sk = cr_item_sk)\n                         WHERE i_category = 'Shoes'\n                         UNION\n                         SELECT d_year\n                              , i_brand_id\n                              , i_class_id\n                              , i_category_id\n                              , i_manufact_id\n                              , ss_quantity - COALESCE(sr_return_quantity, 0)     AS sales_cnt\n                              , ss_ext_sales_price - COALESCE(sr_return_amt, 0.0) AS sales_amt\n                         FROM store_sales\n                                  JOIN item ON i_item_sk = ss_item_sk\n                                  JOIN date_dim ON d_date_sk = ss_sold_date_sk\n                                  LEFT JOIN store_returns ON (ss_ticket_number = sr_ticket_number\n                             AND ss_item_sk = sr_item_sk)\n                         WHERE i_category = 'Shoes'\n                         UNION\n                         SELECT d_year\n                              , i_brand_id\n                              , i_class_id\n                              , i_category_id\n                              , i_manufact_id\n                              , ws_quantity - COALESCE(wr_return_quantity, 0)     AS sales_cnt\n                              , ws_ext_sales_price - COALESCE(wr_return_amt, 0.0) AS sales_amt\n                         FROM web_sales\n                                  JOIN item ON i_item_sk = ws_item_sk\n                                  JOIN date_dim ON d_date_sk = ws_sold_date_sk\n                                  LEFT JOIN web_returns ON (ws_order_number = wr_order_number\n                             AND ws_item_sk = wr_item_sk)\n                         WHERE i_category = 'Shoes') sales_detail\n                   GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id",
    "cte_name": "all_sales",
    "file_name": "query_0.sql",
    "file_path": "https://github.com/binbjz/tpcds_pg/blob/3d9f524686744f4fef01b996214ef7e85c7735c7/tpcds_query/query_0.sql",
    "file_size": 198317,
    "num_branches": 1,
    "num_commits": 32,
    "num_prs": 1,
    "repo_contributors": 1,
    "repo_description": "TPC-DS for PostgreSQL",
    "repo_forks": 0,
    "repo_path": "https://github.com/binbjz/tpcds_pg",
    "repo_releases": 0,
    "repo_size": 29219,
    "repo_stars": 194,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is aggregating the total sales count and total sales amount for the category 'Shoes' from three different sales sources (catalog, store, web) after adjusting for returns, and grouping the results by year, brand, class, category, and manufacturer.",
    "phrase_similarity": 0.49162134528160095,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_SHOES_SALES_DETAIL`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.5099302530288696,
    "Curated-score": 5,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"all_sales\" for the",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"all_sales\" as a score of 2.\n\nThe name \"all_sales\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not describe what type of sales data is being aggregated, nor does it indicate that the data is being filtered by a specific category (\"Shoes\"). A more descriptive name would be something like \"shoes_sales_by_year\" or \"category_sales_summary\", which would provide a clear indication of what the CTE is intended to produce.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"all_sales\" is very generic and does not provide any specific information about what the CTE is calculating or grouping by. It lacks details about the time frame (d_year), product categories (i_category_id), or the type of sales (catalog_sales, store_sales, web_sales). Therefore, it does not accurately reflect the purpose of the CTE, which aggregates sales data across different sales channels and categories for shoes. A more descriptive name would include these elements to better convey the CTE's intent.",
    "llama-3.2-1b-instruct-name-evaluation": "I will evaluate the proposed name \"all_sales\" based on its comprehensiveness.\n\nThe name \"all_sales\" is vague and does not clearly reflect the purpose of the CTE. It seems to be a generic term that could apply to any",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "muratukel/Northwind-Traders-Capstone-Project",
    "SQL": "select \n\tcu.customer_id,\n\tcu.country,\n\tcount(distinct od.order_id) as order_number,\n \tcount(p.product_id) as ordered_total_product_number,\n\tsum(od.quantity) as total_quantity,\n    round(sum(od.unit_price*od.quantity*od.discount)::numeric,2) as total_discount,\n\tround(sum(od.unit_price*od.quantity*(1-od.discount))::numeric,2) as customer_total_spend,\n \tround(avg(o.required_date-o.order_date),0) as customer_average_wanted_days,\n\tround(avg(o.shipped_date-o.order_date),0) as average_delivery_time_in_days,\n\trank() over(partition by cu.country order by sum(od.quantity) desc ) as rank \nfrom customers as cu\n\tleft join orders as o\n\t\ton o.customer_id=cu.customer_id\n\tleft join order_details as od \n\t\ton od.order_id=o.order_id\n\tleft join products as p\n\t\ton p.product_id=od.product_id\nwhere p.discontinued=0\t\t\ngroup by 1,2\norder by 3 desc",
    "cte_name": "customers_analysis",
    "file_name": "sql_capstone_project.sql",
    "file_path": "https://github.com/muratukel/Northwind-Traders-Capstone-Project/blob/7dcdb0191bd4277d3011c555b54449458fdf762f/sql_capstone_project.sql",
    "file_size": 10526,
    "num_branches": 1,
    "num_commits": 65,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/muratukel/Northwind-Traders-Capstone-Project",
    "repo_releases": 0,
    "repo_size": 4531,
    "repo_stars": 3,
    "schema": [
      "Northwind"
    ],
    "summary": "This SQL code is retrieving the customer ID, country, order number, total product number ordered, total quantity, total discount, customer total spend, average wanted days, average delivery time, and a rank based on total quantity for each customer grouped by country, from the customers, orders, order details, and products tables, where the product is not discontinued, and it is sorted in descending order by the number of orders.",
    "phrase_similarity": 0.4233214259147644,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Top_Spending_Customers_By_Country`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.3353704512119293,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "6",
    "gpt-4-turbo-name-evaluation": "7",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"customers_analysis\" for the CTE is descriptive but could be more specific. It suggests that the CTE contains some form of analysis related to customers, but it doesn't clearly indicate the specific metrics or operations performed. A more comprehensive name could be \"top_spending_customers_per_country_analysis\" or \"customer_order_and_product_summary_per_country\" to better reflect the purpose of the CTE. Score: 6.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"customers_analysis\" as a score of 8.\n\nThe name \"customers_analysis\" is descriptive and accurately reflects the purpose of the CTE, which is to analyze customer data. It clearly indicates that the CTE is focused on customers and provides a general idea of what kind of analysis is being performed. However, it is not extremely specific, as it does not mention the specific metrics or calculations being performed.",
    "Phi-3.5-mini-instruct-name-evaluation": "5\n\nThe name \"customers_analysis\" is somewhat generic and does not fully capture the specificity of the data being analyzed in the CTE. It suggests a broad analysis of customer data but does not reflect the detailed metrics being calculated, such as order numbers, total products ordered, total quantity, discounts, total spend, average wanted days, average delivery time, or ranking by country. A more descriptive name would better reflect the specific calculations and groupings present in the query.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"customers_analysis\" as follows:\n\nScore: 6\n\nThe reason is that the name does not clearly reflect the purpose of the CTE, which appears to be analyzing customer data. The name suggests a more general",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "8 \n"
  },
  {
    "Repo": "suinleelab/Useful_Datasets_CSE_527",
    "SQL": "select io.stay_id, io.charttime\n  -- we have joined each row to all rows preceding within 24 hours\n  -- we can now sum these rows to get total UO over the last 24 hours\n  -- we can use case statements to restrict it to only the last 6/12 hours\n  -- therefore we have three sums:\n  -- 1) over a 6 hour period\n  -- 2) over a 12 hour period\n  -- 3) over a 24 hour period\n  -- note that we assume data charted at charttime corresponds to 1 hour of UO\n  -- therefore we use '5' and '11' to restrict the period, rather than 6/12\n  -- this assumption may overestimate UO rate when documentation is done less than hourly\n\n  -- 6 hours\n  , sum(case when iosum.charttime >= DATETIME_SUB(io.charttime, interval '5' hour)\n      then iosum.urineoutput\n    else null end) as UrineOutput_6hr\n  -- 12 hours\n  , sum(case when iosum.charttime >= DATETIME_SUB(io.charttime, interval '11' hour)\n      then iosum.urineoutput\n    else null end) as UrineOutput_12hr\n  -- 24 hours\n  , sum(iosum.urineoutput) as UrineOutput_24hr\n    \n  -- calculate the number of hours over which we've tabulated UO\n  , ROUND(CAST(\n      DATETIME_DIFF(io.charttime, \n        -- below MIN() gets the earliest time that was used in the summation \n        MIN(case when iosum.charttime >= DATETIME_SUB(io.charttime, interval '5' hour)\n          then iosum.charttime\n        else null end),\n        SECOND) AS NUMERIC)/3600.0, 4)\n     AS uo_tm_6hr\n  -- repeat extraction for 12 hours and 24 hours\n  , ROUND(CAST(\n      DATETIME_DIFF(io.charttime,\n        MIN(case when iosum.charttime >= DATETIME_SUB(io.charttime, interval '11' hour)\n          then iosum.charttime\n        else null end),\n        SECOND) AS NUMERIC)/3600.0, 4)\n   AS uo_tm_12hr\n  , ROUND(CAST(\n      DATETIME_DIFF(io.charttime, MIN(iosum.charttime), SECOND)\n   AS NUMERIC)/3600.0, 4) AS uo_tm_24hr\n  from `physionet-data.mimiciv_derived.urine_output` io\n  -- this join gives all UO measurements over the 24 hours preceding this row\n  left join `physionet-data.mimiciv_derived.urine_output` iosum\n    on  io.stay_id = iosum.stay_id\n    and iosum.charttime <= io.charttime\n    and iosum.charttime >= DATETIME_SUB(io.charttime, interval '23' hour)\n  group by io.stay_id, io.charttime",
    "cte_name": "ur_stg",
    "file_name": "kdigo_uo.sql",
    "file_path": "https://github.com/suinleelab/Useful_Datasets_CSE_527/blob/79adcd0657cccdd24df726559d3b7f5e2663bff0/mimic-code/mimic-iv/concepts/organfailure/kdigo_uo.sql",
    "file_size": 3011,
    "num_branches": 1,
    "num_commits": 31,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 3,
    "repo_path": "https://github.com/suinleelab/Useful_Datasets_CSE_527",
    "repo_releases": 0,
    "repo_size": 20766,
    "repo_stars": 4,
    "schema": [
      "HR"
    ],
    "summary": "This SQL code is calculating the total urine output over the last 6, 12, and 24 hours for each row in the `urine_output` table, and also calculating the duration (in hours) over which the urine output was tabulated for each row. It does this by joining each row to all rows preceding within 24 hours, summing the urine output for the last 6, 12, and 24 hours, and using the `DATETIME_DIFF` function to calculate the duration. The results are grouped by `stay_id` and `charttime`.",
    "phrase_similarity": 0.3557683527469635,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_UrineOutputOverTime`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.49809688329696655,
    "Curated-score": 4,
    "gpt-4o-name-evaluation": "2",
    "gpt-4-turbo-name-evaluation": "2",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"ur_stg\" is not very descriptive and does not clearly reflect the purpose of the SQL statement. It seems to be a placeholder name. A more descriptive name could be \"UrineOutputSummaryOverTime\" or \"UrineOutputTabulation\" to indicate that the CTE is summarizing urine output over time. Score: 3.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"ur_stg\" as a score of 2.\n\nThe name \"ur_stg\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not reflect the fact that the CTE is calculating urine output over different time periods, nor does it indicate that it is a summary of urine output data. A more descriptive name would be something like \"UrineOutputSummary\" or \"UO_Timeseries\", which would provide a clear indication of what the CTE is intended to produce.",
    "Phi-3.5-mini-instruct-name-evaluation": "2\n\nThe proposed name \"ur_stg\" is very vague and does not provide any insight into what the CTE is calculating or the context of the data. It lacks descriptive elements that indicate the time frames (6, 12, 24 hours) and the specific metric being summed (urine output). A more descriptive name would include these details to clearly reflect the CTE's purpose.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"ur_stg\" as follows:\n\nScore: 8\n\nReasoning:\n\n* The name is descriptive, but it doesn't clearly indicate what type of data or result set the SQL statement is trying to produce.\n",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "aidanpl/oradba",
    "SQL": "select a OPTIONS, b NAME  from\r\n(\r\nselect 'Active Data Guard' a,  'Active Data Guard - Real-Time Query on Physical Standby' b from dual\r\nunion all \r\nselect 'Advanced Compression', 'HeapCompression' from dual\r\nunion all\r\nselect 'Advanced Compression', 'Backup BZIP2 Compression' from dual\r\nunion all \r\nselect 'Advanced Compression', 'Backup DEFAULT Compression' from dual\r\nunion all \r\nselect 'Advanced Compression', 'Backup HIGH Compression' from dual\r\nunion all\r\nselect 'Advanced Compression', 'Backup LOW Compression' from dual\r\nunion all\r\nselect 'Advanced Compression', 'Backup MEDIUM Compression' from dual\r\nunion all\r\nselect 'Advanced Compression', 'Backup ZLIB, Compression' from dual\r\nunion all\r\nselect 'Advanced Compression', 'SecureFile Compression (user)' from dual\r\nunion all\r\nselect 'Advanced Compression', 'SecureFile Deduplication (user)' from dual\r\nunion all\r\nselect 'Advanced Compression',        'Data Guard' from dual\r\nunion all\r\nselect 'Advanced Compression', 'Oracle Utility Datapump (Export)' from dual\r\nunion all\r\nselect 'Advanced Compression', 'Oracle Utility Datapump (Import)' from dual\r\nunion all\r\nselect 'Advanced Security',\t'ASO native encryption and checksumming' from dual\r\nunion all\r\nselect 'Advanced Security', 'Transparent Data Encryption' from dual\r\nunion all\r\nselect 'Advanced Security', 'Encrypted Tablespaces' from dual\r\nunion all\r\nselect 'Advanced Security', 'Backup Encryption' from dual\r\nunion all\r\nselect 'Advanced Security', 'SecureFile Encryption (user)' from dual\r\nunion all\r\nselect 'Change Management Pack',\t'Change Management Pack (GC)' from dual\r\nunion all\r\nselect 'Data Masking Pack',\t'Data Masking Pack (GC)' from dual\r\nunion all\r\nselect 'Data Mining',\t'Data Mining' from dual\r\nunion all\r\nselect 'Diagnostic Pack',  \t'Diagnostic Pack' from dual\r\nunion all\r\nselect 'Diagnostic Pack',  \t'ADDM' from dual\r\nunion all\r\nselect 'Diagnostic Pack',  \t'AWR Baseline' from dual\r\nunion all\r\nselect 'Diagnostic Pack',  \t'AWR Baseline Template' from dual\r\nunion all\r\nselect 'Diagnostic Pack',  \t'AWR Report' from dual\r\nunion all\r\nselect 'Diagnostic Pack',  \t'Baseline Adaptive Thresholds' from dual\r\nunion all\r\nselect 'Diagnostic Pack',  \t'Baseline Static Computations' from dual\r\nunion all\r\nselect 'Tuning  Pack',  \t'Tuning Pack' from dual\r\nunion all\r\nselect 'Tuning  Pack',  \t'Real-Time SQL Monitoring' from dual\r\nunion all\r\nselect 'Tuning  Pack',  \t'SQL Tuning Advisor' from dual\r\nunion all\r\nselect 'Tuning  Pack',  \t'SQL Access Advisor' from dual\r\nunion all\r\nselect 'Tuning  Pack',  \t'SQL Profile' from dual\r\nunion all\r\nselect 'Tuning  Pack',  \t'Automatic SQL Tuning Advisor' from dual\r\nunion all\r\nselect 'Database Vault',  \t'Oracle Database Vault' from dual\r\nunion all\r\nselect 'WebLogic Server Management Pack Enterprise Edition',  \t'EM AS Provisioning and Patch Automation (GC)' from dual\r\nunion all\r\nselect 'Configuration Management Pack for Oracle Database',  \t'EM Config Management Pack (GC)' from dual\r\nunion all\r\nselect 'Provisioning and Patch Automation Pack for Database',  \t'EM Database Provisioning and Patch Automation (GC)' from dual\r\nunion all\r\nselect 'Provisioning and Patch Automation Pack',  \t'EM Standalone Provisioning and Patch Automation Pack (GC)' from dual\r\nunion all\r\nselect 'Exadata',  \t'Exadata' from dual\r\nunion all\r\nselect 'Label Security',  \t'Label Security' from dual\r\nunion all\r\nselect 'OLAP',  \t'OLAP - Analytic Workspaces' from dual\r\nunion all\r\nselect 'Partitioning',  \t'Partitioning (user)' from dual\r\nunion all\r\nselect 'Real Application Clusters',  \t'Real Application Clusters (RAC)' from dual\r\nunion all\r\nselect 'Real Application Testing',  \t'Database Replay: Workload Capture' from dual\r\nunion all\r\nselect 'Real Application Testing',  \t'Database Replay: Workload Replay' from dual\r\nunion all\r\nselect 'Real Application Testing',  \t'SQL Performance Analyzer' from dual\r\nunion all\r\nselect 'Spatial'\t,'Spatial (Not used because this does not differential usage of spatial over locator, which is free)' from dual\r\nunion all\r\nselect 'Total Recall',\t'Flashback Data Archive' from dual\r\n)",
    "cte_name": "features",
    "file_name": "licence_ck_option_usage.sql",
    "file_path": "https://github.com/aidanpl/oradba/blob/989d29eb04da97e6ddf92a64c484ae4a02e231ab/05_reporting/2_data_dictionary_misc_reports/licence_ck_option_usage.sql",
    "file_size": 9219,
    "num_branches": 1,
    "num_commits": 26,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Oracle DBA creation, maintenance, reporting and troubleshooting scripts",
    "repo_forks": 9,
    "repo_path": "https://github.com/aidanpl/oradba",
    "repo_releases": 0,
    "repo_size": 268,
    "repo_stars": 7,
    "schema": [
      "HR"
    ],
    "summary": "This SQL code is creating a derived table with two columns, 'OPTIONS' and 'NAME'. It lists various options for Oracle Database features such as Advanced Compression, Advanced Security, Change Management Pack, Data Mining, Diagnostic Pack, Tuning Pack, Database Vault, WebLogic Server Management Pack Enterprise Edition, Configuration Management Pack for Oracle Database, Provisioning and Patch Automation Pack for Database, Provisioning and Patch Automation Pack, Exadata, Label Security, OLAP, Partitioning, Real Application Clusters, Real Application Testing, Spatial, and Total Recall. The resulting table can be used for further queries or operations.",
    "phrase_similarity": 0.19663622975349426,
    "Mistral-7B-Instruct-v0.3-cte-name": "'TECH_FEATURES_COMPARISON'",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.18617548048496246,
    "Curated-score": 6,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"features\" for the CTE is not very descriptive as it does not clearly indicate the specific features or functionalities that the CTE represents. A more descriptive name would be beneficial to understand the purpose of the CTE at a glance. I would give a score of 3 for this name. A more descriptive name could be something like \"database_features\" or \"database_functionality\" to better reflect the content of the CTE.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"features\" as a 6 out of 10. The name is somewhat descriptive, as it implies that the CTE is listing various features of Oracle Database. However, it is not very specific or detailed, and it does not convey the exact purpose of the CTE, which appears to be listing a wide range of features and options available in Oracle Database. A more descriptive name that reflects the purpose of the CTE, such as \"Oracle_Database_Features\" or \"Oracle_Product_Features\", would be more comprehensive and accurate.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"features\" is very vague and does not reflect the specific content or purpose of the CTE. It does not indicate what features are being selected or how they relate to the data. A more descriptive name would include key elements from the data being selected, such as \"FeatureUsageSummary\" or \"DatabaseFeatureDetails,\" which would provide a clearer understanding of the CTE's result set.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"features\" as a 6 out of 10.\n\nThe reason is that while it accurately reflects the purpose of the CTE, which is to retrieve information about the features or characteristics of each row in the result",
    "qwen2.5-coder-3b-instruct-name-evaluation": "3",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "yusufokunlola/30daysofSQL",
    "SQL": "SELECT *\n    FROM adventureworks_customers\n\tWHERE AnnualIncome > '$100000' AND totalchildren > 3",
    "cte_name": "highvaluecustomers",
    "file_name": "Day_7_to_12.sql",
    "file_path": "https://github.com/yusufokunlola/30daysofSQL/blob/a09146153a56d2d9c5fe7149d457169941d61e10/Day_7_to_12.sql",
    "file_size": 8492,
    "num_branches": 1,
    "num_commits": 39,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "This is a 30-Day SQL Challenge.",
    "repo_forks": 2,
    "repo_path": "https://github.com/yusufokunlola/30daysofSQL",
    "repo_releases": 0,
    "repo_size": 1131,
    "repo_stars": 7,
    "schema": [
      "AdventureWorks"
    ],
    "summary": "This SQL code is retrieving all columns from the 'adventureworks_customers' table where the 'AnnualIncome' is greater than $100,000 and the 'totalchildren' is more than 3.",
    "phrase_similarity": 0.0359593890607357,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_HighIncome_LargeFamily`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.2615090012550354,
    "Curated-score": 10,
    "gpt-4o-name-evaluation": "7",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"highvaluecustomers\" for the SQL statement is quite descriptive and accurately reflects the purpose of the query. It clearly indicates that the result set contains customers with high annual income. I would give it a score of 9 out of 10. The only reason it's not a perfect 10 is because it doesn't explicitly mention the condition about the number of total children, but that's a minor detail and the name still provides a clear understanding of the query's purpose.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"highvaluecustomers\" as a score of 8.\n\nThe name \"highvaluecustomers\" accurately reflects the purpose of the CTE, which is to select customers with an annual income greater than $100,000 and having more than 3 children. The name clearly indicates that the CTE is focused on high-value customers, which is a descriptive and accurate representation of the result set.",
    "Phi-3.5-mini-instruct-name-evaluation": "7\n\nThe name \"highvaluecustomers\" somewhat reflects the criteria of the CTE (customers with high annual income and more than three children), but it could be more descriptive by including the specific conditions (e.g., \"HighValueCustomers_IncomeOver100000_MoreThan3Children\"). It's not at the top of the scale because it lacks the explicit details of the conditions, but it's not entirely vague either.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"highvaluecustomers\" as follows:\n\nName: highvaluecustomers\nExpected score: 6\n\nThe reason for this low score is that the name does not clearly reflect the purpose of the CTE. The name",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "jeffdev87/letscode",
    "SQL": "SELECT ord.order_id, ord.employee_id, ord.freight,\n\tROUND(SUM(odt.unit_price * odt.quantity * (1 - odt.discount))::NUMERIC, 2) AS valor_sem_frete\n\tFROM orders AS ord INNER JOIN order_details AS odt ON ord.order_id = odt.order_id\n\tGROUP BY ord.order_id",
    "cte_name": "tab_com_valor_pedido",
    "file_name": "gabarito_exes.sql",
    "file_path": "https://github.com/jeffdev87/letscode/blob/47f86babaea21fdfdb14b504221224952f64b7cf/cursos/bancodedados/gabarito/gabarito_exes.sql",
    "file_size": 21234,
    "num_branches": 5,
    "num_commits": 57,
    "num_prs": 1,
    "repo_contributors": 1,
    "repo_description": "Courses and material",
    "repo_forks": 13,
    "repo_path": "https://github.com/jeffdev87/letscode",
    "repo_releases": 0,
    "repo_size": 28360,
    "repo_stars": 11,
    "schema": [
      "Northwind"
    ],
    "summary": "This SQL code is calcululating the total order value excluding freight by summing the product of unit price, quantity, and (1 minus discount) for each order detail, then rounding the result to 2 decimal places, and grouping the results by order ID, joining orders and order details tables on order ID.",
    "phrase_similarity": 0.11478956043720245,
    "Mistral-7B-Instruct-v0.3-cte-name": "`cte_Valor_Sem_Frete`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.21108487248420715,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"tab_com_valor_pedido\" scores a 5. While it does include the words \"order\" (pedido in Portuguese) and \"value\" (valor), it is not very descriptive about the specific calculation being performed (sum of unit price * quantity * (1 - discount)) or the grouping by order_id. A more descriptive name could be \"grouped_order_total_values_after_discount\".",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"tab_com_valor_pedido\" as a score of 4.\n\nThe name is somewhat descriptive, as it mentions the table (tab) and the value (valor) of the order (pedido). However, it is not very specific about what the CTE is trying to calculate, which is the total value of each order without freight. A more descriptive name would be something like \"order_values_without_freight\" which would score higher.",
    "Phi-3.5-mini-instruct-name-evaluation": "7\n\nThe proposed name \"tab_com_valor_pedido\" is somewhat descriptive, indicating a table (tab), combined with a component (com), and the value related to orders (valor_pedido). However, it could be more explicit about the calculation being performed (SUM of unit price, quantity, and discount) and the rounding to two decimal places. A more descriptive name might include these elements, such as \"OrderValueWithoutFreight\", which would better reflect the CTE's purpose. Therefore, a score of 7 is given, as it's somewhat descriptive but not fully comprehensive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"tab_com_valor_pedido\" as follows:\n\nThe name is vague and does not clearly reflect the purpose of the CTE. The word \"com\" suggests a connection or relationship, but it's unclear what this means",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "SQL": "SELECT r.rental_id,\n         r.inventory_id,\n         r.customer_id,\n         r.rental_date,\n         r.return_date\n  FROM rental r\n  WHERE r.return_date IS NULL",
    "cte_name": "no_return",
    "file_name": "251-customer-details-with-overdue-rentals.sql",
    "file_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree/blob/82d89424fbc6b86d9b0e57becef4950988d80d9d/2.%20Introduction%20to%20SQL/Project%20-%20Investigate%20a%20Relational%20Database/251-customer-details-with-overdue-rentals.sql",
    "file_size": 3724,
    "num_branches": 1,
    "num_commits": 415,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Certified Nanodegree",
    "repo_forks": 6,
    "repo_path": "https://github.com/vamshi-krishna-prime/Programming_for_Data_Science_with_Python_Nanodegree",
    "repo_releases": 0,
    "repo_size": 37861,
    "repo_stars": 4,
    "schema": [
      "DVD Rental"
    ],
    "summary": "This SQL code is retrieving the details (rental_id, inventory_id, customer_id, rental_date) of all unreturned rentals from the rental table.",
    "phrase_similarity": 0.2319817990064621,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_OutstandingRentals`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.18262910842895508,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "6",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"no_return\" as a score of 8.\n\nThe name \"no_return\" accurately reflects the purpose of the CTE, which is to select rentals that have not been returned. The name is descriptive and clearly conveys the intent of the query. However, it could be slightly improved by adding more context, such as \"outstanding_rentals\" or \"unreturned_rentals\", which would make the name even more comprehensive and accurate.",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 4\n\nThe name \"no_return\" indicates that the CTE is related to rentals that have not been returned yet, but it lacks specificity about what the data represents (e.g., the count, the list, etc.). A more descriptive name could be \"UnreturnedRentals\" or \"ActiveRentalsWithoutReturn,\" which would provide a clearer understanding of the CTE's purpose. However, since it does convey some meaning, it is not a completely vague name, hence a score of 4.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"no_return\" as a score of 2 out of 10.\n\nThe reason is that this name does not clearly reflect the purpose of the CTE. The name suggests that there are rentals without returns, but",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "manaswikamila05/RSVP-Movies",
    "SQL": "SELECT production_company, sum(total_votes) AS vote_count,\n\tRANK() OVER(ORDER BY SUM(total_votes) DESC) AS prod_comp_rank\nFROM movie AS m\n\tINNER JOIN ratings AS r ON r.movie_id=m.id\nGROUP BY production_company",
    "cte_name": "ranking",
    "file_name": "IMDB+question.sql",
    "file_path": "https://github.com/manaswikamila05/RSVP-Movies/blob/40c82f8a2106f258158a8e8d4de7c27fa973cde7/IMDB%2Bquestion.sql",
    "file_size": 40641,
    "num_branches": 1,
    "num_commits": 8,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "SQL queries performed on IMDb database to provide recommendations to RSVP Movies based on insights.",
    "repo_forks": 9,
    "repo_path": "https://github.com/manaswikamila05/RSVP-Movies",
    "repo_releases": 0,
    "repo_size": 3771,
    "repo_stars": 7,
    "schema": [
      "IMDB"
    ],
    "summary": "This SQL code is calculating the rank of each movie production company based on their total votes received, ordered in descending order, by joining the 'movie' and 'ratings' tables, grouping the results by production company, and summing the total votes for each group.",
    "phrase_similarity": 0.36017540097236633,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Top_Production_Companies`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.3166500926017761,
    "Curated-score": 5,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"ranking\" for the CTE is somewhat descriptive as it suggests that the result set contains ranked data. However, it does not clearly indicate that the",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"ranking\" as a score of 6.\n\nThe name \"ranking\" is somewhat descriptive, as it indicates that the CTE is producing a ranking of some sort. However, it doesn't provide much information about what is being ranked or what the ranking is based on. A more descriptive name might include information about what is being ranked, such as \"production_company_ranking\" or \"movie_production_company_ranking\".",
    "Phi-3.5-mini-instruct-name-evaluation": "4\n\nThe proposed name \"ranking\" is somewhat descriptive as it hints at the ranking aspect of the CTE, but it lacks specificity regarding what is being ranked (e.g., vote counts, production companies). A more descriptive name could include both the ranking and the basis for ranking, such as \"production_company_vote_rankings\". Therefore, it receives a score of 4, indicating it's somewhat descriptive but not fully comprehensive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"ranking\" as a score of 2 out of 10.\n\nThe reason is that the name \"ranking\" is quite vague and doesn't clearly convey what the CTE is trying to produce. The word \"",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "4 \n"
  },
  {
    "Repo": "feluelle/great-data-building",
    "SQL": "select stg_imdb_movies.title_id as imdb_title_id,\n           stg_imdb_movies.title as imdb_title,\n           stg_imdb_movies.release_year as imdb_release_year,\n           stg_imdb_movies.date_published as imdb_date_published,\n           stg_imdb_movies.genres as imdb_genres,\n           stg_imdb_movies.duration_in_minutes as imdb_duration_in_minutes,\n           stg_imdb_movies.countries as imdb_countries,\n           stg_imdb_movies.languages as imdb_languages,\n           stg_imdb_movies.directors as imdb_directors,\n           stg_imdb_movies.writers as imdb_writers,\n           stg_imdb_movies.production_company as imdb_production_company,\n           stg_imdb_movies.actors as imdb_actors,\n           stg_imdb_movies.description as imdb_description,\n           stg_imdb_movies.avg_vote as imdb_avg_vote,\n           stg_imdb_movies.votes as imdb_votes,\n           stg_imdb_movies.budget as imdb_budget,\n           stg_imdb_movies.usa_gross_income as imdb_usa_gross_income,\n           stg_imdb_movies.worldwide_gross_income as imdb_worldwide_gross_income,\n           stg_imdb_movies.metascore as imdb_metascore,\n           stg_imdb_movies.reviews_from_users as imdb_reviews_from_users,\n           stg_imdb_movies.reviews_from_critics as imdb_reviews_from_critics,\n           stg_netflix_titles__movies.show_id as netflix_show_id,\n           stg_netflix_titles__movies.title as netflix_title,\n           stg_netflix_titles__movies.directors as netflix_directors,\n           stg_netflix_titles__movies.actors as netflix_actors,\n           stg_netflix_titles__movies.countries as netflix_countries,\n           stg_netflix_titles__movies.date_added as netflix_date_added,\n           stg_netflix_titles__movies.release_year as netflix_release_year,\n           stg_netflix_titles__movies.rating as netflix_rating,\n           stg_netflix_titles__movies.duration as netflix_duration,\n           stg_netflix_titles__movies.genres as netflix_genres,\n           stg_netflix_titles__movies.description as netflix_description\n    from {{ ref('stg_imdb_movies') }}\n    full join {{ ref('stg_netflix_titles__movies') }}\n    on stg_imdb_movies.uid = stg_netflix_titles__movies.uid",
    "cte_name": "movies",
    "file_name": "movies.sql",
    "file_path": "https://github.com/feluelle/great-data-building/blob/a2c938a01d28ba9835a85f8e97993a21eae6f4d9/streaming-platforms/models/marts/movies.sql",
    "file_size": 2215,
    "num_branches": 1,
    "num_commits": 13,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Data Modelling with dbt \ud83c\udf89",
    "repo_forks": 0,
    "repo_path": "https://github.com/feluelle/great-data-building",
    "repo_releases": 0,
    "repo_size": 50,
    "repo_stars": 7,
    "schema": [
      "IMDB"
    ],
    "summary": "This SQL code is selecting a variety of data from two tables, `stg_imdb_movies` and `stg_netflix_titles__movies`, and joining them based on a common `uid` field. It aliases the columns with prefixes `imdb_` and `netflix_` respectively, and returns a combined result set containing all the selected data from both tables.",
    "phrase_similarity": 0.16086141765117645,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_IMDbNetflixMovieMatch`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.3202286958694458,
    "Curated-score": 8,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "3",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"movies\" as a score of 2. The name \"movies\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not describe what result set the SQL is trying to produce, making it a vague and unrelated name.",
    "Phi-3.5-mini-instruct-name-evaluation": "2\n\nThe proposed name \"movies\" is extremely vague and does not reflect the specific data being selected or the purpose of the CTE. It fails to mention any of the columns, their transformations, or the relationship between the two datasets being joined. A more descriptive name would include key aspects of the data being retrieved and the context of the join, such as \"IMDB_Netflix_Movie_Details\" or \"Combined_IMDB_Netflix_Movie_Attributes\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"movies\" as follows:\n\nName: movies \u2013 Expected score: 6\nReasoning:\nThe name \"movies\" is vague and does not clearly reflect the purpose of the CTE. It simply states that it",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "manaswikamila05/RSVP-Movies",
    "SQL": "SELECT     genre,\n                      Count(m.id)                            AS movie_count ,\n                      Rank() OVER(ORDER BY Count(m.id) DESC) AS genre_rank\n           FROM       movie                                  AS m\n           INNER JOIN genre                                  AS g\n           ON         g.movie_id = m.id\n           INNER JOIN ratings AS r\n           ON         r.movie_id = m.id\n           WHERE      avg_rating > 8\n           GROUP BY   genre limit 3",
    "cte_name": "top_3_genres",
    "file_name": "IMDB+question.sql",
    "file_path": "https://github.com/manaswikamila05/RSVP-Movies/blob/40c82f8a2106f258158a8e8d4de7c27fa973cde7/IMDB%2Bquestion.sql",
    "file_size": 40641,
    "num_branches": 1,
    "num_commits": 8,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "SQL queries performed on IMDb database to provide recommendations to RSVP Movies based on insights.",
    "repo_forks": 9,
    "repo_path": "https://github.com/manaswikamila05/RSVP-Movies",
    "repo_releases": 0,
    "repo_size": 3771,
    "repo_stars": 7,
    "schema": [
      "IMDB"
    ],
    "summary": "This SQL code is counting the number of movies for each genre, ranking the genres based on the number of movies (in descending order), and then selecting the top 3 genres with an average movie rating greater than 8.",
    "phrase_similarity": 0.44988229870796204,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_TopGenresByRating`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.13130685687065125,
    "Curated-score": 10,
    "gpt-4o-name-evaluation": "8",
    "gpt-4-turbo-name-evaluation": "7",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "9",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"top_3_genres\" as a score of 8.\n\nThe name \"top_3_genres\" accurately reflects the purpose of the CTE, which is to retrieve the top 3 genres based on the count of movies in each genre. The name clearly indicates that the CTE is focused on genres and that it returns a limited number of results. However, it does not explicitly state that the results are based on the count of movies, which might make it slightly less descriptive than a name that includes this information.",
    "Phi-3.5-mini-instruct-name-evaluation": "6\n\nThe name \"top_3_genres\" indicates that the CTE is related to genres and that it is focusing on the top 3, but it lacks specificity about what the \"top\" criteria are (e.g., based on movie count or average rating). A more descriptive name could include the ranking metric and the condition that led to the selection, such as \"Top3GenresByMovieCount\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"top_3_genres\" as follows:\n\nScore: 6\n\nThe reason for this score is that the name does not clearly reflect the purpose of the CTE. The CTE appears to be selecting the",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "8 \n"
  },
  {
    "Repo": "binbjz/tpcds_pg",
    "SQL": "select d_week_seq,\n                 ss_store_sk,\n                 sum(case when (d_day_name = 'Sunday') then ss_sales_price else null end)    sun_sales,\n                 sum(case when (d_day_name = 'Monday') then ss_sales_price else null end)    mon_sales,\n                 sum(case when (d_day_name = 'Tuesday') then ss_sales_price else null end)   tue_sales,\n                 sum(case when (d_day_name = 'Wednesday') then ss_sales_price else null end) wed_sales,\n                 sum(case when (d_day_name = 'Thursday') then ss_sales_price else null end)  thu_sales,\n                 sum(case when (d_day_name = 'Friday') then ss_sales_price else null end)    fri_sales,\n                 sum(case when (d_day_name = 'Saturday') then ss_sales_price else null end)  sat_sales\n          from store_sales,\n               date_dim\n          where d_date_sk = ss_sold_date_sk\n          group by d_week_seq, ss_store_sk",
    "cte_name": "wss",
    "file_name": "query_0.sql",
    "file_path": "https://github.com/binbjz/tpcds_pg/blob/3d9f524686744f4fef01b996214ef7e85c7735c7/tpcds_query/query_0.sql",
    "file_size": 198317,
    "num_branches": 1,
    "num_commits": 32,
    "num_prs": 1,
    "repo_contributors": 1,
    "repo_description": "TPC-DS for PostgreSQL",
    "repo_forks": 0,
    "repo_path": "https://github.com/binbjz/tpcds_pg",
    "repo_releases": 0,
    "repo_size": 29219,
    "repo_stars": 194,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is summing the sales price for each day of the week (Sunday through Saturday) for a specific store, grouped by the week sequence and store SK, by joining the 'store_sales' and 'date_dim' tables on the sold date key, and only considering rows where the date key matches in both tables.",
    "phrase_similarity": 0.05269433557987213,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_DailySalesByDayAndStore`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.382260799407959,
    "Curated-score": 2,
    "gpt-4o-name-evaluation": "2",
    "gpt-4-turbo-name-evaluation": "2",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"wss\" is not descriptive enough to reflect the purpose of the CTE. It does not provide any indication about the data being selected, grouped, or calculated. A more descriptive name could be \"daily_store_sales_by_day_of_week\" or \"weekly_store_sales_by_day\" which would score around 9 or 10.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"wss\" as a score of 2. The name \"wss\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not reflect the fact that the CTE is aggregating sales data by week and store, nor does it indicate that it is calculating sales by day of the week. A more descriptive name would be something like \"weekly_store_sales_by_day\" or \"daily_sales_by_store_and_week\", which would score much higher.",
    "Phi-3.5-mini-instruct-name-evaluation": "2\n\nThe proposed name \"wss\" is highly vague and does not provide any information about what the CTE is calculating or grouping by. It lacks descriptive elements that would indicate the CTE's purpose, which is to sum sales prices by day of the week and store SK. A more descriptive name would include references to the days of the week, the sales price, and the store SK, such as \"WeeklySalesByStoreSK\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"wss\" as follows:\n\nScore: 2\n\nThe reason is that the name \"wss\" does not clearly reflect the purpose of the CTE. The name only mentions \"sales\" and \"week",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "jorgeluis500/SQL-challenges-and-projects",
    "SQL": "SELECT \n\t\t\t*, \n\t\t\tCOUNT(*) OVER(PARTITION BY \"Airline\") AS cust_per_airline\n\t\tFROM t_unioned",
    "cte_name": "num_cust",
    "file_name": "pd2021w23.sql",
    "file_path": "https://github.com/jorgeluis500/SQL-challenges-and-projects/blob/14f7c28e94c2acf8c3903ba1f2a11078813d2f9e/Preppin%20Data/PD%20-%202021%20Week%2023/pd2021w23.sql",
    "file_size": 2594,
    "num_branches": 2,
    "num_commits": 96,
    "num_prs": 2,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 2,
    "repo_path": "https://github.com/jorgeluis500/SQL-challenges-and-projects",
    "repo_releases": 0,
    "repo_size": 39053,
    "repo_stars": 9,
    "schema": [
      "Airline"
    ],
    "summary": "This SQL code is counting the number of unique customers for each airline by selecting all columns from the table \"t_unioned\" and using the window function COUNT(*) OVER(PARTITION BY \"Airline\") to group the count by the \"Airline\" column.",
    "phrase_similarity": 0.11847998201847076,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_CUSTOMERS_PER_AIRLINE`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.48664066195487976,
    "Curated-score": 6,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"num_cust\" for the CTE is not very descriptive. It only indicates that the result set contains some kind of numerical data related to customers, but it does not clearly convey that the count of customers per airline is being returned. A more descriptive name could be \"cust_count_per_air",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"num_cust\" as a score of 2.\n\nThe name \"num_cust\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not reflect the fact that the CTE is counting the number of customers per airline, which is the main purpose of the query. Therefore, it is a vague and unrelated name that does not accurately describe the CTE's purpose.",
    "Phi-3.5-mini-instruct-name-evaluation": "4\n\nThe name \"num_cust\" is somewhat descriptive, indicating a count of customers, but it lacks specificity about what is being counted (e.g., per airline) and does not reflect the use of the OVER clause with PARTITION BY. A more descriptive name could be \"cust_count_per_airline\" to better convey the purpose of the CTE.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"num_cust\" as follows:\n\nThe name is vague and does not clearly reflect the purpose of the CTE. It simply assigns a numerical value to each row in the result set, without any indication of what that",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "dpavancini/analytics-engineering",
    "SQL": "select\n    row_number() over (order by customer_id) as sk_cliente, --chave auto-incremental\n    customer_id as id_cliente,\n    contact_name as nome_contato,\n    contact_title as cargo,\n    phone as telefone,\n    company_name as nome_empresa,\n    city as cidade,\n    region as regiao,\n    country as pais,\n    postal_code as cep,\n    address as endereco\n    from {{ source('northwind_erp', 'customers' )}}",
    "cte_name": "dados_fonte",
    "file_name": "stg_customers.sql",
    "file_path": "https://github.com/dpavancini/analytics-engineering/blob/1f77a1c0091d0f826f5353dd4009ff91ea3e29cf/dbt_northwind_2021_05/models/staging/stg_customers.sql",
    "file_size": 460,
    "num_branches": 1,
    "num_commits": 20,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Material do Livro Analytics Engineering",
    "repo_forks": 22,
    "repo_path": "https://github.com/dpavancini/analytics-engineering",
    "repo_releases": 0,
    "repo_size": 20706,
    "repo_stars": 4,
    "schema": [
      "Northwind"
    ],
    "summary": "This SQL code is selecting and numbering (using row_number()) the records from the 'customers' table in the 'northwind_erp' database, and retrieving columns such as customer_id, contact_name, phone, company_name, city, region, country, postal_code, and address. The result is a table with auto-incremental row numbers and customer data, ordered by customer_id.",
    "phrase_similarity": 0.009894714690744877,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Northwind_Clientes`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.312775194644928,
    "Curated-score": 1,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"dados_fonte\" translates to \"source data\" in English. While it does indicate that the CTE contains data, it does not clearly reflect the specific data being retrieved or the purpose of the CTE. A more descriptive name could be \"customer_data_source\" or \"customer_details_source\", which would better reflect the content of the CTE. I would give the proposed name a score of 4 out of 10.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"dados_fonte\" as a score of 2.\n\nThe name \"dados_fonte\" is a placeholder name that doesn't provide any information about the purpose or content of the CTE. It simply means \"source data\" in Portuguese, which is not descriptive or accurate for the CTE's purpose.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe name \"dados_fonte\" indicates that the CTE is related to source data but does not specify what kind of data, from which source, or what the data represents. A more descriptive name could include the table name or the specific data points being retrieved, which would provide a clearer understanding of the CTE's purpose. For example, \"customers_details_cte\" would be more informative.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"dados_fonte\" as follows:\n\nScore: 6\n\nReasoning:\n\n* The name does not clearly indicate what type of data is being stored or retrieved.\n* It lacks specificity about the columns that are included",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "jramosss/CS-FaMAF",
    "SQL": "SELECT p.customerNumber AS cn ,COUNT(*) AS c FROM payments p \n        WHERE YEAR (p.paymentDate) = y AND MONTH(p.paymentDate) = m\n        GROUP BY p.customerNumber",
    "cte_name": "payments_from_month",
    "file_name": "practico6.sql",
    "file_path": "https://github.com/jramosss/CS-FaMAF/blob/65eb8b315520e12ce1427117639a0c34799bfed8/3/dbs/labs/Scripts/sql/practico6.sql",
    "file_size": 4766,
    "num_branches": 1,
    "num_commits": 4,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Archivos de la carrera Cs de la computacion - FaMAF UNC",
    "repo_forks": 1,
    "repo_path": "https://github.com/jramosss/CS-FaMAF",
    "repo_releases": 0,
    "repo_size": 594503,
    "repo_stars": 3,
    "schema": [
      "ClassicModels"
    ],
    "summary": "This SQL code is counting the number of payments made by each customer in a specific year and month (specified by 'y' and 'm'). The results are grouped by customer number and each customer's count is labeled as 'c'.",
    "phrase_similarity": 0.463306188583374,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_YEAR_MONTH_PAYMENT_COUNT_BY_CUSTOMER`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.5963760018348694,
    "Curated-score": 8,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "6",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "7. The name \"payments_from_month\" is descriptive and provides a general idea of the result set, but it could be more specific. A more comprehensive name might be \"monthly_customer_payment_counts\" or \"payments_by_customer_and_month\", which would more clearly indicate the relationship between the customer, the payment, and the specific month. However, the given name is still better than vague or unrelated names like \"tmp\" or \"cte1\". So, I would score it as a 7.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"payments_from_month\" as a score of 8.\n\nThe name \"payments_from_month\" is descriptive and accurately reflects the purpose of the CTE, which is to group payments by customer and filter them by a specific month and year. The name clearly indicates that the CTE is related to payments and the time period being considered. However, it could be slightly more specific and descriptive, such as \"monthly_payments_by_customer\", which would score a 9 or 10. Nevertheless, \"payments_from_month\" is a clear and concise name that effectively conveys the purpose of the CTE.",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 4\n\nThe proposed name \"payments_from_month\" is somewhat descriptive, indicating that the CTE is related to payments from a specific month. However, it lacks specificity regarding which year or which month, and it does not clearly reflect the aggregation or grouping aspect of the query. A more descriptive name could include the year and month, as well as the aggregation function, such as \"monthly_payments_count_2023_march\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"payments_from_month\" as follows:\n\nName: payments_from_month\nExpected score: 6\n\nReasoning:\nThe name suggests that the CTE is related to payment data, but it doesn't explicitly mention the",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "oleksiivorobiov/oracle_oci_examples",
    "SQL": "SELECT cust_id\n  FROM mining_data_apply_v\n WHERE country_name = 'Italy'\nORDER BY PREDICTION_COST(DT_SH_Clas_sample, 1 COST MODEL USING *) ASC, 1",
    "cte_name": "cust_italy",
    "file_name": "dmdtdemo.sql",
    "file_path": "https://github.com/oleksiivorobiov/oracle_oci_examples/blob/f5342514be51ef6242b31fccf7bbccb33bb432b8/dmdtdemo.sql",
    "file_size": 11504,
    "num_branches": 1,
    "num_commits": 1,
    "num_prs": 0,
    "repo_contributors": 0,
    "repo_description": null,
    "repo_forks": 22,
    "repo_path": "https://github.com/oleksiivorobiov/oracle_oci_examples",
    "repo_releases": 0,
    "repo_size": 1012,
    "repo_stars": 28,
    "schema": [
      "HR"
    ],
    "summary": "This SQL code is retrieving the customer IDs from the `mining_data_apply_v` table where the `country_name` is 'Italy', and then sorting the results in ascending order by the predicted cost calculated using the `PREDICTION_COST` function for each customer, based on the cost model specified.",
    "phrase_similarity": 0.3135407269001007,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_ITALY_PREDICTED_CUST_ID`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.4776407778263092,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "5",
    "gpt-4-turbo-name-evaluation": "6",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"cust_italy\" for the SQL statement is quite descriptive and accurately reflects the CTE's purpose, which is to select customer IDs from the mining_data_apply_v table where the country_name is 'Italy'. I would give it a score of 9 out of 10. The only reason it's not a perfect 10 is because it doesn't explicitly mention the ORDER BY clause, but the inclusion of 'cust' suggests that it's related to customers, and 'italy' clearly indicates the country filter.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"cust_italy\" as a score of 6.\n\nThe name \"cust_italy\" is descriptive and indicates that the CTE is related to customers from Italy. However, it does not fully convey the purpose of the CTE, which is to filter customers from Italy based on a specific condition (prediction cost). The name does not provide any information about the filtering condition or the ordering of the results. Therefore, it is not a highly descriptive name, but it is still better than a placeholder name.",
    "Phi-3.5-mini-instruct-name-evaluation": "6\n\nThe name \"cust_italy\" somewhat reflects the purpose of the CTE, indicating that it filters customers from Italy. However, it lacks detail about the sorting criteria (ORDER BY PREDICTION_COST) and the context of the data being used (DT_SH_Clas_sample, 1 COST MODEL USING *). A more descriptive name could include these elements, such as \"ItalyCustomerPredictionCosts\", which would score closer to 10.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"cust_italy\" as follows:\n\nScore: 6\n\nThe reason is that the name does not clearly reflect the purpose of the CTE. The word \"cust\" suggests customer information, but it's",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "manaswikamila05/RSVP-Movies",
    "SQL": "SELECT DISTINCT title,\n                         avg_rating\n         FROM   movie AS M\n                INNER JOIN ratings AS R\n                        ON R.movie_id = M.id\n                INNER JOIN genre AS G using(movie_id)\n         WHERE  genre LIKE 'THRILLER'",
    "cte_name": "thriller_movies",
    "file_name": "IMDB+question.sql",
    "file_path": "https://github.com/manaswikamila05/RSVP-Movies/blob/40c82f8a2106f258158a8e8d4de7c27fa973cde7/IMDB%2Bquestion.sql",
    "file_size": 40641,
    "num_branches": 1,
    "num_commits": 8,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "SQL queries performed on IMDb database to provide recommendations to RSVP Movies based on insights.",
    "repo_forks": 9,
    "repo_path": "https://github.com/manaswikamila05/RSVP-Movies",
    "repo_releases": 0,
    "repo_size": 3771,
    "repo_stars": 7,
    "schema": [
      "IMDB"
    ],
    "summary": "This SQL code is retrieving the distinct movie titles and their average rating from the 'movie' table, joined with the 'ratings' and 'genre' tables, where the genre of the movie is 'THRILLER'. The result set includes only movies that belong to the 'THRILLER' genre and their respective average ratings.",
    "phrase_similarity": 0.5694253444671631,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_ThrillerMoviesAverageRating`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.4413728713989258,
    "Curated-score": 6,
    "gpt-4o-name-evaluation": "7",
    "gpt-4-turbo-name-evaluation": "7",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"thriller_movies\" for the SQL statement is quite descriptive and accurately reflects the purpose of the CTE. It clearly indicates that the result set contains movies of the thriller genre. I would give it a score of 9 out of 10. A score of 10 would be reserved for names that also include the specific operations performed on the",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"thriller_movies\" as a score of 9. The name accurately reflects the purpose of the CTE, which is to retrieve a list of thriller movies along with their average ratings. The name is descriptive, concise, and clearly conveys the intent of the query.",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 7\n\nThe name \"thriller_movies\" indicates that the CTE is related to movies within the thriller genre, which is somewhat descriptive. However, it doesn't convey the specific calculation or aggregation (e.g., average rating) being performed. A more descriptive name could include the average rating aspect, such as \"average_thriller_movie_rating\". The score of 7 reflects that the name is somewhat descriptive but leaves out key details about the data being aggregated.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"thriller_movies\" as follows:\n\nName: thriller_movies\nExpected score: 8\n\nThe reason for this low score is that the name does not clearly reflect the purpose of the CTE. The CTE",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "thirstler/benchgo",
    "SQL": "SELECT d_year\n       ,i_brand_id\n       ,i_class_id\n       ,i_category_id\n       ,i_manufact_id\n       ,SUM(sales_cnt) AS sales_cnt\n       ,SUM(sales_amt) AS sales_amt\n FROM (SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt\n             ,cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt\n       FROM catalog_sales JOIN item ON i_item_sk=cs_item_sk\n                          JOIN date_dim ON d_date_sk=cs_sold_date_sk\n                          LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number \n                                                    AND cs_item_sk=cr_item_sk)\n       WHERE i_category='Home'\n       UNION\n       SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt\n             ,ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt\n       FROM store_sales JOIN item ON i_item_sk=ss_item_sk\n                        JOIN date_dim ON d_date_sk=ss_sold_date_sk\n                        LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number \n                                                AND ss_item_sk=sr_item_sk)\n       WHERE i_category='Home'\n       UNION\n       SELECT d_year\n             ,i_brand_id\n             ,i_class_id\n             ,i_category_id\n             ,i_manufact_id\n             ,ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt\n             ,ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt\n       FROM web_sales JOIN item ON i_item_sk=ws_item_sk\n                      JOIN date_dim ON d_date_sk=ws_sold_date_sk\n                      LEFT JOIN web_returns ON (ws_order_number=wr_order_number \n                                            AND ws_item_sk=wr_item_sk)\n       WHERE i_category='Home') sales_detail\n GROUP BY d_year, i_brand_id, i_class_id, i_category_id, i_manufact_id",
    "cte_name": "all_sales",
    "file_name": "query_1.sql",
    "file_path": "https://github.com/thirstler/benchgo/blob/54953f12db88b1a7a67afdd9dff20767fae78e73/src/benchgo/queries/tpcds/sf10/2/query_1.sql",
    "file_size": 160585,
    "num_branches": 3,
    "num_commits": 24,
    "num_prs": 3,
    "repo_contributors": 1,
    "repo_description": "Control scripts for running db benchmarks",
    "repo_forks": 0,
    "repo_path": "https://github.com/thirstler/benchgo",
    "repo_releases": 1,
    "repo_size": 2859,
    "repo_stars": 0,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is aggregating the total sales count and total sales amount for the 'Home' category from three different sources (catalog sales, store sales, and web sales), adjusting for returns, and grouping the results by year, brand ID, class ID, category ID, and manufacturer ID.",
    "phrase_similarity": 0.4974015951156616,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_HomeSalesDetail`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.2171509712934494,
    "Curated-score": 5,
    "gpt-4o-name-evaluation": "5",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"all_sales\" for the CTE is somewhat descriptive as it suggests that the result set contains sales data. However, it does not specify the source (catalog, store, web) or the category (Home) of the sales, nor does it indicate that the sales data has been adjusted for returns. Therefore, I would give it a score of 5. A more descriptive name could be \"home_category_sales_detail_after_returns_adjustment\".",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"all_sales\" as a score of 2.\n\nThe name \"all_sales\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not describe what type of sales data is being aggregated, nor does it indicate that the data is being grouped by various item and date dimensions. A more descriptive name would be something like \"home_category_sales_by_item_and_date\" to reflect the specific data being processed.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"all_sales\" is very generic and does not provide specific details about what the CTE is calculating or grouping by. It lacks information about the time frame (d_year), product categories (Home), or the type of sales (sales_cnt, sales_amt). Therefore, it does not accurately reflect the purpose of the CTE, which is to aggregate sales data by year, brand, class, category, and manufacturer for the 'Home' category. A more descriptive name would include these elements to better convey the CTE's intent.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"all_sales\" as follows:\n\nScore: 6\n\nThe reason is that the name does not clearly reflect the purpose of the CTE, which appears to be calculating sales details for a specific category (\"Home\").",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "Arpita-deb/netflix-movies-and-tv-shows",
    "SQL": "SELECT title, imdb_score, \r\nCASE \r\n\tWHEN imdb_score >= 1.0 AND  imdb_score <2.0 THEN 'Do Not Want'\r\n\tWHEN imdb_score >= 2.0 AND  imdb_score <3.0 THEN 'Awful'\r\n\tWHEN imdb_score >= 3.0 AND  imdb_score < 4.0 THEN 'Bad'\r\n\tWHEN imdb_score >= 4.0 AND  imdb_score <5.0 THEN 'Nice Try, But No Cigar'\r\n\tWHEN imdb_score >= 5.0 AND  imdb_score < 6.0 THEN 'Meh'\r\n\tWHEN imdb_score >= 6.0 AND  imdb_score < 7.0 THEN 'Not Bad'\r\n\tWHEN imdb_score >= 7.0 AND  imdb_score < 8.0 THEN 'Good'\r\n\tWHEN imdb_score >= 8.0 AND  imdb_score < 9.0 THEN 'Very Good'\r\n\tWHEN imdb_score >= 9.0 AND  imdb_score <= 10.0 THEN 'Excellent'\r\n\tWHEN imdb_score = 10.0 THEN 'Masterpiece'\r\nEND rating\r\nFROM show",
    "cte_name": "rating",
    "file_name": "NETFLIX_DATA_ANALYSIS.sql",
    "file_path": "https://github.com/Arpita-deb/netflix-movies-and-tv-shows/blob/a9eef07ec3aae1599d2226ff55dc57b841b6a87e/Codes/NETFLIX_DATA_ANALYSIS.sql",
    "file_size": 11862,
    "num_branches": 1,
    "num_commits": 46,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Exploratory Data Analysis of the Netflix data in SQL",
    "repo_forks": 1,
    "repo_path": "https://github.com/Arpita-deb/netflix-movies-and-tv-shows",
    "repo_releases": 0,
    "repo_size": 4273,
    "repo_stars": 0,
    "schema": [
      "IMDB"
    ],
    "summary": "This SQL code is creating a new column named 'rating' in the 'show' table, which assigns a movie rating (from 'Do Not Want' to 'Masterpiece') based on the IMDb score of each movie.",
    "phrase_similarity": 0.479996919631958,
    "Mistral-7B-Instruct-v0.3-cte-name": "'CTE_MovieRating'",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.39925190806388855,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "7",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"rating\" for the CTE is quite descriptive as it reflects the calculation being performed, which is assigning a rating to each movie based on the IMDB score. However, it could be more specific to help understand the range of ratings that the CTE produces. A more comprehensive name could be \"imdb_rating_categories\" or \"imdb_rating_classification\", which would score around 8 or 9. But considering the brevity and common usage of the term \"rating\", I would still give it a score of 7.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"rating\" as a score of 2.\n\nThe name \"rating\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not describe what the CTE is trying to achieve or what kind of data it is producing. A more descriptive name, such as \"movie_ratings\" or \"imdb_classification\", would be more accurate and helpful.",
    "Phi-3.5-mini-instruct-name-evaluation": "7\n\nThe name \"rating\" is somewhat descriptive as it indicates the result of a classification based on the `imdb_score`. However, it doesn't fully convey the logic or the range of categories used for the classification. A more descriptive name could include the range of scores or the classification criteria, which would provide a clearer understanding of the CTE's purpose. Therefore, a score of 7 is given, indicating that the name is somewhat descriptive but could be improved for clarity.",
    "llama-3.2-1b-instruct-name-evaluation": "I'd be happy to help you evaluate the comprehensiveness of the proposed name \"rating\" for the SQL statement.\n\nAfter analyzing the CTE, I would give the following score:\n\n9/10\n\nHere's why:\n\n* The name \"",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "9 \n"
  },
  {
    "Repo": "ahmad-khatib0/databases",
    "SQL": "SELECT u.id, SUM(r.revenue) AS sumRevenue FROM rides r \n  JOIN \"users\" u ON (r.rider_id = u.id) GROUP BY u.id",
    "cte_name": "riderRevenue",
    "file_name": "joins.sql",
    "file_path": "https://github.com/ahmad-khatib0/databases/blob/9e8a63b27d1fc164f25e4c0504da275d4e7ae7c6/distributed-db/cockroachdb/ch04-sql/joins.sql",
    "file_size": 5710,
    "num_branches": 1,
    "num_commits": 70,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/ahmad-khatib0/databases",
    "repo_releases": 0,
    "repo_size": 9820,
    "repo_stars": 0,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is retrieving the ID of each user and the total revenue they have generated from rides. It does this by joining the rides table with the users table on the rider_id and id fields respectively, then summing the revenue for each user grouped by their ID.",
    "phrase_similarity": 0.4046124815940857,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_RiderRevenueByID`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.42467084527015686,
    "Curated-score": 8,
    "gpt-4o-name-evaluation": "7",
    "gpt-4-turbo-name-evaluation": "8",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"riderRevenue\" for the CTE is quite descriptive and accurately reflects the purpose of the CTE, which is to calculate the total revenue for each rider. I would give it a score of 9 out of 10. The only reason it's not a perfect 10 is because it doesn't explicitly mention the joining of the \"rides\" and \"users\" tables, but that information can be inferred from the context.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"riderRevenue\" as a score of 9. The name accurately reflects the purpose of the CTE, which is to calculate the total revenue for each rider. The name is descriptive, concise, and clearly indicates what the CTE is trying to achieve.",
    "Phi-3.5-mini-instruct-name-evaluation": "7\n\nThe name \"riderRevenue\" is somewhat descriptive, indicating that it involves revenue related to riders. However, it could be more informative by specifying that it's a sum of revenues per user or rider. Therefore, it's not a perfect score but still above average in terms of comprehensiveness.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"riderRevenue\" as follows:\n\nName: riderRevenue\nExpected score: 6\n\nThe reason for this low score is that the name does not clearly reflect the purpose of the CTE. The name suggests",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "ben-elvin/intermediate_sql",
    "SQL": "SELECT \n        CustomerId, \n        InvoiceDate, \n        LAG(InvoiceDate) OVER (PARTITION BY CustomerId ORDER BY InvoiceDate) AS PreviousInvoiceDate\n    FROM \n        Invoice",
    "cte_name": "PurchaseDates",
    "file_name": "4_sql_window_functions_solutions.sql",
    "file_path": "https://github.com/ben-elvin/intermediate_sql/blob/e3e4c39a9c12ac6abd6d2b6a95f9cb8b5637e2f5/3_solutions/4_sql_window_functions_solutions.sql",
    "file_size": 6770,
    "num_branches": 1,
    "num_commits": 18,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/ben-elvin/intermediate_sql",
    "repo_releases": 0,
    "repo_size": 284,
    "repo_stars": 0,
    "schema": [
      "Chinook"
    ],
    "summary": "This SQL code is retrieving the CustomerId, InvoiceDate, and the date of the previous invoice for each customer, ordered by InvoiceDate, within each customer's invoices.",
    "phrase_similarity": 0.2504566013813019,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_CustomerInvoiceHistory`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.43504780530929565,
    "Curated-score": 6,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"PurchaseDates\" for the CTE is quite descriptive and accurately reflects the purpose of the CTE, which is to retrieve the invoice dates for each customer. However, it could be more specific by including the \"CustomerId\" to make it clear that the dates are associated with individual customers. So, I would give it a score of 8 out of 10. A more specific name could be \"CustomerPurchaseDates\" or \"IndividualCustomerInvoiceDates\".",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"PurchaseDates\" as a score of 8.\n\nThe name \"PurchaseDates\" is descriptive and accurately reflects the purpose of the CTE, which is to provide the invoice dates for each customer, along with the previous invoice date for each customer. The name is clear and concise, making it easy to understand what the CTE is intended to produce. However, it could be slightly more specific, such as \"CustomerInvoiceDates\" or \"PreviousInvoiceDates\", which would earn a higher score. Nevertheless, \"PurchaseDates\" is a good name that effectively conveys the purpose of the CTE.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe name \"PurchaseDates\" is somewhat descriptive, indicating that it involves dates related to purchases. However, it lacks specificity about the context (e.g., it doesn't mention that it's comparing dates within customer records or that it's using a window function like LAG). A more descriptive name could be \"CustomerInvoiceDateComparisons\" or \"CustomerPreviousInvoiceDates,\" which would better reflect the purpose of the CTE. Therefore, a score of 3 is given, as it's somewhat descriptive but not fully comprehensive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"PurchaseDates\" as follows:\n\nScore: 6\n\nThe reason is that the name does not clearly reflect the purpose of the CTE, which is to retrieve the dates of all purchases made by each customer.",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "4 \n"
  },
  {
    "Repo": "SergeiGorshenin/otus-mssql-sgorshenin",
    "SQL": "select distinct\n\t\tEOMONTH(Invoices.InvoiceDate) as InvoiceDate,\n\t\tInvoiceLines.Description, \n\t\tInvoiceLines.Quantity,\n\t\trow_number() over (partition by EOMONTH(Invoices.InvoiceDate) order by InvoiceLines.Quantity desc) rn\n\tFROM Sales.Invoices as Invoices\n\tINNER JOIN Sales.InvoiceLines as InvoiceLines\n\ton Invoices.InvoiceID = InvoiceLines.InvoiceID\n\tWHERE Invoices.InvoiceDate between '20160101' and '20161231'",
    "cte_name": "for_top_invoices",
    "file_name": "HW_05.sql",
    "file_path": "https://github.com/SergeiGorshenin/otus-mssql-sgorshenin/blob/526729436e5be87df18ff9d0d9ef7061f4cbe308/HW05%20-%20window/HW_05.sql",
    "file_size": 7335,
    "num_branches": 1,
    "num_commits": 28,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/SergeiGorshenin/otus-mssql-sgorshenin",
    "repo_releases": 0,
    "repo_size": 345,
    "repo_stars": 0,
    "schema": [
      "WideWorldImporters"
    ],
    "summary": "This SQL code is selecting the distinct end-of-month dates from Invoices between January 1st, 2016 and December 31st, 2016, along with the description, quantity, and a row number ordered by quantity in descending order for each end-of-month date, by joining the Invoices and InvoiceLines tables on InvoiceID.",
    "phrase_similarity": 0.37247657775878906,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_TopQuantityPerMonth_2016`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.24477235972881317,
    "Curated-score": 6,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"for_top_invoices\" for the given SQL statement is somewhat descriptive, but it could be more specific. The CTE is calculating the top quantities for each month, so a more comprehensive name could be \"top_quantities_per_month\". I would give it a score of 6.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"for_top_invoices\" as a score of 6.\n\nThe name is somewhat descriptive, as it mentions \"top\" invoices, which is related to the row_number() function used in the query. However, it does not fully convey the purpose of the CTE, which is to extract distinct invoice dates, invoice descriptions, quantities, and a ranking of invoices by quantity for each month. The name does not mention the partitioning by month, which is an important aspect of the query.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"for_top_invoices\" is somewhat indicative of the CTE's purpose, which seems to be related to identifying top invoices based on quantity. However, it lacks specificity about what \"top\" means (e.g., top by quantity, top by date, etc.) and does not mention the distinct invoice dates or the ordering mechanism. A more descriptive name could clarify these aspects, such as \"TopInvoicesByQuantityPerMonth2016\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"for_top_invoices\" as follows:\n\nScore: 6\n\nThe reason is that this name does not clearly reflect the purpose of the CTE. The name suggests that it will be used to find top invoices",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "hannes/peg-parser-experiments",
    "SQL": "SELECT d_year ,\n           i_brand_id ,\n           i_class_id ,\n           i_category_id ,\n           i_manufact_id ,\n           SUM(sales_cnt) AS sales_cnt ,\n           SUM(sales_amt) AS sales_amt\n   FROM\n     (SELECT d_year ,\n             i_brand_id ,\n             i_class_id ,\n             i_category_id ,\n             i_manufact_id ,\n             cs_quantity - COALESCE(cr_return_quantity,0) AS sales_cnt ,\n             cs_ext_sales_price - COALESCE(cr_return_amount,0.0) AS sales_amt\n      FROM catalog_sales\n      JOIN item ON i_item_sk=cs_item_sk\n      JOIN date_dim ON d_date_sk=cs_sold_date_sk\n      LEFT JOIN catalog_returns ON (cs_order_number=cr_order_number\n                                    AND cs_item_sk=cr_item_sk)\n      WHERE i_category='Books'\n      UNION SELECT d_year ,\n                   i_brand_id ,\n                   i_class_id ,\n                   i_category_id ,\n                   i_manufact_id ,\n                   ss_quantity - COALESCE(sr_return_quantity,0) AS sales_cnt ,\n                   ss_ext_sales_price - COALESCE(sr_return_amt,0.0) AS sales_amt\n      FROM store_sales\n      JOIN item ON i_item_sk=ss_item_sk\n      JOIN date_dim ON d_date_sk=ss_sold_date_sk\n      LEFT JOIN store_returns ON (ss_ticket_number=sr_ticket_number\n                                  AND ss_item_sk=sr_item_sk)\n      WHERE i_category='Books'\n      UNION SELECT d_year ,\n                   i_brand_id ,\n                   i_class_id ,\n                   i_category_id ,\n                   i_manufact_id ,\n                   ws_quantity - COALESCE(wr_return_quantity,0) AS sales_cnt ,\n                   ws_ext_sales_price - COALESCE(wr_return_amt,0.0) AS sales_amt\n      FROM web_sales\n      JOIN item ON i_item_sk=ws_item_sk\n      JOIN date_dim ON d_date_sk=ws_sold_date_sk\n      LEFT JOIN web_returns ON (ws_order_number=wr_order_number\n                                AND ws_item_sk=wr_item_sk)\n      WHERE i_category='Books') sales_detail\n   GROUP BY d_year,\n            i_brand_id,\n            i_class_id,\n            i_category_id,\n            i_manufact_id",
    "cte_name": "all_sales",
    "file_name": "all-tpcds.sql",
    "file_path": "https://github.com/hannes/peg-parser-experiments/blob/388c95119eb6b048b140cfe3f58206c216d342bb/all-tpcds.sql",
    "file_size": 184479,
    "num_branches": 1,
    "num_commits": 5,
    "num_prs": 0,
    "repo_contributors": 0,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/hannes/peg-parser-experiments",
    "repo_releases": 0,
    "repo_size": 229,
    "repo_stars": 0,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is aggregating the total sales count (sales_cnt) and total sales amount (sales_amt) for books from three different sales sources (catalog, store, web) by year, brand, class, category, and manufacturer, while accounting for returns by using the COALESCE function to replace NULL return quantities and amounts with 0. The data is first combined from the three sources using UNION, and then grouped and summarized.",
    "phrase_similarity": 0.40929338335990906,
    "Mistral-7B-Instruct-v0.3-cte-name": "'CTE_BooksSalesDetail'",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.2967892289161682,
    "Curated-score": 5,
    "gpt-4o-name-evaluation": "4",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"all_sales",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"all_sales\" as a score of 2.\n\nThe name \"all_sales\" is a placeholder name that does not provide any information about the purpose or content of the CTE. It does not describe what type of sales data is being aggregated, nor does it indicate the specific categories or items being considered. A more descriptive name would be something like \"book_sales_by_year_and_item\" to reflect the fact that it's aggregating sales data for books by year and item.",
    "Phi-3.5-mini-instruct-name-evaluation": "3\n\nThe proposed name \"all_sales\" is very generic and does not provide specific details about what the CTE is aggregating or the context of the data. It lacks information about the time frame (d_year), product categories (i_category), or the type of sales (catalog_sales, store_sales, web_sales). A more descriptive name would include these elements to clearly indicate the purpose of the CTE.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"all_sales\" as follows:\n\nScore: 6\n\nThe reason is that the name does not clearly reflect the purpose of the CTE, which appears to be aggregating sales data for each category. The name",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "8 \n"
  },
  {
    "Repo": "PhiLong-Project-Portfolio/Sales_Insights_with_AdventureWorks",
    "SQL": "SELECT\r\n\t\tcus.CustomerKey,\r\n\t\tcus.FirstName,\r\n\t\tcus.LastName,\r\n\t\tSUM(fs.SalesAmount) AS TotalSales,\r\n\t\tCOUNT(DISTINCT fs.SalesOrderNumber) AS TotalOrders\r\n\tFROM\r\n\t\tAdventureWorksDW.dbo.FactInternetSales fs\r\n\tJOIN AdventureWorksDW.dbo.DimCustomer cus ON fs.CustomerKey = cus.CustomerKey\r\n\tGROUP BY\r\n\t\tcus.CustomerKey,\r\n\t\tcus.FirstName,\r\n\t\tcus.LastName",
    "cte_name": "CustomerSales",
    "file_name": "Sales Analysis Using SQL.sql",
    "file_path": "https://github.com/PhiLong-Project-Portfolio/Sales_Insights_with_AdventureWorks/blob/fae99f5356dd33e682a9254f69e5ef468e665dd2/Sales%20Analysis%20Using%20SQL.sql",
    "file_size": 6942,
    "num_branches": 1,
    "num_commits": 34,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/PhiLong-Project-Portfolio/Sales_Insights_with_AdventureWorks",
    "repo_releases": 0,
    "repo_size": 7082,
    "repo_stars": 1,
    "schema": [
      "AdventureWorks"
    ],
    "summary": "This SQL code is retrieving the CustomerKey, FirstName, LastName, Total Sales (SUM of SalesAmount), and Total Orders (COUNT of distinct SalesOrderNumber) for each customer from the AdventureWorksDW database, joining data from FactInternetSales and DimCustomer tables, and grouping the results by customer.",
    "phrase_similarity": 0.3493363559246063,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_CustomerSales_Summary`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.3995913565158844,
    "Curated-score": 8,
    "gpt-4o-name-evaluation": "8",
    "gpt-4-turbo-name-evaluation": "7",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"CustomerSales\" for the CTE is somewhat descriptive, as it suggests that the result set contains sales-related data for customers. However, it does not explicitly indicate that the data includes both the total sales and the total orders for each customer. Therefore, I would give it a score of 6. A more descriptive name could be \"CustomerTotalSalesAndOrders\".",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"CustomerSales\" as a score of 8.\n\nThe name \"CustomerSales\" is descriptive and accurately reflects the purpose of the CTE, which is to summarize sales data for each customer. It clearly indicates that the CTE is related to customer sales, and it's easy to understand what the CTE is trying to achieve. However, it's not extremely detailed or specific, which is why I wouldn't give it a perfect score of 10. Nevertheless, it's a clear and concise name that effectively conveys the purpose of the CTE.",
    "Phi-3.5-mini-instruct-name-evaluation": "5\n\nThe name \"CustomerSales\" is somewhat descriptive, indicating that the CTE involves customers and sales. However, it lacks specificity regarding the aggregation (SUM of sales amounts) and the distinct count of sales orders. A more descriptive name could include these elements, such as \"TotalSalesAndOrdersPerCustomer,\" which would better reflect the purpose of the CTE. Therefore, a score of 5 is given as it's somewhat descriptive but not fully comprehensive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"CustomerSales\" as follows:\n\nName: TotalSalesPerCustomer\nExpected score: 9\n\nReasoning:\nThe name clearly reflects the purpose of the CTE, which is to calculate the total sales per customer",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "FlipsideCrypto/solana-models",
    "SQL": "SELECT\n        *\n    FROM\n        {{ ref('silver__events') }}\n    WHERE\n        program_id IN (\n            '675kPX9MHTjS2zt1qfr1NYHuzeLXfQM9H24wFSUt1Mp8',\n            '5quBtoiQqxF9Jv6KYKctB59NT3gtJD2Y65kdnB1Uev3h',\n            '27haf8L6oxUeXrHrgEgsexjSY5hbVUWEmvv9Nyxg8vQv'\n        )\n\n{% if is_incremental() %}\nAND _inserted_timestamp >= (\n    SELECT\n        MAX(_inserted_timestamp)\n    FROM\n        {{ this }}\n)\n{% else %}\n    AND block_timestamp :: DATE >= '2021-03-06'\n{% endif %}",
    "cte_name": "base_events",
    "file_name": "silver__initialization_pools_raydium.sql",
    "file_path": "https://github.com/FlipsideCrypto/solana-models/blob/ca588ca749e5ffd10002525ef163bd30fec0ad6e/models/silver/liquidity_pool/silver__initialization_pools_raydium.sql",
    "file_size": 5022,
    "num_branches": 81,
    "num_commits": 763,
    "num_prs": 653,
    "repo_contributors": 11,
    "repo_description": "Solana Data Models",
    "repo_forks": 3,
    "repo_path": "https://github.com/FlipsideCrypto/solana-models",
    "repo_releases": 0,
    "repo_size": 5140,
    "repo_stars": 18,
    "schema": [
      "HR"
    ],
    "summary": "This SQL code is retrieving all columns from the 'silver__events' table where the 'program_id' is one of the provided IDs. If the script is running incrementally, it also filters events with an inserted timestamp greater than the maximum timestamp of the current table. If it's not an incremental run, it filters events with a block timestamp date equal to or greater than '2021-03-06'.",
    "phrase_similarity": 0.34185197949409485,
    "Mistral-7B-Instruct-v0.3-cte-name": "'CTE_FilteredSilverEvents'",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.3173084855079651,
    "Curated-score": 3,
    "gpt-4o-name-evaluation": "6",
    "gpt-4-turbo-name-evaluation": "6",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"base_events\" for the SQL statement is somewhat descriptive, as it suggests that the CTE contains events data. However, it does not clearly indicate that the events are filtered by specific program IDs or that the data might be incremental or non-incremental, nor does it suggest the date range for non-incremental data. Therefore, I would give it a score of 5. A more descriptive name could be something like \"filtered_program_events\" or \"incremental_program_events_2021-03-06\" to better reflect the purpose of the CTE.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"base_events\" as a score of 8.\n\nThe name \"base_events\" is descriptive and accurately reflects the purpose of the CTE, which is to select events from the \"silver__events\" table where the program_id matches certain values. The name does not provide a lot of additional context, but it clearly indicates that the CTE is related to events, which is a significant part of the SQL statement.",
    "Phi-3.5-mini-instruct-name-evaluation": "4\n\nThe name \"base_events\" is somewhat descriptive, indicating that it pertains to a set of events. However, it lacks specificity regarding the filtering criteria (program_id values and the timestamp condition). A more descriptive name might include references to the filtering conditions or the incremental nature of the data retrieval. Therefore, it receives a score of 4, as it's better than a generic placeholder but still not fully descriptive of the CTE's purpose.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the name \"base_events\" as a score of 6 out of 10.\n\nThe reason is that while the name clearly indicates what type of data it's referring to (events), it doesn't provide any specific information about the",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "4 \n"
  },
  {
    "Repo": "marinfotache/Baze-de-date-I",
    "SQL": "select milliseconds / 1000 as duration_seconds\n\tfrom track\n\t\tinner join album on track.albumid = album.albumid\n\t\tinner join artist on album.artistid = artist.artistid\n\twhere artist.name = 'U2'\n\torder by milliseconds desc\n\tlimit 9",
    "cte_name": "top_9_u2",
    "file_name": "chinook_10_sql_expresii_tabele_totaluri.sql",
    "file_path": "https://github.com/marinfotache/Baze-de-date-I/blob/fca74dcdb2f0cc1598391f26a76320d74f26ec1c/chinook%20-%20studiu%20de%20caz%20(SQL%20&%20tidyverse)/chinook_10_sql_expresii_tabele_totaluri.sql",
    "file_size": 16463,
    "num_branches": 1,
    "num_commits": 361,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "Resurse necesare cursului Baze de date I (Univ. Al.I.Cuza Iasi, FEAA, specializarile Informatica Economica, Statistica si CIG)",
    "repo_forks": 17,
    "repo_path": "https://github.com/marinfotache/Baze-de-date-I",
    "repo_releases": 0,
    "repo_size": 82254,
    "repo_stars": 15,
    "schema": [
      "Chinook"
    ],
    "summary": "This SQL code is retrieving the duration of the top 9 tracks (in seconds) from all albums by the artist 'U2', sorted in descending order by track duration (milliseconds converted to seconds), and joined with the corresponding album and artist information.",
    "phrase_similarity": 0.3548755645751953,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_U2_Top_9_Track_Durations`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.5185198187828064,
    "Curated-score": 10,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"top_9_u2\" for the SQL statement is quite descriptive and accurately reflects the purpose of the query, which is to retrieve the top 9 records (sorted by milliseconds in desc",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"top_9_u2\" as a score of 6.\n\nThe name \"top_9_u2\" is somewhat descriptive, as it mentions the specific artist \"U2\" and the fact that it's the top 9 results. However, it doesn't fully convey the purpose of the CTE, which is to retrieve the duration of tracks by U2 in descending order. The name could be more descriptive and accurate, such as \"u2_track_durations\" or \"top_tracks_by_u2\".",
    "Phi-3.5-mini-instruct-name-evaluation": "7\n\nThe name \"top_9_u2\" indicates that the CTE is related to the top 9 tracks by duration of artists named 'U2'. However, it could be more descriptive by including the unit of measurement (seconds) and the calculation performed (duration in seconds). A more comprehensive name might be \"top_9_u2_duration_seconds\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"top_9_u2\" as follows:\n\nScore: 7\n\nThe reason for this score is that the name does not clearly indicate what result set the SQL statement is trying to produce. The word \"top",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "8 \n"
  },
  {
    "Repo": "thirstler/benchgo",
    "SQL": "select ws1.ws_order_number,ws1.ws_warehouse_sk wh1,ws2.ws_warehouse_sk wh2\n from web_sales ws1,web_sales ws2\n where ws1.ws_order_number = ws2.ws_order_number\n   and ws1.ws_warehouse_sk <> ws2.ws_warehouse_sk",
    "cte_name": "ws_wh",
    "file_name": "query_5.sql",
    "file_path": "https://github.com/thirstler/benchgo/blob/54953f12db88b1a7a67afdd9dff20767fae78e73/src/benchgo/queries/trino/tpcds/sf10/8/query_5.sql",
    "file_size": 161701,
    "num_branches": 3,
    "num_commits": 24,
    "num_prs": 3,
    "repo_contributors": 1,
    "repo_description": "Control scripts for running db benchmarks",
    "repo_forks": 0,
    "repo_path": "https://github.com/thirstler/benchgo",
    "repo_releases": 1,
    "repo_size": 2859,
    "repo_stars": 0,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is retrieving the order number and warehouse SK from two different web sales records for the same order, but for different warehouses.",
    "phrase_similarity": 0.1312830150127411,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_MultiWarehouseOrders`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.23910628259181976,
    "Curated-score": 2,
    "gpt-4o-name-evaluation": "3",
    "gpt-4-turbo-name-evaluation": "3",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"ws_wh\" is quite vague and does not clearly reflect the purpose of the CTE. It does not indicate that the result set contains order numbers and warehouse SKs from two different warehouses for the same order number. I would give it a score of 2. A more descriptive name could be something like \"different_warehouse_orders\" or \"multi_warehouse_order_numbers\".",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"ws_wh\" as a score of 2. The name is a combination of the table names \"ws\" and \"wh\", which is a common pattern for placeholder names. It does not provide any information about the purpose or content of the CTE, making it a vague and unrelated name.",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 3\n\nExplanation: The proposed name \"ws_wh\" is very abbreviated and does not clearly describe the purpose of the CTE. It combines two columns (\"ws_order_number\" and \"ws_warehouse_sk\") without indicating what the comparison or relationship between them is. A more descriptive name could be \"OrderWarehouseDiscrepancies\" or \"OrderWarehouseSKDifferences,\" which would better reflect the intent of comparing warehouse SKUs for the same order numbers.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"ws_wh\" as follows:\n\nName: ws_wh\nExpected score: 2\n\nThe reason for this low score is that the name does not clearly reflect the purpose of the CTE. The name suggests a",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "karthik-n-p/UST_TRAINING",
    "SQL": "SELECT \r\n        JobRole,\r\n        CAST((SUM(CASE WHEN Attrition = 'Yes' THEN 1 ELSE 0 END) * 100.0) / COUNT(*) AS decimal) AS Attrition_Percentage\r\n    FROM EmployeeData\r\n    GROUP BY JobRole",
    "cte_name": "AttritionRate",
    "file_name": "Assignment_EmployeeData.sql",
    "file_path": "https://github.com/karthik-n-p/UST_TRAINING/blob/98b4e3fad9c3f22884da9fe101b28ec7cdca5db5/Assignment_EmployeeData.sql",
    "file_size": 14830,
    "num_branches": 1,
    "num_commits": 8,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/karthik-n-p/UST_TRAINING",
    "repo_releases": 0,
    "repo_size": 2987,
    "repo_stars": 0,
    "schema": [
      "Employees"
    ],
    "summary": "This SQL code is calculating the percentage of employees who have left (Attrition_Percentage) for each job role in the EmployeeData table.",
    "phrase_similarity": 0.25080159306526184,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Attrition_Rate_By_JobRole`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.4201279580593109,
    "Curated-score": 10,
    "gpt-4o-name-evaluation": "7",
    "gpt-4-turbo-name-evaluation": "8",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"AttritionRate\" for the CTE is quite descriptive and accurately reflects the purpose of the SQL statement, which calculates the percentage of employees who have left their jobs (attrition) for each job role. I would give it a score of 10.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"AttritionRate\" as a score of 9. The name accurately reflects the purpose of the CTE, which is to calculate the percentage of employees who have attrited (left the company) for each job role. The name is descriptive, concise, and clearly conveys the meaning of the CTE.",
    "Phi-3.5-mini-instruct-name-evaluation": "9\n\nThe name \"AttritionRate\" is quite descriptive, indicating that it calculates a rate related to attrition (employee turnover). It captures the essence of the calculation (percentage) and the context (attrition). However, it could be slightly more specific by including the context of the calculation (e.g., \"JobRoleAttritionRate\") to fully reflect the CTE's purpose. Therefore, a score of 9 is appropriate.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"AttritionRate\" as follows:\n\nScore: 6\n\nThe reason is that while the name suggests it's related to attrition (a common concept in HR), it doesn't explicitly convey what kind of attribute",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "8 \n"
  },
  {
    "Repo": "lkwinta/Podstawy-Baz-Danych",
    "SQL": "SELECT TOP 1  CategoryID, SUM(Quantity*[Order Details].UnitPrice*(1-Discount)) AS OrderValue\n         FROM [Order Details]\n                INNER JOIN Products ON [Order Details].ProductID = Products.ProductID\n                INNER JOIN Orders ON [Order Details].OrderID = Orders.OrderID\n         WHERE YEAR(OrderDate) = 1997\n         GROUP BY CategoryID\n         ORDER BY SUM(Quantity*[Order Details].UnitPrice*(1-Discount)) DESC",
    "cte_name": "top_category",
    "file_name": "sql_zadania_kolos_2023.sql",
    "file_path": "https://github.com/lkwinta/Podstawy-Baz-Danych/blob/01a26898b6fc4f13362019effef032aec64429cf/sql_zadania_kolos_2023.sql",
    "file_size": 6523,
    "num_branches": 1,
    "num_commits": 8,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": null,
    "repo_forks": 0,
    "repo_path": "https://github.com/lkwinta/Podstawy-Baz-Danych",
    "repo_releases": 0,
    "repo_size": 18,
    "repo_stars": 0,
    "schema": [
      "Northwind"
    ],
    "summary": "This SQL code is finding the top category with the highest total value of orders (excluding discounts) from the year 1997, by summing the quantity of each product multiplied by its unit price, grouped by category, and ordered in descending order.",
    "phrase_similarity": 0.4966091215610504,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_TopCategoryOrderValue_1997`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.32225775718688965,
    "Curated-score": 8,
    "gpt-4o-name-evaluation": "7",
    "gpt-4-turbo-name-evaluation": "6",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"top_category\" for the CTE is somewhat descriptive, but it could be more specific about the calculation being performed. A more comprehensive name might be \"highest_revenue_category_from_1997_orders\". So, I would give it a score of 6. It's not vague, but it could be more descriptive.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"top_category\" as a score of 6.\n\nThe name \"top_category\" is somewhat descriptive, as it indicates that the CTE is related to categories, and the fact that it's the \"top\" one implies that it's the highest or most valuable in some way. However, it doesn't fully convey the purpose of the CTE, which is to calculate the total order value for each category in the year 1997. It also doesn't mention the specific calculation or the filtering by year, which might make it less clear to someone reading the code what the CTE is intended to do.",
    "Phi-3.5-mini-instruct-name-evaluation": "5\n\nThe name \"top_category\" is somewhat descriptive, indicating that the CTE is focused on categories and likely involves some form of ranking or selection. However, it lacks specificity regarding the calculation (OrderValue) and the criteria (SUM of discounted order values for the year 1997). A more descriptive name could include these elements, such as \"TopCategoryOrderValue1997\", which would better reflect the purpose of the CTE. Therefore, a score of 5 is given as it is somewhat descriptive but not fully comprehensive.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"top_category\" as follows:\n\nThe name is vague and does not clearly reflect the purpose of the CTE. It simply states that the result set should be named \"top_category\", without any indication of what this",
    "qwen2.5-coder-3b-instruct-name-evaluation": "5",
    "gemma-2-2b-it-name-evaluation": "2 \n"
  },
  {
    "Repo": "AmitP28/RSVP-Movies",
    "SQL": "SELECT\n        n.name AS actress_name,\n        SUM(r.total_votes) AS total_votes,\n        COUNT(r.movie_id) AS movie_count,\n        ROUND(SUM(avg_rating * r.total_votes) / SUM(r.total_votes), 2) AS actress_avg_rating\n    FROM\n        movie AS m\n    INNER JOIN\n        ratings AS r ON m.id = r.movie_id\n    INNER JOIN\n        role_mapping AS rm ON m.id = rm.movie_id\n    INNER JOIN\n        names AS n ON rm.name_id = n.id\n    INNER JOIN\n        genre AS g ON g.movie_id = m.id\n    WHERE\n        rm.category = 'ACTRESS'\n        AND r.avg_rating > 8\n        AND g.genre = 'Drama'\n    GROUP BY\n        n.name\n    ORDER BY\n        COUNT(r.movie_id) DESC\n    LIMIT 3",
    "cte_name": "top_3_actress",
    "file_name": "IMDB Case Study.sql",
    "file_path": "https://github.com/AmitP28/RSVP-Movies/blob/70e62f4b8760c41aed316b61f8c22cbf7197b68b/IMDB%20Case%20Study.sql",
    "file_size": 29738,
    "num_branches": 1,
    "num_commits": 7,
    "num_prs": 0,
    "repo_contributors": 1,
    "repo_description": "RSVP Movies is an Indian film production company which has produced many super-hit movies. They have usually released movies for the Indian audience but for their next project, they are planning to release a movie for the global audience in 2022.  The production company wants to plan their every move analytically based on data.",
    "repo_forks": 0,
    "repo_path": "https://github.com/AmitP28/RSVP-Movies",
    "repo_releases": 0,
    "repo_size": 2456,
    "repo_stars": 0,
    "schema": [
      "IMDB"
    ],
    "summary": "This SQL code is retrieving the names of actresses, the total number of movies they've acted in, the total votes they've received, and their average rating (rounded to 2 decimal places), from movies in the 'Drama' genre, where the average rating is greater than 8. The results are grouped by actress name and ordered by the number of movies they've acted in in descending order, and only the top 3 results are returned.",
    "phrase_similarity": 0.4867422580718994,
    "Mistral-7B-Instruct-v0.3-cte-name": "'CTE_TOP_DRAMA_ACTRESSES'",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.5460559725761414,
    "Curated-score": 7,
    "gpt-4o-name-evaluation": "5",
    "gpt-4-turbo-name-evaluation": "4",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "The proposed name \"top_3_actress\" for the CTE is quite descriptive and accurately reflects the purpose of the SQL statement, which is to find the top 3 actresses with the highest average rating in drama movies with more than 8 votes, ordered by the number of movies they've appeared in. I would give it a score of 9.",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the proposed name \"top_3_actress\" as a score of 8.\n\nThe name is descriptive and accurately reflects the purpose of the CTE, which is to identify the top 3 actresses in the Drama genre with the highest total votes and average rating. The name is concise and easy to understand, making it a clear and effective choice. However, it could be slightly improved by adding more context, such as \"top_3_drama_actresses\" to make it even more specific and descriptive.",
    "Phi-3.5-mini-instruct-name-evaluation": "4\n\nThe proposed name \"top_3_actress\" is somewhat descriptive as it indicates that the result set will contain the top 3 actresses. However, it does not convey information about the criteria used to rank these actresses (e.g., total votes, movie count, or average rating). A more comprehensive name would include these aspects, such as \"top_3_actresses_by_votes_and_rating_in_drama_genre\". This would score closer to 8 or 9 for its descriptiveness.",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"top_3_actress\" as follows:\n\nScore: 6\n\nReasoning:\n\n* The name is descriptive, but it doesn't clearly indicate what the CTE is trying to produce. It's not immediately",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  },
  {
    "Repo": "vimtex/ds_projects",
    "SQL": "SELECT \n        salesRepEmployeeNumber employeeNumber,\n        SUM(quantityOrdered * priceEach) sales\n    FROM\n        orders\n            INNER JOIN\n        orderdetails USING (orderNumber)\n            INNER JOIN\n        customers USING (customerNumber)\n    WHERE\n        YEAR(shippedDate) = 2003\n            AND status = 'Shipped'\n    GROUP BY salesRepEmployeeNumber\n    ORDER BY sales DESC\n    LIMIT 5",
    "cte_name": "topsales2003",
    "file_name": "mysqltutor.sql",
    "file_path": "https://github.com/vimtex/ds_projects/blob/3f327055cc245fa503ac0bd3188292b6715e6aa7/misc/mysqltutor.sql",
    "file_size": 154206,
    "num_branches": 9,
    "num_commits": 17,
    "num_prs": 16,
    "repo_contributors": 1,
    "repo_description": "My personal projects in Data Science",
    "repo_forks": 0,
    "repo_path": "https://github.com/vimtex/ds_projects",
    "repo_releases": 0,
    "repo_size": 98072,
    "repo_stars": 0,
    "schema": [
      "ClassicModels"
    ],
    "summary": "This SQL code is retrieving the employee number and total sales for each sales representative in the year 2003, where the order status is 'Shipped', from the orders, orderdetails, and customers tables, and it is sorting the results in descending order of total sales, limiting the output to the top 5 records.",
    "phrase_similarity": 0.17956511676311493,
    "Mistral-7B-Instruct-v0.3-cte-name": "`CTE_Y2K_Sales_Ranking`",
    "Mistral-7B-Instruct-v0.3-phrase_similarity": 0.41651010513305664,
    "Curated-score": 8,
    "gpt-4o-name-evaluation": "7",
    "gpt-4-turbo-name-evaluation": "8",
    "Mistral-7B-Instruct-v0.3-name-evaluation": "6\n\nThe name \"topsales2003\" is",
    "Meta-Llama-3-8B-Instruct-name-evaluation": "I would evaluate the name \"topsales2003\" as a score of 8.\n\nThe name \"topsales2003\" is descriptive and accurately reflects the purpose of the CTE, which is to identify the top 5 sales representatives by sales in the year 2003. The name clearly indicates the time period and the metric being measured, making it easy to understand the purpose of the CTE. However, it could be slightly more comprehensive by including the fact that it's a ranking of sales representatives, but overall, it's a clear and concise name.",
    "Phi-3.5-mini-instruct-name-evaluation": "Score: 6\n\nExplanation: The name \"topsales2003\" indicates that the CTE is related to sales figures from the year 2003, which is somewhat descriptive. However, it lacks specificity regarding what the top sales represent (e.g., top sales reps, top products, etc.) and does not mention the aggregation method (SUM) or the ordering criteria (DESC). A more descriptive name could include these elements, such as \"TopSalesReps2003_SummedOrderSales_Descending\".",
    "llama-3.2-1b-instruct-name-evaluation": "I would evaluate the proposed name \"topsales2003\" as follows:\n\nScore: 7\n\nThe reason is that while the name clearly indicates what result set the SQL is trying to produce (the top sales for 2003), it does",
    "qwen2.5-coder-3b-instruct-name-evaluation": "8",
    "gemma-2-2b-it-name-evaluation": "7 \n"
  }
]